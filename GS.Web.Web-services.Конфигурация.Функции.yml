%YAML 1.1
--- 
StructureVersion: "1.0"
Properties: 
  RUID: 148998542_1521203129
  Name: "GS.Web.Web-services.Конфигурация.Функции"
  Caption: "GS.Web.Web-services.Конфигурация.Функции"
  Version: "1.0.0.221"
  Optional: False
  Internal: True
  MD5: 9BCAC67B0694CE6B5EEF0F1BC30E1233
Uses: 
  - "147029090_1220419898 GS.Общие.Функции работы с json"
  - "148998332_1521203129 GS.Web.Web-services.Конфигурация.Метаданные"
Objects: 
  - 
    Properties: 
      Class: "TgdcFunction"
      RUID: 1176268537_1457844439
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
    Fields: 
      NAME: "gdmn_show_config"
      COMMENT: ~
      EVENT: ~
      FUNCTIONTYPE: ~
      GROUPNAME: ~
      INHERITEDRULE: 0
      LANGUAGE: "VBScript"
      LOCALNAME: ~
      MODIFYDATE: 2021-06-15T18:45:01+03:00
      MODULE: "UNKNOWN"
      MODULECODE: "1010001_17 APPLICATION"
      OBJECTNAME: "APPLICATION"
      OWNERNAME: ~
      PUBLICFUNCTION: 1
      SHORTCUT: ~
      USEDEBUGINFO: ~
      EDITIONDATE: 2020-10-20T19:50:38+03:00
      DISPLAYSCRIPT: | 
        GDMN_SHOW_CONFIG
        
      ENTEREDPARAMS: ~
      SCRIPT: | 
        Option Explicit
        Function gdmn_show_config
          dim options
          set options = New TVB_Web_Service
          options.SetupOptions
        End Function
        
  - 
    Properties: 
      Class: "TgdcReportGroup"
      RUID: 1176268404_1457844439
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
      HeadObject: 170497708_1488307703
    Fields: 
      PARENT: ~
      NAME: "Отчеты(usrf_gdmn_config)"
      DESCRIPTION: ~
      USERGROUPNAME: "1176268404_1457844439"
      EDITIONDATE: 2020-07-08T17:45:35+03:00
  - 
    Properties: 
      Class: "TgdcMacrosGroup"
      RUID: 1176268403_1457844439
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
      HeadObject: 170497708_1488307703
    Fields: 
      PARENT: ~
      NAME: "Локальные макросы"
      CLASSNAME: ""
      ISGLOBAL: 0
      OBJECTNAME: "usrf_gdmn_config"
      OBJECTPARENT: ~
      SUBTYPE: ""
      EDITIONDATE: 2020-07-08T17:45:35+03:00
      DESCRIPTION: ~
  - 
    Properties: 
      Class: "TgdcDelphiObject"
      RUID: 1176268402_1457844439
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
      HeadObject: 170497708_1488307703
    Fields: 
      PARENT: ~
      NAME: "usrf_gdmn_config"
      CLASSNAME: ""
      DESCRIPTION: ~
      MACROSGROUPKEY: "1176268403_1457844439 Локальные макросы"
      OBJECTNAME: "usrf_gdmn_config"
      OBJECTTYPE: 0
      REPORTGROUPKEY: "1176268404_1457844439 Отчеты(usrf_gdmn_config)"
      SUBTYPE: ""
      EDITIONDATE: 2020-07-08T17:45:35+03:00
  - 
    Properties: 
      Class: "TgdcFunction"
      RUID: 170497710_1488307703
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
      HeadObject: 170497708_1488307703
    Fields: 
      NAME: "usrf_gdmn_configOnClose"
      COMMENT: ~
      EVENT: "ONCLOSE"
      FUNCTIONTYPE: ~
      GROUPNAME: ~
      INHERITEDRULE: 0
      LANGUAGE: "VBScript"
      LOCALNAME: ~
      MODIFYDATE: 2021-06-15T18:45:01+03:00
      MODULE: "EVENTS"
      MODULECODE: "1176268402_1457844439 usrf_gdmn_config"
      OBJECTNAME: "usrf_gdmn_config"
      OWNERNAME: ~
      PUBLICFUNCTION: 1
      SHORTCUT: ~
      USEDEBUGINFO: 0
      EDITIONDATE: 2020-10-14T23:44:10+03:00
      DISPLAYSCRIPT: | 
        USRF_GDMN_CONFIGONCLOSE
        
      ENTEREDPARAMS: !!binary > 
        U0xQUlBSU1QGAAAAU0VOREVSBgAAAFNFTkRFUgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABGTlNU
        UFJTVAYAAABBQ1RJT04GAAAAQUNUSU9OAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEZOU1RGTFBS
      SCRIPT: | 
        Option Explicit
        Sub usrf_gdmn_configOnClose(ByVal Sender, ByRef Action)
        '*** Данный код необходим для вызова встроенного обработчика ***
        '*** В случае его удаления возможно нарушение работы системы ***
          Dim ParamArr(1)
          Set   ParamArr(0) = Sender
          ParamArr(1) = Action
          call  Inherited(Sender, "OnClose", ParamArr)
          Action.Value = ParamArr(1)
        '*** конец кода поддержки встроенного обработчика            ***
        '  Dim Options, Transaction
        ' ' set Transaction = Sender.GetComponent("usrg_dsDoc").Transaction
        '  If Sender.ModalResult = vbOk Then
        '    Set Options = web_options
        '    Options.userLogin = Sender.GetComponent("usrg_eLogin").Text
        '    Options.userPassw = Sender.GetComponent("usrg_ePassw").Text
        '    Options.webServerURL = Sender.GetComponent("usrg_eURL").Text
        '    Options.SaveToStorage
        '   ' if Transaction.InTransaction  then
        ''       Transaction.Commit
        ''    end if
        '  else
        '    'if Transaction.InTransaction  then
        ''       Transaction.Rollback
        ''    end if
        '  end if
        End Sub
        
  - 
    Properties: 
      Class: "TgdcEvent"
      RUID: 170497708_1488307703
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
    Fields: 
      DISABLE: 0
      EVENTNAME: "ONCLOSE"
      FUNCTIONKEY: "170497710_1488307703 usrf_gdmn_configOnClose"
      OBJECTKEY: "1176268402_1457844439 usrf_gdmn_config"
      OBJECTNAME: "usrf_gdmn_config"
      PARENTNAME: ~
      EDITIONDATE: 2020-10-14T23:44:10+03:00
  - 
    Properties: 
      Class: "TgdcFunction"
      RUID: 1176268554_1457844439
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
      HeadObject: 1176268552_1457844439
    Fields: 
      NAME: "usrf_gdmn_configOnLoadSettingsAfterCreate"
      COMMENT: ~
      EVENT: "ONLOADSETTINGSAFTERCREATE"
      FUNCTIONTYPE: ~
      GROUPNAME: ~
      INHERITEDRULE: 0
      LANGUAGE: "VBScript"
      LOCALNAME: ~
      MODIFYDATE: 2021-06-15T18:45:01+03:00
      MODULE: "EVENTS"
      MODULECODE: "1176268402_1457844439 usrf_gdmn_config"
      OBJECTNAME: "usrf_gdmn_config"
      OWNERNAME: ~
      PUBLICFUNCTION: 1
      SHORTCUT: ~
      USEDEBUGINFO: ~
      EDITIONDATE: 2020-11-04T10:17:37+03:00
      DISPLAYSCRIPT: | 
        USRF_GDMN_CONFIGONLOADSETTINGSAFTERCREATE
        
      ENTEREDPARAMS: !!binary > 
        U0xQUlBSU1QGAAAAU0VOREVSBgAAAFNFTkRFUgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABGTlNU
        RkxQUg==
      SCRIPT: | 
        Option Explicit
        Sub usrf_gdmn_configOnLoadSettingsAfterCreate(ByVal Sender)
        '*** Данный код необходим для вызова встроенного обработчика ***
        '*** В случае его удаления возможно нарушение работы системы ***
          Call   Inherited(Sender, "OnLoadSettingsAfterCreate", Array(Sender))
        '*** конец кода поддержки встроенного обработчика            ***
         Sender.LoadGrid(Sender.GetComponent("usrg_grDoc"))
         Sender.LoadGrid(Sender.GetComponent("usrg_grRef"))
         Sender.LoadGrid(Sender.GetComponent("usrg_grUserQuery"))
         Sender.LoadGrid(Sender.GetComponent("usrg_grRemains"))
         Sender.LoadGrid(Sender.GetComponent("usrg_grParams"))
         Sender.LoadGrid(Sender.GetComponent("usrg_grParamsLine"))
        End Sub
        
  - 
    Properties: 
      Class: "TgdcEvent"
      RUID: 1176268552_1457844439
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
    Fields: 
      DISABLE: ~
      EVENTNAME: "ONLOADSETTINGSAFTERCREATE"
      FUNCTIONKEY: "1176268554_1457844439 usrf_gdmn_configOnLoadSettingsAfterCreate"
      OBJECTKEY: "1176268402_1457844439 usrf_gdmn_config"
      OBJECTNAME: "usrf_gdmn_config"
      PARENTNAME: ~
      EDITIONDATE: 2020-11-04T10:17:37+03:00
  - 
    Properties: 
      Class: "TgdcFunction"
      RUID: 1176268551_1457844439
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
      HeadObject: 1176268549_1457844439
    Fields: 
      NAME: "usrf_gdmn_configOnSaveSettings"
      COMMENT: ~
      EVENT: "ONSAVESETTINGS"
      FUNCTIONTYPE: ~
      GROUPNAME: ~
      INHERITEDRULE: 0
      LANGUAGE: "VBScript"
      LOCALNAME: ~
      MODIFYDATE: 2021-06-15T18:45:01+03:00
      MODULE: "EVENTS"
      MODULECODE: "1176268402_1457844439 usrf_gdmn_config"
      OBJECTNAME: "usrf_gdmn_config"
      OWNERNAME: ~
      PUBLICFUNCTION: 1
      SHORTCUT: ~
      USEDEBUGINFO: ~
      EDITIONDATE: 2020-11-04T10:15:37+03:00
      DISPLAYSCRIPT: | 
        USRF_GDMN_CONFIGONSAVESETTINGS
        
      ENTEREDPARAMS: !!binary > 
        U0xQUlBSU1QGAAAAU0VOREVSBgAAAFNFTkRFUgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABGTlNU
        RkxQUg==
      SCRIPT: | 
        Option Explicit
        Sub usrf_gdmn_configOnSaveSettings(ByVal Sender)
        '*** Данный код необходим для вызова встроенного обработчика ***
        '*** В случае его удаления возможно нарушение работы системы ***
          Call   Inherited(Sender, "OnSaveSettings", Array(Sender))
        '*** конец кода поддержки встроенного обработчика            ***
          Sender.SaveGrid(Sender.GetComponent("usrg_grDoc"))
          Sender.SaveGrid(Sender.GetComponent("usrg_grRef"))
          Sender.SaveGrid(Sender.GetComponent("usrg_grUserQuery"))
          Sender.SaveGrid(Sender.GetComponent("usrg_grRemains"))
          Sender.SaveGrid(Sender.GetComponent("usrg_grParams"))
          Sender.SaveGrid(Sender.GetComponent("usrg_grParamsLine"))
        End Sub
        
  - 
    Properties: 
      Class: "TgdcEvent"
      RUID: 1176268549_1457844439
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
    Fields: 
      DISABLE: ~
      EVENTNAME: "ONSAVESETTINGS"
      FUNCTIONKEY: "1176268551_1457844439 usrf_gdmn_configOnSaveSettings"
      OBJECTKEY: "1176268402_1457844439 usrf_gdmn_config"
      OBJECTNAME: "usrf_gdmn_config"
      PARENTNAME: ~
      EDITIONDATE: 2020-11-04T10:15:37+03:00
  - 
    Properties: 
      Class: "TgdcFunction"
      RUID: 1176268541_1457844439
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
      HeadObject: 1176268539_1457844439
    Fields: 
      NAME: "usrf_gdmn_configOnShow"
      COMMENT: ~
      EVENT: "ONSHOW"
      FUNCTIONTYPE: ~
      GROUPNAME: ~
      INHERITEDRULE: 0
      LANGUAGE: "VBScript"
      LOCALNAME: ~
      MODIFYDATE: 2021-06-15T18:45:01+03:00
      MODULE: "EVENTS"
      MODULECODE: "1176268402_1457844439 usrf_gdmn_config"
      OBJECTNAME: "usrf_gdmn_config"
      OWNERNAME: ~
      PUBLICFUNCTION: 1
      SHORTCUT: ~
      USEDEBUGINFO: ~
      EDITIONDATE: 2020-10-14T23:44:01+03:00
      DISPLAYSCRIPT: | 
        USRF_GDMN_CONFIGONSHOW
        
      ENTEREDPARAMS: !!binary > 
        U0xQUlBSU1QGAAAAU0VOREVSBgAAAFNFTkRFUgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABGTlNU
        RkxQUg==
      SCRIPT: | 
        Option Explicit
        Sub usrf_gdmn_configOnShow(ByVal Sender)
        '*** Данный код необходим для вызова встроенного обработчика ***
        '*** В случае его удаления возможно нарушение работы системы ***
          Call   Inherited(Sender, "OnShow", Array(Sender))
        '*** конец кода поддержки встроенного обработчика            ***
        '  Sender.OwnerForm.GetComponent("usrg_pcMain").ActivePageIndex = 0
        '
        '  dim IBDataSet,  IBDataSetRef, IBDataSetUserQuery, gdcRemains
        '  set IBDataSet = Sender.OwnerForm.GetComponent("usrg_dsDoc")
        '  IBDataSet.Open
        '
        '  set IBDataSetRef = Sender.OwnerForm.GetComponent("usrg_gdcRef")
        '  IBDataSetRef.Open
        '
        '  set gdcRemains = Sender.GetComponent("usrg_gdcRemains")
        '  gdcRemains.Open
        '
        '  set IBDataSetUserQuery = Sender.OwnerForm.GetComponent("usrg_gdcUserQuery")
        '  IBDataSetUserQuery.Open
        '
        '  Sender.GetComponent("usrg_pcSubSystem").Visible = false
        
        '  dim Options
        '  Set Options = web_options
        '  Options.LoadFromStorage
        '
        '  If Options.userLogin = "False" Then
        '    Sender.GetComponent("usrg_eLogin").Text = ""
        '  Else
        '    Sender.GetComponent("usrg_eLogin").Text = Options.userLogin
        '  End If
        '  Sender.FindComponent("usrg_ePassw").PasswordChar = "*"
        '  If Options.userPassw = "False" Then
        '    Sender.GetComponent("usrg_ePassw").Text = ""
        '  Else
        '    Sender.GetComponent("usrg_ePassw").Text = Options.userPassw
        '  End If
        '  If Options.webServerURL = "False" Then
        '    Sender.GetComponent("usrg_eURL").Text = ""
        '  Else
        '    Sender.GetComponent("usrg_eURL").Text = Options.webServerURL
        '  End If
        End Sub
        
  - 
    Properties: 
      Class: "TgdcEvent"
      RUID: 1176268539_1457844439
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
    Fields: 
      DISABLE: 0
      EVENTNAME: "ONSHOW"
      FUNCTIONKEY: "1176268541_1457844439 usrf_gdmn_configOnShow"
      OBJECTKEY: "1176268402_1457844439 usrf_gdmn_config"
      OBJECTNAME: "usrf_gdmn_config"
      PARENTNAME: ~
      EDITIONDATE: 2020-10-14T23:44:01+03:00
  - 
    Properties: 
      Class: "TgdcFunction"
      RUID: 1176268536_1457844439
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
      HeadObject: 1176268534_1457844439
    Fields: 
      NAME: "usrg_lcSystemsOnChange"
      COMMENT: ~
      EVENT: "ONCHANGE"
      FUNCTIONTYPE: ~
      GROUPNAME: ~
      INHERITEDRULE: 0
      LANGUAGE: "VBScript"
      LOCALNAME: ~
      MODIFYDATE: 2021-06-15T18:45:01+03:00
      MODULE: "EVENTS"
      MODULECODE: "1176268402_1457844439 usrf_gdmn_config"
      OBJECTNAME: "usrf_gdmn_config"
      OWNERNAME: ~
      PUBLICFUNCTION: 1
      SHORTCUT: ~
      USEDEBUGINFO: ~
      EDITIONDATE: 2020-11-04T10:20:25+03:00
      DISPLAYSCRIPT: | 
        USRG_LCSYSTEMSONCHANGE
        
      ENTEREDPARAMS: !!binary > 
        U0xQUlBSU1QGAAAAU0VOREVSBgAAAFNFTkRFUgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABGTlNU
        RkxQUg==
      SCRIPT: | 
        Option Explicit
        Sub usrg_lcSystemsOnChange(ByVal Sender)
        '*** Данный код необходим для вызова встроенного обработчика ***
        '*** В случае его удаления возможно нарушение работы системы ***
          Call   Inherited(Sender, "OnChange", Array(Sender))
        '*** конец кода поддержки встроенного обработчика            ***
          dim IBDataSet,  IBDataSetRef, gdcRemains
          set IBDataSet = Sender.OwnerForm.GetComponent("usrg_gdcDoc")
          IBDataSet.Close
          IBDataSet.ExtraConditions.Clear
          IBDataSet.ExtraConditions.Add("z.USR$SYSTEMKEY = " & Sender.CurrentkeyInt)
          IBDataSet.Open
        '
          set IBDataSetRef = Sender.OwnerForm.GetComponent("usrg_gdcRef")
          IBDataSetRef.Close
          IBDataSetRef.ExtraConditions.Clear
          IBDataSetRef.ExtraConditions.Add("z.USR$SYSTEMKEY = " & Sender.CurrentkeyInt)
          IBDataSetRef.Open
          
          set gdcRemains = Sender.OwnerForm.GetComponent("usrg_gdcRemains")
          gdcRemains.Close
          gdcRemains.ExtraConditions.Clear
          gdcRemains.ExtraConditions.Add("z.USR$SYSTEMKEY = " & Sender.CurrentkeyInt)
          gdcRemains.Open
          
          dim gdcParams
          set gdcParams = Sender.OwnerForm.GetComponent("usrg_gdcParams")
          gdcParams.Close
          gdcParams.ExtraConditions.Clear
          gdcParams.ExtraConditions.Add("z.USR$SYSTEMKEY = " & Sender.CurrentkeyInt)
          gdcParams.Open
          
          Sender.OwnerForm.GetComponent("usrg_pcSubSystem").Visible = Sender.CurrentkeyInt > 0
        End Sub
        
  - 
    Properties: 
      Class: "TgdcDelphiObject"
      RUID: 1176268533_1457844439
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
      HeadObject: 1176268534_1457844439
    Fields: 
      PARENT: "1176268402_1457844439 usrf_gdmn_config"
      NAME: "usrg_lcSystems"
      CLASSNAME: ""
      DESCRIPTION: ~
      MACROSGROUPKEY: ~
      OBJECTNAME: "usrg_lcSystems"
      OBJECTTYPE: 0
      REPORTGROUPKEY: ~
      SUBTYPE: ""
      EDITIONDATE: 2020-07-08T18:31:17+03:00
  - 
    Properties: 
      Class: "TgdcEvent"
      RUID: 1176268534_1457844439
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
    Fields: 
      DISABLE: ~
      EVENTNAME: "ONCHANGE"
      FUNCTIONKEY: "1176268536_1457844439 usrg_lcSystemsOnChange"
      OBJECTKEY: "1176268533_1457844439 usrf_gdmn_config\\usrg_lcSystems"
      OBJECTNAME: "usrg_lcSystems"
      PARENTNAME: "usrf_gdmn_config"
      EDITIONDATE: 2020-11-04T10:20:26+03:00
  - 
    Properties: 
      Class: "TgdcFunction"
      RUID: 170498819_1488307703
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
      HeadObject: 170498817_1488307703
    Fields: 
      NAME: "usrg_actAddDocOnExecute"
      COMMENT: ~
      EVENT: "ONEXECUTE"
      FUNCTIONTYPE: ~
      GROUPNAME: ~
      INHERITEDRULE: 0
      LANGUAGE: "VBScript"
      LOCALNAME: ~
      MODIFYDATE: 2021-06-15T18:45:01+03:00
      MODULE: "EVENTS"
      MODULECODE: "1176268402_1457844439 usrf_gdmn_config"
      OBJECTNAME: "usrf_gdmn_config"
      OWNERNAME: ~
      PUBLICFUNCTION: 1
      SHORTCUT: ~
      USEDEBUGINFO: 0
      EDITIONDATE: 2020-11-30T18:10:37+03:00
      DISPLAYSCRIPT: | 
        USRG_ACTADDDOCONEXECUTE
        
      ENTEREDPARAMS: !!binary > 
        U0xQUlBSU1QGAAAAU0VOREVSBgAAAFNFTkRFUgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABGTlNU
        RkxQUg==
      SCRIPT: | 
        Option Explicit
        Sub usrg_actAddDocOnExecute(ByVal Sender)
        '*** Данный код необходим для вызова встроенного обработчика ***
        '*** В случае его удаления возможно нарушение работы системы ***
          Call   Inherited(Sender, "OnExecute", Array(Sender))
        '*** конец кода поддержки встроенного обработчика            ***
          dim  DataSet, system
          set DataSet = Sender.OwnerForm.GetComponent("usrg_gdcDoc")
          set system = Sender.OwnerForm.GetComponent("usrg_lcSystems")
          if system.CurrentkeyInt > 0  then
            DataSet.Insert
            DataSet.FieldByName("USR$SYSTEMKEY").AsInteger = system.CurrentkeyInt
          end if
          call DataSet.CreateDialog("")
        End Sub
        
  - 
    Properties: 
      Class: "TgdcDelphiObject"
      RUID: 170498816_1488307703
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
      HeadObject: 170498817_1488307703
    Fields: 
      PARENT: "1176268402_1457844439 usrf_gdmn_config"
      NAME: "usrg_actAddDoc"
      CLASSNAME: ""
      DESCRIPTION: ~
      MACROSGROUPKEY: ~
      OBJECTNAME: "usrg_actAddDoc"
      OBJECTTYPE: 0
      REPORTGROUPKEY: ~
      SUBTYPE: ""
      EDITIONDATE: 2020-07-22T16:55:29+03:00
  - 
    Properties: 
      Class: "TgdcEvent"
      RUID: 170498817_1488307703
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
    Fields: 
      DISABLE: 0
      EVENTNAME: "ONEXECUTE"
      FUNCTIONKEY: "170498819_1488307703 usrg_actAddDocOnExecute"
      OBJECTKEY: "170498816_1488307703 usrf_gdmn_config\\usrg_actAddDoc"
      OBJECTNAME: "usrg_actAddDoc"
      PARENTNAME: "usrf_gdmn_config"
      EDITIONDATE: 2020-11-30T18:10:37+03:00
  - 
    Properties: 
      Class: "TgdcFunction"
      RUID: 170499010_1488307703
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
      HeadObject: 170499008_1488307703
    Fields: 
      NAME: "usrg_actAddRefOnExecute"
      COMMENT: ~
      EVENT: "ONEXECUTE"
      FUNCTIONTYPE: ~
      GROUPNAME: ~
      INHERITEDRULE: 0
      LANGUAGE: "VBScript"
      LOCALNAME: ~
      MODIFYDATE: 2021-06-15T18:45:01+03:00
      MODULE: "EVENTS"
      MODULECODE: "1176268402_1457844439 usrf_gdmn_config"
      OBJECTNAME: "usrf_gdmn_config"
      OWNERNAME: ~
      PUBLICFUNCTION: 1
      SHORTCUT: ~
      USEDEBUGINFO: 0
      EDITIONDATE: 2020-10-08T16:58:29+03:00
      DISPLAYSCRIPT: | 
        USRG_ACTADDREFONEXECUTE
        
      ENTEREDPARAMS: !!binary > 
        U0xQUlBSU1QGAAAAU0VOREVSBgAAAFNFTkRFUgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABGTlNU
        RkxQUg==
      SCRIPT: | 
        Option Explicit
        Sub usrg_actAddRefOnExecute(ByVal Sender)
        '*** Данный код необходим для вызова встроенного обработчика ***
        '*** В случае его удаления возможно нарушение работы системы ***
          Call   Inherited(Sender, "OnExecute", Array(Sender))
        '*** конец кода поддержки встроенного обработчика            ***
          dim  DataSet, system
          set DataSet = Sender.OwnerForm.GetComponent("usrg_gdcRef")
          set system = Sender.OwnerForm.GetComponent("usrg_lcSystems")
          if system.CurrentkeyInt > 0  then
            DataSet.Insert
            DataSet.FieldByName("USR$SYSTEMKEY").AsInteger = system.CurrentkeyInt
            DataSet.Post
            call DataSet.EditDialog("")
          else
            call DataSet.CreateDialog("")
          end if
          DataSet.Refresh
        End Sub
        
  - 
    Properties: 
      Class: "TgdcDelphiObject"
      RUID: 170499007_1488307703
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
      HeadObject: 170499008_1488307703
    Fields: 
      PARENT: "1176268402_1457844439 usrf_gdmn_config"
      NAME: "usrg_actAddRef"
      CLASSNAME: ""
      DESCRIPTION: ~
      MACROSGROUPKEY: ~
      OBJECTNAME: "usrg_actAddRef"
      OBJECTTYPE: 0
      REPORTGROUPKEY: ~
      SUBTYPE: ""
      EDITIONDATE: 2020-07-22T18:38:56+03:00
  - 
    Properties: 
      Class: "TgdcEvent"
      RUID: 170499008_1488307703
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
    Fields: 
      DISABLE: 0
      EVENTNAME: "ONEXECUTE"
      FUNCTIONKEY: "170499010_1488307703 usrg_actAddRefOnExecute"
      OBJECTKEY: "170499007_1488307703 usrf_gdmn_config\\usrg_actAddRef"
      OBJECTNAME: "usrg_actAddRef"
      PARENTNAME: "usrf_gdmn_config"
      EDITIONDATE: 2020-10-08T16:58:29+03:00
  - 
    Properties: 
      Class: "TgdcFunction"
      RUID: 1176280857_1457844439
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
      HeadObject: 1176280855_1457844439
    Fields: 
      NAME: "usrg_actAddRemainsOnExecute"
      COMMENT: ~
      EVENT: "ONEXECUTE"
      FUNCTIONTYPE: ~
      GROUPNAME: ~
      INHERITEDRULE: 0
      LANGUAGE: "VBScript"
      LOCALNAME: ~
      MODIFYDATE: 2021-06-15T18:45:01+03:00
      MODULE: "EVENTS"
      MODULECODE: "1176268402_1457844439 usrf_gdmn_config"
      OBJECTNAME: "usrf_gdmn_config"
      OWNERNAME: ~
      PUBLICFUNCTION: 1
      SHORTCUT: ~
      USEDEBUGINFO: ~
      EDITIONDATE: 2020-10-08T17:00:16+03:00
      DISPLAYSCRIPT: | 
        USRG_ACTADDREMAINSONEXECUTE
        
      ENTEREDPARAMS: !!binary > 
        U0xQUlBSU1QGAAAAU0VOREVSBgAAAFNFTkRFUgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABGTlNU
        RkxQUg==
      SCRIPT: | 
        Option Explicit
        Sub usrg_actAddRemainsOnExecute(ByVal Sender)
        '*** Данный код необходим для вызова встроенного обработчика ***
        '*** В случае его удаления возможно нарушение работы системы ***
          Call   Inherited(Sender, "OnExecute", Array(Sender))
        '*** конец кода поддержки встроенного обработчика            ***
          dim gdcRemains, system
          set gdcRemains = Sender.OwnerForm.GetComponent("usrg_gdcRemains")
          set system = Sender.OwnerForm.GetComponent("usrg_lcSystems")
          gdcRemains.Insert
          if system.CurrentkeyInt > 0  then
            gdcRemains.FieldByName("USR$SYSTEMKEY").AsInteger = system.CurrentkeyInt
          end if
          gdcRemains.FieldByName("USR$MOBILENAME").AsString = "remains"
          gdcRemains.Post
          call gdcRemains.EditDialog("")
          gdcRemains.Refresh
        End Sub
        
  - 
    Properties: 
      Class: "TgdcDelphiObject"
      RUID: 1176280854_1457844439
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
      HeadObject: 1176280855_1457844439
    Fields: 
      PARENT: "1176268402_1457844439 usrf_gdmn_config"
      NAME: "usrg_actAddRemains"
      CLASSNAME: ""
      DESCRIPTION: ~
      MACROSGROUPKEY: ~
      OBJECTNAME: "usrg_actAddRemains"
      OBJECTTYPE: 0
      REPORTGROUPKEY: ~
      SUBTYPE: ""
      EDITIONDATE: 2020-10-08T16:55:54+03:00
  - 
    Properties: 
      Class: "TgdcEvent"
      RUID: 1176280855_1457844439
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
    Fields: 
      DISABLE: ~
      EVENTNAME: "ONEXECUTE"
      FUNCTIONKEY: "1176280857_1457844439 usrg_actAddRemainsOnExecute"
      OBJECTKEY: "1176280854_1457844439 usrf_gdmn_config\\usrg_actAddRemains"
      OBJECTNAME: "usrg_actAddRemains"
      PARENTNAME: "usrf_gdmn_config"
      EDITIONDATE: 2020-10-08T17:00:16+03:00
  - 
    Properties: 
      Class: "TgdcFunction"
      RUID: 1176277474_1457844439
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
      HeadObject: 1176277472_1457844439
    Fields: 
      NAME: "usrg_actAddUserQueryOnExecute"
      COMMENT: ~
      EVENT: "ONEXECUTE"
      FUNCTIONTYPE: ~
      GROUPNAME: ~
      INHERITEDRULE: 0
      LANGUAGE: "VBScript"
      LOCALNAME: ~
      MODIFYDATE: 2021-06-15T18:45:01+03:00
      MODULE: "EVENTS"
      MODULECODE: "1176268402_1457844439 usrf_gdmn_config"
      OBJECTNAME: "usrf_gdmn_config"
      OWNERNAME: ~
      PUBLICFUNCTION: 1
      SHORTCUT: ~
      USEDEBUGINFO: ~
      EDITIONDATE: 2020-09-25T18:47:27+03:00
      DISPLAYSCRIPT: | 
        USRG_ACTADDUSERQUERYONEXECUTE
        
      ENTEREDPARAMS: !!binary > 
        U0xQUlBSU1QGAAAAU0VOREVSBgAAAFNFTkRFUgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABGTlNU
        RkxQUg==
      SCRIPT: | 
        Option Explicit
        Sub usrg_actAddUserQueryOnExecute(ByVal Sender)
        '*** Данный код необходим для вызова встроенного обработчика ***
        '*** В случае его удаления возможно нарушение работы системы ***
          Call   Inherited(Sender, "OnExecute", Array(Sender))
        '*** конец кода поддержки встроенного обработчика            ***
          dim  DataSet, system
          set DataSet = Sender.OwnerForm.GetComponent("usrg_gdcUserQuery")
          set system = Sender.OwnerForm.GetComponent("usrg_lcSystems")
          if system.CurrentkeyInt > 0  then
            DataSet.Insert
            DataSet.FieldByName("USR$SYSTEMKEY").AsInteger = system.CurrentkeyInt
            DataSet.Post
            call DataSet.EditDialog("")
          else
            call DataSet.CreateDialog("")
          end if
          DataSet.Refresh
        End Sub
        
  - 
    Properties: 
      Class: "TgdcDelphiObject"
      RUID: 1176277471_1457844439
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
      HeadObject: 1176277472_1457844439
    Fields: 
      PARENT: "1176268402_1457844439 usrf_gdmn_config"
      NAME: "usrg_actAddUserQuery"
      CLASSNAME: ""
      DESCRIPTION: ~
      MACROSGROUPKEY: ~
      OBJECTNAME: "usrg_actAddUserQuery"
      OBJECTTYPE: 0
      REPORTGROUPKEY: ~
      SUBTYPE: ""
      EDITIONDATE: 2020-09-25T18:47:27+03:00
  - 
    Properties: 
      Class: "TgdcEvent"
      RUID: 1176277472_1457844439
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
    Fields: 
      DISABLE: ~
      EVENTNAME: "ONEXECUTE"
      FUNCTIONKEY: "1176277474_1457844439 usrg_actAddUserQueryOnExecute"
      OBJECTKEY: "1176277471_1457844439 usrf_gdmn_config\\usrg_actAddUserQuery"
      OBJECTNAME: "usrg_actAddUserQuery"
      PARENTNAME: "usrf_gdmn_config"
      EDITIONDATE: 2020-09-25T18:47:27+03:00
  - 
    Properties: 
      Class: "TgdcFunction"
      RUID: 170498827_1488307703
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
      HeadObject: 170498825_1488307703
    Fields: 
      NAME: "usrg_actDeleteDocOnExecute"
      COMMENT: ~
      EVENT: "ONEXECUTE"
      FUNCTIONTYPE: ~
      GROUPNAME: ~
      INHERITEDRULE: 0
      LANGUAGE: "VBScript"
      LOCALNAME: ~
      MODIFYDATE: 2021-06-15T18:45:01+03:00
      MODULE: "EVENTS"
      MODULECODE: "1176268402_1457844439 usrf_gdmn_config"
      OBJECTNAME: "usrf_gdmn_config"
      OWNERNAME: ~
      PUBLICFUNCTION: 1
      SHORTCUT: ~
      USEDEBUGINFO: 0
      EDITIONDATE: 2020-11-04T10:18:02+03:00
      DISPLAYSCRIPT: | 
        USRG_ACTDELETEDOCONEXECUTE
        
      ENTEREDPARAMS: !!binary > 
        U0xQUlBSU1QGAAAAU0VOREVSBgAAAFNFTkRFUgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABGTlNU
        RkxQUg==
      SCRIPT: | 
        Option Explicit
        Sub usrg_actDeleteDocOnExecute(ByVal Sender)
        '*** Данный код необходим для вызова встроенного обработчика ***
        '*** В случае его удаления возможно нарушение работы системы ***
          Call   Inherited(Sender, "OnExecute", Array(Sender))
        '*** конец кода поддержки встроенного обработчика            ***
          Sender.OwnerForm.FindComponent("usrg_gdcDoc").DeleteMultiple(Sender.OwnerForm.FindComponent("usrg_grDoc").SelectedRows)
        End Sub
        
  - 
    Properties: 
      Class: "TgdcDelphiObject"
      RUID: 170498824_1488307703
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
      HeadObject: 170498825_1488307703
    Fields: 
      PARENT: "1176268402_1457844439 usrf_gdmn_config"
      NAME: "usrg_actDeleteDoc"
      CLASSNAME: ""
      DESCRIPTION: ~
      MACROSGROUPKEY: ~
      OBJECTNAME: "usrg_actDeleteDoc"
      OBJECTTYPE: 0
      REPORTGROUPKEY: ~
      SUBTYPE: ""
      EDITIONDATE: 2020-07-22T16:55:51+03:00
  - 
    Properties: 
      Class: "TgdcEvent"
      RUID: 170498825_1488307703
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
    Fields: 
      DISABLE: 0
      EVENTNAME: "ONEXECUTE"
      FUNCTIONKEY: "170498827_1488307703 usrg_actDeleteDocOnExecute"
      OBJECTKEY: "170498824_1488307703 usrf_gdmn_config\\usrg_actDeleteDoc"
      OBJECTNAME: "usrg_actDeleteDoc"
      PARENTNAME: "usrf_gdmn_config"
      EDITIONDATE: 2020-11-04T10:18:03+03:00
  - 
    Properties: 
      Class: "TgdcFunction"
      RUID: 170499018_1488307703
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
      HeadObject: 170499016_1488307703
    Fields: 
      NAME: "usrg_actDeleteRefOnExecute"
      COMMENT: ~
      EVENT: "ONEXECUTE"
      FUNCTIONTYPE: ~
      GROUPNAME: ~
      INHERITEDRULE: 0
      LANGUAGE: "VBScript"
      LOCALNAME: ~
      MODIFYDATE: 2021-06-15T18:45:01+03:00
      MODULE: "EVENTS"
      MODULECODE: "1176268402_1457844439 usrf_gdmn_config"
      OBJECTNAME: "usrf_gdmn_config"
      OWNERNAME: ~
      PUBLICFUNCTION: 1
      SHORTCUT: ~
      USEDEBUGINFO: 0
      EDITIONDATE: 2020-11-04T10:18:19+03:00
      DISPLAYSCRIPT: | 
        USRG_ACTDELETEREFONEXECUTE
        
      ENTEREDPARAMS: !!binary > 
        U0xQUlBSU1QGAAAAU0VOREVSBgAAAFNFTkRFUgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABGTlNU
        RkxQUg==
      SCRIPT: | 
        Option Explicit
        Sub usrg_actDeleteRefOnExecute(ByVal Sender)
        '*** Данный код необходим для вызова встроенного обработчика ***
        '*** В случае его удаления возможно нарушение работы системы ***
          Call   Inherited(Sender, "OnExecute", Array(Sender))
        '*** конец кода поддержки встроенного обработчика            ***
          Sender.OwnerForm.FindComponent("usrg_gdcRef").DeleteMultiple(Sender.OwnerForm.FindComponent("usrg_grRef").SelectedRows)
        End Sub
        
  - 
    Properties: 
      Class: "TgdcDelphiObject"
      RUID: 170499015_1488307703
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
      HeadObject: 170499016_1488307703
    Fields: 
      PARENT: "1176268402_1457844439 usrf_gdmn_config"
      NAME: "usrg_actDeleteRef"
      CLASSNAME: ""
      DESCRIPTION: ~
      MACROSGROUPKEY: ~
      OBJECTNAME: "usrg_actDeleteRef"
      OBJECTTYPE: 0
      REPORTGROUPKEY: ~
      SUBTYPE: ""
      EDITIONDATE: 2020-07-22T18:39:07+03:00
  - 
    Properties: 
      Class: "TgdcEvent"
      RUID: 170499016_1488307703
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
    Fields: 
      DISABLE: 0
      EVENTNAME: "ONEXECUTE"
      FUNCTIONKEY: "170499018_1488307703 usrg_actDeleteRefOnExecute"
      OBJECTKEY: "170499015_1488307703 usrf_gdmn_config\\usrg_actDeleteRef"
      OBJECTNAME: "usrg_actDeleteRef"
      PARENTNAME: "usrf_gdmn_config"
      EDITIONDATE: 2020-11-04T10:18:19+03:00
  - 
    Properties: 
      Class: "TgdcFunction"
      RUID: 1176280865_1457844439
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
      HeadObject: 1176280863_1457844439
    Fields: 
      NAME: "usrg_actDelRemainsOnExecute"
      COMMENT: ~
      EVENT: "ONEXECUTE"
      FUNCTIONTYPE: ~
      GROUPNAME: ~
      INHERITEDRULE: 0
      LANGUAGE: "VBScript"
      LOCALNAME: ~
      MODIFYDATE: 2021-06-15T18:45:01+03:00
      MODULE: "EVENTS"
      MODULECODE: "1176268402_1457844439 usrf_gdmn_config"
      OBJECTNAME: "usrf_gdmn_config"
      OWNERNAME: ~
      PUBLICFUNCTION: 1
      SHORTCUT: ~
      USEDEBUGINFO: ~
      EDITIONDATE: 2020-11-04T10:06:38+03:00
      DISPLAYSCRIPT: | 
        USRG_ACTDELREMAINSONEXECUTE
        
      ENTEREDPARAMS: !!binary > 
        U0xQUlBSU1QGAAAAU0VOREVSBgAAAFNFTkRFUgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABGTlNU
        RkxQUg==
      SCRIPT: | 
        Option Explicit
        Sub usrg_actDelRemainsOnExecute(ByVal Sender)
        '*** Данный код необходим для вызова встроенного обработчика ***
        '*** В случае его удаления возможно нарушение работы системы ***
          Call   Inherited(Sender, "OnExecute", Array(Sender))
        '*** конец кода поддержки встроенного обработчика            ***
          Sender.OwnerForm.FindComponent("usrg_gdcRemains").DeleteMultiple(Sender.OwnerForm.FindComponent("usrg_grRemains").SelectedRows)
        End Sub
        
  - 
    Properties: 
      Class: "TgdcDelphiObject"
      RUID: 1176280862_1457844439
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
      HeadObject: 1176280863_1457844439
    Fields: 
      PARENT: "1176268402_1457844439 usrf_gdmn_config"
      NAME: "usrg_actDelRemains"
      CLASSNAME: ""
      DESCRIPTION: ~
      MACROSGROUPKEY: ~
      OBJECTNAME: "usrg_actDelRemains"
      OBJECTTYPE: 0
      REPORTGROUPKEY: ~
      SUBTYPE: ""
      EDITIONDATE: 2020-10-08T16:56:27+03:00
  - 
    Properties: 
      Class: "TgdcEvent"
      RUID: 1176280863_1457844439
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
    Fields: 
      DISABLE: ~
      EVENTNAME: "ONEXECUTE"
      FUNCTIONKEY: "1176280865_1457844439 usrg_actDelRemainsOnExecute"
      OBJECTKEY: "1176280862_1457844439 usrf_gdmn_config\\usrg_actDelRemains"
      OBJECTNAME: "usrg_actDelRemains"
      PARENTNAME: "usrf_gdmn_config"
      EDITIONDATE: 2020-11-04T10:06:39+03:00
  - 
    Properties: 
      Class: "TgdcFunction"
      RUID: 170498823_1488307703
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
      HeadObject: 170498821_1488307703
    Fields: 
      NAME: "usrg_ActEditDocOnExecute"
      COMMENT: ~
      EVENT: "ONEXECUTE"
      FUNCTIONTYPE: ~
      GROUPNAME: ~
      INHERITEDRULE: 0
      LANGUAGE: "VBScript"
      LOCALNAME: ~
      MODIFYDATE: 2021-06-15T18:45:02+03:00
      MODULE: "EVENTS"
      MODULECODE: "1176268402_1457844439 usrf_gdmn_config"
      OBJECTNAME: "usrf_gdmn_config"
      OWNERNAME: ~
      PUBLICFUNCTION: 1
      SHORTCUT: ~
      USEDEBUGINFO: 0
      EDITIONDATE: 2020-11-04T10:19:22+03:00
      DISPLAYSCRIPT: | 
        USRG_ACTEDITDOCONEXECUTE
        
      ENTEREDPARAMS: !!binary > 
        U0xQUlBSU1QGAAAAU0VOREVSBgAAAFNFTkRFUgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABGTlNU
        RkxQUg==
      SCRIPT: | 
        Option Explicit
        Sub usrg_ActEditDocOnExecute(ByVal Sender)
        '*** Данный код необходим для вызова встроенного обработчика ***
        '*** В случае его удаления возможно нарушение работы системы ***
          Call   Inherited(Sender, "OnExecute", Array(Sender))
        '*** конец кода поддержки встроенного обработчика            ***
          dim DataSet
          set DataSet = Sender.OwnerForm.GetComponent("usrg_gdcDoc")
          call DataSet.EditDialog("")
          DataSet.Refresh
        End Sub
        
  - 
    Properties: 
      Class: "TgdcDelphiObject"
      RUID: 170498820_1488307703
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
      HeadObject: 170498821_1488307703
    Fields: 
      PARENT: "1176268402_1457844439 usrf_gdmn_config"
      NAME: "usrg_ActEditDoc"
      CLASSNAME: ""
      DESCRIPTION: ~
      MACROSGROUPKEY: ~
      OBJECTNAME: "usrg_ActEditDoc"
      OBJECTTYPE: 0
      REPORTGROUPKEY: ~
      SUBTYPE: ""
      EDITIONDATE: 2020-07-22T16:55:45+03:00
  - 
    Properties: 
      Class: "TgdcEvent"
      RUID: 170498821_1488307703
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
    Fields: 
      DISABLE: 0
      EVENTNAME: "ONEXECUTE"
      FUNCTIONKEY: "170498823_1488307703 usrg_ActEditDocOnExecute"
      OBJECTKEY: "170498820_1488307703 usrf_gdmn_config\\usrg_ActEditDoc"
      OBJECTNAME: "usrg_ActEditDoc"
      PARENTNAME: "usrf_gdmn_config"
      EDITIONDATE: 2020-11-04T10:19:23+03:00
  - 
    Properties: 
      Class: "TgdcFunction"
      RUID: 170499014_1488307703
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
      HeadObject: 170499012_1488307703
    Fields: 
      NAME: "usrg_actEditRefOnExecute"
      COMMENT: ~
      EVENT: "ONEXECUTE"
      FUNCTIONTYPE: ~
      GROUPNAME: ~
      INHERITEDRULE: 0
      LANGUAGE: "VBScript"
      LOCALNAME: ~
      MODIFYDATE: 2021-06-15T18:45:02+03:00
      MODULE: "EVENTS"
      MODULECODE: "1176268402_1457844439 usrf_gdmn_config"
      OBJECTNAME: "usrf_gdmn_config"
      OWNERNAME: ~
      PUBLICFUNCTION: 1
      SHORTCUT: ~
      USEDEBUGINFO: 0
      EDITIONDATE: 2020-07-22T18:41:21+03:00
      DISPLAYSCRIPT: | 
        USRG_ACTEDITREFONEXECUTE
        
      ENTEREDPARAMS: !!binary > 
        U0xQUlBSU1QGAAAAU0VOREVSBgAAAFNFTkRFUgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABGTlNU
        RkxQUg==
      SCRIPT: | 
        Option Explicit
        Sub usrg_actEditRefOnExecute(ByVal Sender)
        '*** Данный код необходим для вызова встроенного обработчика ***
        '*** В случае его удаления возможно нарушение работы системы ***
          Call   Inherited(Sender, "OnExecute", Array(Sender))
        '*** конец кода поддержки встроенного обработчика            ***
          dim  DataSet
          set DataSet = Sender.OwnerForm.GetComponent("usrg_gdcRef")
          call DataSet.EditDialog("")
          DataSet.Refresh
        End Sub
        
  - 
    Properties: 
      Class: "TgdcDelphiObject"
      RUID: 170499011_1488307703
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
      HeadObject: 170499012_1488307703
    Fields: 
      PARENT: "1176268402_1457844439 usrf_gdmn_config"
      NAME: "usrg_actEditRef"
      CLASSNAME: ""
      DESCRIPTION: ~
      MACROSGROUPKEY: ~
      OBJECTNAME: "usrg_actEditRef"
      OBJECTTYPE: 0
      REPORTGROUPKEY: ~
      SUBTYPE: ""
      EDITIONDATE: 2020-07-22T18:39:02+03:00
  - 
    Properties: 
      Class: "TgdcEvent"
      RUID: 170499012_1488307703
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
    Fields: 
      DISABLE: 0
      EVENTNAME: "ONEXECUTE"
      FUNCTIONKEY: "170499014_1488307703 usrg_actEditRefOnExecute"
      OBJECTKEY: "170499011_1488307703 usrf_gdmn_config\\usrg_actEditRef"
      OBJECTNAME: "usrg_actEditRef"
      PARENTNAME: "usrf_gdmn_config"
      EDITIONDATE: 2020-07-22T18:41:21+03:00
  - 
    Properties: 
      Class: "TgdcFunction"
      RUID: 1176280861_1457844439
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
      HeadObject: 1176280859_1457844439
    Fields: 
      NAME: "usrg_actEditRemainsOnExecute"
      COMMENT: ~
      EVENT: "ONEXECUTE"
      FUNCTIONTYPE: ~
      GROUPNAME: ~
      INHERITEDRULE: 0
      LANGUAGE: "VBScript"
      LOCALNAME: ~
      MODIFYDATE: 2021-06-15T18:45:02+03:00
      MODULE: "EVENTS"
      MODULECODE: "1176268402_1457844439 usrf_gdmn_config"
      OBJECTNAME: "usrf_gdmn_config"
      OWNERNAME: ~
      PUBLICFUNCTION: 1
      SHORTCUT: ~
      USEDEBUGINFO: ~
      EDITIONDATE: 2020-10-08T16:56:11+03:00
      DISPLAYSCRIPT: | 
        USRG_ACTEDITREMAINSONEXECUTE
        
      ENTEREDPARAMS: !!binary > 
        U0xQUlBSU1QGAAAAU0VOREVSBgAAAFNFTkRFUgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABGTlNU
        RkxQUg==
      SCRIPT: | 
        Option Explicit
        Sub usrg_actEditRemainsOnExecute(ByVal Sender)
        '*** Данный код необходим для вызова встроенного обработчика ***
        '*** В случае его удаления возможно нарушение работы системы ***
          Call   Inherited(Sender, "OnExecute", Array(Sender))
        '*** конец кода поддержки встроенного обработчика            ***
          dim gdcRemains
          set gdcRemains = Sender.OwnerForm.GetComponent("usrg_gdcRemains")
          call gdcRemains.EditDialog("")
          gdcRemains.Refresh
        End Sub
        
  - 
    Properties: 
      Class: "TgdcDelphiObject"
      RUID: 1176280858_1457844439
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
      HeadObject: 1176280859_1457844439
    Fields: 
      PARENT: "1176268402_1457844439 usrf_gdmn_config"
      NAME: "usrg_actEditRemains"
      CLASSNAME: ""
      DESCRIPTION: ~
      MACROSGROUPKEY: ~
      OBJECTNAME: "usrg_actEditRemains"
      OBJECTTYPE: 0
      REPORTGROUPKEY: ~
      SUBTYPE: ""
      EDITIONDATE: 2020-10-08T16:56:10+03:00
  - 
    Properties: 
      Class: "TgdcEvent"
      RUID: 1176280859_1457844439
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
    Fields: 
      DISABLE: ~
      EVENTNAME: "ONEXECUTE"
      FUNCTIONKEY: "1176280861_1457844439 usrg_actEditRemainsOnExecute"
      OBJECTKEY: "1176280858_1457844439 usrf_gdmn_config\\usrg_actEditRemains"
      OBJECTNAME: "usrg_actEditRemains"
      PARENTNAME: "usrf_gdmn_config"
      EDITIONDATE: 2020-10-08T16:56:11+03:00
  - 
    Properties: 
      Class: "TgdcFunction"
      RUID: 1176277478_1457844439
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
      HeadObject: 1176277476_1457844439
    Fields: 
      NAME: "usrg_actEditUserQueryOnExecute"
      COMMENT: ~
      EVENT: "ONEXECUTE"
      FUNCTIONTYPE: ~
      GROUPNAME: ~
      INHERITEDRULE: 0
      LANGUAGE: "VBScript"
      LOCALNAME: ~
      MODIFYDATE: 2021-06-15T18:45:02+03:00
      MODULE: "EVENTS"
      MODULECODE: "1176268402_1457844439 usrf_gdmn_config"
      OBJECTNAME: "usrf_gdmn_config"
      OWNERNAME: ~
      PUBLICFUNCTION: 1
      SHORTCUT: ~
      USEDEBUGINFO: ~
      EDITIONDATE: 2020-10-14T23:44:30+03:00
      DISPLAYSCRIPT: | 
        USRG_ACTEDITUSERQUERYONEXECUTE
        
      ENTEREDPARAMS: !!binary > 
        U0xQUlBSU1QGAAAAU0VOREVSBgAAAFNFTkRFUgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABGTlNU
        RkxQUg==
      SCRIPT: | 
        Option Explicit
        Sub usrg_actEditUserQueryOnExecute(ByVal Sender)
        '*** Данный код необходим для вызова встроенного обработчика ***
        '*** В случае его удаления возможно нарушение работы системы ***
          Call   Inherited(Sender, "OnExecute", Array(Sender))
        '*** конец кода поддержки встроенного обработчика            ***
          dim DataSet
          set DataSet = Sender.OwnerForm.GetComponent("usrg_gdcUserQuery")
          call DataSet.EditDialog("")
          DataSet.Refresh
        End Sub
        
  - 
    Properties: 
      Class: "TgdcDelphiObject"
      RUID: 1176277475_1457844439
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
      HeadObject: 1176277476_1457844439
    Fields: 
      PARENT: "1176268402_1457844439 usrf_gdmn_config"
      NAME: "usrg_actEditUserQuery"
      CLASSNAME: ""
      DESCRIPTION: ~
      MACROSGROUPKEY: ~
      OBJECTNAME: "usrg_actEditUserQuery"
      OBJECTTYPE: 0
      REPORTGROUPKEY: ~
      SUBTYPE: ""
      EDITIONDATE: 2020-09-25T18:47:46+03:00
  - 
    Properties: 
      Class: "TgdcEvent"
      RUID: 1176277476_1457844439
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
    Fields: 
      DISABLE: ~
      EVENTNAME: "ONEXECUTE"
      FUNCTIONKEY: "1176277478_1457844439 usrg_actEditUserQueryOnExecute"
      OBJECTKEY: "1176277475_1457844439 usrf_gdmn_config\\usrg_actEditUserQuery"
      OBJECTNAME: "usrg_actEditUserQuery"
      PARENTNAME: "usrf_gdmn_config"
      EDITIONDATE: 2020-10-14T23:44:30+03:00
  - 
    Properties: 
      Class: "TgdcFunction"
      RUID: 147033096_1397672555
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
      HeadObject: 1176277900_1457844439
    Fields: 
      NAME: "web_queryDelete"
      COMMENT: ~
      EVENT: ~
      FUNCTIONTYPE: ~
      GROUPNAME: ~
      INHERITEDRULE: 0
      LANGUAGE: "VBScript"
      LOCALNAME: ~
      MODIFYDATE: 2021-06-15T18:45:02+03:00
      MODULE: "UNKNOWN"
      MODULECODE: "1010001_17 APPLICATION"
      OBJECTNAME: "APPLICATION"
      OWNERNAME: ~
      PUBLICFUNCTION: 1
      SHORTCUT: ~
      USEDEBUGINFO: 0
      EDITIONDATE: 2020-06-18T00:05:18+03:00
      DISPLAYSCRIPT: | 
        WEB_QUERYDELETE
        
      ENTEREDPARAMS: !!binary > 
        U0xQUlBSU1QDAAAAVVJMAwAAAFVSTAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABGTlNUUFJTVAYA
        AABTVEFUVVMGAAAAU1RBVFVTAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEZOU1RQUlNUAwAAAFJF
        UwMAAABSRVMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAARk5TVFBSU1QDAAAAU1RSAwAAAFNUUgAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAABGTlNURkxQUg==
      SCRIPT: | 
        Option Explicit
        Function web_queryDelete(url, ByRef status, ByRef res, str)
          dim oXMLHTTP
          Set oXMLHTTP = CreateObject("MSXML2.XMLHTTP")
          call oXMLHTTP.Open("DELETE", url & "?deviceId=WEB", false)
          call oXMLHTTP.setRequestHeader("Content-Type", str)
          on error resume next
          call oXMLHTTP.Send()
          on error goto 0
          res = oXMLHTTP.responseText
          status = oXMLHTTP.Status
        End Function
        
  - 
    Properties: 
      Class: "TgdcFunction"
      RUID: 170497736_1488307703
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
      HeadObject: 147109513_1270221956
    Fields: 
      NAME: "web_getDocuments"
      COMMENT: ~
      EVENT: ~
      FUNCTIONTYPE: ~
      GROUPNAME: ~
      INHERITEDRULE: 0
      LANGUAGE: "VBScript"
      LOCALNAME: ~
      MODIFYDATE: 2021-06-15T18:45:02+03:00
      MODULE: "UNKNOWN"
      MODULECODE: "1010001_17 APPLICATION"
      OBJECTNAME: "APPLICATION"
      OWNERNAME: ~
      PUBLICFUNCTION: 1
      SHORTCUT: ~
      USEDEBUGINFO: 0
      EDITIONDATE: 2020-12-01T12:42:35+03:00
      DISPLAYSCRIPT: | 
        WEB_GETDOCUMENTS
        
      ENTEREDPARAMS: !!binary > 
        U0xQUlBSU1QJAAAAQ09NUEFOWUlECQAAAENPTVBBTllJRAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AABGTlNUUFJTVAcAAABPQkpIRUFEBwAAAE9CSkhFQUQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        Rk5TVFBSU1QHAAAAT0JKQk9EWQcAAABPQkpCT0RZAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEZO
        U1RQUlNUCQAAAE9CSlBBUkFNUwkAAABPQkpQQVJBTVMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        Rk5TVEZMUFI=
      SCRIPT: | 
        Option Explicit
        Function web_getDocuments(companyId, objHead, objBody, objParams)
          web_getDocuments = null
          'подготавливаем json файл, в котором будет содержаться массив запрашиваемых документов
          dim countParams, oPayload, oData, qDataArr, answerTo, msgID, msgParams, arrFields, i, arr, appSystem
          dim systemkey, DateBegin, DateEnd, expeditor, contactkey, n, functionkey
          countParams = objParams.ObjectItemsCount
          answerTo = objHead.SimpleValue("producer", "")
          msgID = objHead.SimpleValue("id", "")
          appSystem = objHead.SimpleValue("appSystem", "")
        
          'объект для работы с типами данных
          dim Enc
          set Enc = new TVB_xml_EncodingFunctions
          
          dim oBody, qArr, oRoot, d, oHead
          set oRoot = new JSonObject
          set oHead = new JSonObject
          set oBody = new JSonObject
          set qArr = new JSonArray
          call oRoot.AddProperty_Object("head", oHead)
          call oRoot.AddProperty_Object("body", oBody)
          
          call oHead.AddProperty_Simple("producer", "gdmn")
          call oHead.AddProperty_Simple("consumer", answerTo)
          call oHead.AddProperty_Simple("id", msgID)
          call oHead.AddProperty_Simple("companyId", companyId)
          call oHead.AddProperty_Simple("sedingTime", date)
          call oHead.AddProperty_Simple("appSystem", appSystem)
        
          call oBody.AddProperty_Simple("type", "data")
          call oBody.AddProperty_Object("payload", qArr)
        
          dim qSel, Creator, ibsql
          set Creator = new TCreator
          set qSel = Creator.GetObject(nil, "TIBSQL", "")
          qSel.Transaction = gdcBaseManager.ReadTransaction
          systemkey = 0
        
          set ibsql = Creator.GetObject(nil, "TIBSQL", "")
          ibsql.Transaction = gdcBaseManager.ReadTransaction
          ibsql.Close
          ibsql.SQL.Text = _
            "SELECT " & _
            "  s.ID AS systemkey " & _
            "FROM USR$GDMN_SYSTEMS s " & _
            "WHERE  UPPER(s.USR$CODE) LIKE '" & UCase(appSystem) & "' "
          ibsql.ExecQuery
          if ibsql.RecordCount > 0 then
            systemkey = ibsql.FieldByName("systemkey").AsInteger
          end if
          ibsql.Close
          ibsql.SQL.Text = _
            "SELECT  FIRST 1 b.USR$SENDFUNCTION " & _
            "FROM USR$GDMN_DOCUMENTS b " & _
            "  JOIN gd_function f ON f.ID = b.USR$SENDFUNCTION " & _
            "WHERE b.USR$SYSTEMKEY = :systemkey "
          ibsql.ParamByName("systemkey").AsInteger = systemkey
          ibsql.ExecQuery
          functionkey = 0
          if ibsql.RecordCount > 0  then
            functionkey = ibsql.FieldByName("USR$SENDFUNCTION").AsInteger
          end if
          dim FuncParamArray
          for n = 0 to countParams - 1
            set msgParams = objParams.ObjectItem(n)
            DateBegin = Enc.DecodeDate(msgParams.SimpleValue("dateBegin", ""))
            DateEnd = Enc.DecodeDate(msgParams.SimpleValue("dateEnd", ""))
            expeditor = msgParams.SimpleValue("expiditor", "")
            contactkey = msgParams.SimpleValue("toContact", "")
            if expeditor > "" then
              expeditor = CDbl(expeditor)
            else
              expeditor = 0
            end if
            if contactkey > "" then
              contactkey = CDbl(contactkey)
            else
              contactkey = 0
            end if
            set qDataArr = new JsonObject
            set oPayload = new JsonObject
            call oPayload.AddProperty_Simple("id", "147037569_536200041")
            call oPayload.AddProperty_Simple("type", "get_SellDocuments")
            call oPayload.AddProperty_Simple("name", "Отвес-накладная")
            if functionkey > 0  then
              FuncParamArray = Array(DateBegin, DateEnd, expeditor, contactkey)
              set oData = System.ExecuteScriptFunction(functionkey, FuncParamArray)
              call oPayload.AddProperty_Object("data", oData)
            end if
            call qArr.AddValue(oPayload)
          next
          web_getDocuments = oRoot.Json
        End Function
        
  - 
    Properties: 
      Class: "TgdcFunction"
      RUID: 147033095_1397672555
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
      HeadObject: 147109513_1270221956
    Fields: 
      NAME: "web_getReferences"
      COMMENT: ~
      EVENT: ~
      FUNCTIONTYPE: ~
      GROUPNAME: ~
      INHERITEDRULE: 0
      LANGUAGE: "VBScript"
      LOCALNAME: ~
      MODIFYDATE: 2021-06-15T18:45:02+03:00
      MODULE: "UNKNOWN"
      MODULECODE: "1010001_17 APPLICATION"
      OBJECTNAME: "APPLICATION"
      OWNERNAME: ~
      PUBLICFUNCTION: 1
      SHORTCUT: ~
      USEDEBUGINFO: 0
      EDITIONDATE: 2020-09-25T15:06:56+03:00
      DISPLAYSCRIPT: | 
        WEB_GETREFERENCES
        CURR_REPLACE
        
      ENTEREDPARAMS: !!binary > 
        U0xQUlBSU1QJAAAAQ09NUEFOWUlECQAAAENPTVBBTllJRAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AABGTlNUUFJTVAcAAABPQkpIRUFEBwAAAE9CSkhFQUQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        Rk5TVFBSU1QHAAAAT0JKQk9EWQcAAABPQkpCT0RZAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEZO
        U1RQUlNUCQAAAE9CSlBBUkFNUwkAAABPQkpQQVJBTVMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        Rk5TVEZMUFI=
      SCRIPT: | 
        Option Explicit
        Function web_getReferences(companyId, objHead, objBody, objParams)
          'подготавливаем json файл, в котором будет содержаться массив запрашиваемых справочников
          dim countParams, n, oPayload, oData, qDataArr, answerTo, msgID, msgParams, arrFields, i, arr, appSystem
          dim systemkey
          countParams = objParams.ObjectItemsCount
          answerTo = objHead.SimpleValue("producer", "")
          msgID = objHead.SimpleValue("id", "")
          appSystem = objHead.SimpleValue("appSystem", "")
          dim ondate, senddate, m
          ondate = date
          m = CStr( month(ondate))
          if len(m) = 1 then m = "0" & m
          d = CStr(day(ondate))
          if len(d) = 1 then d = "0" & d
          senddate = CStr(year(ondate)) & "-" & m & "-" & d
          dim oBody, qArr, oRoot, d, oHead
          set oRoot = new JSonObject
          set oHead = new JSonObject
          set oBody = new JSonObject
          set qArr = new JSonArray
          call oRoot.AddProperty_Object("head", oHead)
          call oRoot.AddProperty_Object("body", oBody)
        
          call oHead.AddProperty_Simple("producer", "gdmn")
          call oHead.AddProperty_Simple("consumer", answerTo)
          call oHead.AddProperty_Simple("id", msgID)
          call oHead.AddProperty_Simple("companyId", companyId)
          call oHead.AddProperty_Simple("sedingTime", senddate)
          call oHead.AddProperty_Simple("appSystem", appSystem)
        
          call oBody.AddProperty_Simple("type", "data")
          call oBody.AddProperty_Object("payload", qArr)
        
          dim qSel, Creator, ibsql
          set Creator = new TCreator
          set qSel = Creator.GetObject(nil, "TIBSQL", "")
          qSel.Transaction = gdcBaseManager.ReadTransaction
          systemkey = 0
          set ibsql = Creator.GetObject(nil, "TIBSQL", "")
          ibsql.Transaction = gdcBaseManager.ReadTransaction
          ibsql.Close
          ibsql.SQL.Text = _
            "SELECT " & _
            "  s.ID AS systemkey " & _
            "FROM USR$GDMN_SYSTEMS s " & _
            "WHERE  UPPER(s.USR$CODE) LIKE '" & UCase(appSystem) & "' "
          ibsql.ExecQuery
          if ibsql.RecordCount > 0 then
            systemkey = ibsql.FieldByName("systemkey").AsInteger
          end if
          for n = 0 to countParams - 1
            msgParams = objParams.ObjectItem(n).Value
            set qDataArr = new JSonArray
            ibsql.Close
            ibsql.SQL.Text = _
              "SELECT " & _
              "  r.id, r.USR$SQLQUERY, r.USR$LIST_JSON, r.USR$NAME " & _
              "FROM USR$GDMN_REFERENCES r " & _
              "WHERE  r.USR$SYSTEMKEY = :systemkey " & _
              "  AND UPPER(r.USR$MOBILENAME) LIKE '" & UCase(msgParams) & "' "
            ibsql.ParamByName("systemkey").AsInteger = systemkey
            ibsql.ExecQuery
            if ibsql.RecordCount > 0  then
              arrFields = Split(ibsql.FieldByName("USR$LIST_JSON").AsVariant, ",")
              qSel.Close
              qSel.SQL.Text = _
                ibsql.FieldByName("USR$SQLQUERY").AsVariant
              qSel.ExecQuery
              set oPayload = new JsonObject
              call oPayload.AddProperty_Simple("id", ibsql.FieldByName("id").AsString)
              call oPayload.AddProperty_Simple("name", ibsql.FieldByName("USR$NAME").AsString)
              call oPayload.AddProperty_Simple("type", msgParams)
              call oPayload.AddProperty_Object("data", qDataArr)
              dim arr2
              while not qSel.eof
                set oData = new JsonObject
                for i = LBound(arrFields) to UBound(arrFields)
                  arr = Split(trim(arrFields(i)), "=")
                  if IsNumeric(qSel.FieldByName(trim(arr(1))).AsString) then
                    arr2 = trim(qSel.FieldByName(trim(arr(1))).AsString)
                    arr2 = curr_replace(arr2)
                  else
                    arr2 = trim(qSel.FieldByName(trim(arr(1))).AsString)
                  end if
                  call oData.AddProperty_Simple(trim(arr(0)), arr2)
                next
                call qDataArr.AddValue(oData)
                qSel.Next
              wend
              call qArr.AddValue(oPayload)
            end if
           next
          web_getReferences = oRoot.Json
        
        End Function
        function curr_replace(num)
          dim pos,  temp
          temp = num
          'temp = Replace(temp, ".", Application.DecimalSeparatorSys)
          temp = Replace(temp, ",", ".")
          curr_replace = temp
        end function
        
  - 
    Properties: 
      Class: "TgdcFunction"
      RUID: 157976589_1065213694
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
    Fields: 
      NAME: "web_queryPost"
      COMMENT: ~
      EVENT: ~
      FUNCTIONTYPE: ~
      GROUPNAME: ~
      INHERITEDRULE: 0
      LANGUAGE: "VBScript"
      LOCALNAME: ~
      MODIFYDATE: 2021-06-15T18:45:02+03:00
      MODULE: "UNKNOWN"
      MODULECODE: "1010001_17 APPLICATION"
      OBJECTNAME: "APPLICATION"
      OWNERNAME: ~
      PUBLICFUNCTION: 1
      SHORTCUT: ~
      USEDEBUGINFO: 0
      EDITIONDATE: 2020-10-14T23:16:56+03:00
      DISPLAYSCRIPT: | 
        WEB_QUERYPOST
        
      ENTEREDPARAMS: !!binary > 
        U0xQUlBSU1QDAAAAVVJMAwAAAFVSTAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABGTlNUUFJTVAgA
        AABQT1NUREFUQQgAAABQT1NUREFUQQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABGTlNUUFJTVAYA
        AABTVEFUVVMGAAAAU1RBVFVTAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEZOU1RQUlNUAwAAAFJF
        UwMAAABSRVMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAARk5TVFBSU1QDAAAAU1RSAwAAAFNUUgAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAABGTlNURkxQUg==
      SCRIPT: | 
        Option Explicit
        Function web_queryPost(url, postData, ByRef status, ByRef res, str)
          dim oXMLHTTP
          Set oXMLHTTP = CreateObject("MSXML2.XMLHTTP")
          call oXMLHTTP.Open("POST", url & "?deviceId=WEB", false)
          call oXMLHTTP.setRequestHeader("Content-Type", str)
          
          on error resume next
          call oXMLHTTP.Send(postData)
          web_queryPost = err.Description
          on error goto 0
        
          res = oXMLHTTP.responseText
          status = oXMLHTTP.Status
        End Function
        
  - 
    Properties: 
      Class: "TgdcFunction"
      RUID: 157976591_1065213694
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
    Fields: 
      NAME: "web_queryGet"
      COMMENT: ~
      EVENT: ~
      FUNCTIONTYPE: ~
      GROUPNAME: ~
      INHERITEDRULE: 0
      LANGUAGE: "VBScript"
      LOCALNAME: ~
      MODIFYDATE: 2021-06-15T18:45:02+03:00
      MODULE: "UNKNOWN"
      MODULECODE: "1010001_17 APPLICATION"
      OBJECTNAME: "APPLICATION"
      OWNERNAME: ~
      PUBLICFUNCTION: 1
      SHORTCUT: ~
      USEDEBUGINFO: 0
      EDITIONDATE: 2020-10-14T23:11:12+03:00
      DISPLAYSCRIPT: | 
        WEB_QUERYGET
        
      ENTEREDPARAMS: !!binary > 
        U0xQUlBSU1QDAAAAVVJMAwAAAFVSTAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABGTlNUUFJTVAcA
        AABHRVREQVRBBwAAAEdFVERBVEEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAARk5TVFBSU1QGAAAA
        U1RBVFVTBgAAAFNUQVRVUwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABGTlNUUFJTVAMAAABSRVMD
        AAAAUkVTAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEZOU1RGTFBS
      SCRIPT: | 
        Option Explicit
        Function web_queryGet(url, getData, ByRef status, ByRef res)
          dim oXMLHTTP
          Set oXMLHTTP = CreateObject("MSXML2.XMLHTTP")
        
          call oXMLHTTP.open("GET", url & getData & "?deviceId=WEB", false)
          call oXMLHTTP.setRequestHeader("Content-Type", "application/x-www-form-urlencoded")
          
          on error resume next
          call oXMLHTTP.send
          web_queryGet = err.Description
          on error goto 0
          
          res = oXMLHTTP.responseText
          status = oXMLHTTP.Status
        End Function
        
  - 
    Properties: 
      Class: "TgdcReportGroup"
      RUID: 1176277023_1457844439
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
      HeadObject: 1176277257_1457844439
    Fields: 
      PARENT: ~
      NAME: "Отчеты(gdc_frmAttrUserDefinedUSR_GDMN_USERS)"
      DESCRIPTION: ~
      USERGROUPNAME: "1176277023_1457844439"
      EDITIONDATE: 2020-09-24T17:38:48+03:00
  - 
    Properties: 
      Class: "TgdcMacrosGroup"
      RUID: 1176277022_1457844439
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
      HeadObject: 1176277257_1457844439
    Fields: 
      PARENT: ~
      NAME: "Локальные макросы"
      CLASSNAME: ""
      ISGLOBAL: 0
      OBJECTNAME: "gdc_frmAttrUserDefinedUSR_GDMN_USERS"
      OBJECTPARENT: ~
      SUBTYPE: ""
      EDITIONDATE: 2020-09-24T17:38:48+03:00
      DESCRIPTION: ~
  - 
    Properties: 
      Class: "TgdcMacrosGroup"
      RUID: 147173753_1545785791
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
    Fields: 
      PARENT: ~
      NAME: "Локальные макросы"
      CLASSNAME: ""
      ISGLOBAL: 0
      OBJECTNAME: "gdc_frmAttrUserDefinedUSR_GDMN_QUERYUSERS"
      OBJECTPARENT: ~
      SUBTYPE: ""
      EDITIONDATE: 2020-11-26T18:42:20+03:00
      DESCRIPTION: ~
  - 
    Properties: 
      Class: "TgdcDelphiObject"
      RUID: 1176276983_1457844439
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
      HeadObject: 1176277257_1457844439
    Fields: 
      PARENT: ~
      NAME: "gdc_frmAttrUserDefinedUSR_GDMN_USERS"
      CLASSNAME: ""
      DESCRIPTION: ~
      MACROSGROUPKEY: "1176277022_1457844439 Локальные макросы"
      OBJECTNAME: "gdc_frmAttrUserDefinedUSR_GDMN_USERS"
      OBJECTTYPE: 0
      REPORTGROUPKEY: "1176277023_1457844439 Отчеты(gdc_frmAttrUserDefinedUSR_GDMN_USERS)"
      SUBTYPE: ""
      EDITIONDATE: 2020-09-24T17:38:48+03:00
  - 
    Properties: 
      Class: "TgdcFunction"
      RUID: 1176277259_1457844439
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
      HeadObject: 1176277257_1457844439
    Fields: 
      NAME: "Macros1176277259_1457844439"
      COMMENT: ~
      EVENT: ~
      FUNCTIONTYPE: ~
      GROUPNAME: ~
      INHERITEDRULE: 0
      LANGUAGE: "VBScript"
      LOCALNAME: ~
      MODIFYDATE: 2021-06-15T18:45:02+03:00
      MODULE: "MACROS"
      MODULECODE: "1176276983_1457844439 gdc_frmAttrUserDefinedUSR_GDMN_USERS"
      OBJECTNAME: "gdc_frmAttrUserDefinedUSR_GDMN_USERS"
      OWNERNAME: ~
      PUBLICFUNCTION: 1
      SHORTCUT: ~
      USEDEBUGINFO: ~
      EDITIONDATE: 2022-09-30T15:04:34+03:00
      DISPLAYSCRIPT: | 
        MACROS1176277259_1457844439
        
      ENTEREDPARAMS: !!binary > 
        U0xQUlBSU1QJAAAAT1dORVJGT1JNCQAAAE9XTkVSRk9STQAAAAAAAAAAAAAAAAsAAAAAAAAAAAAA
        AABGTlNUUFJTVAkAAABTWVNURU1LRVkKAAAAz+7k8ejx8uXs4BAAAABVU1IkR0RNTl9TWVNURU1T
        CAAAAHVzciRuYW1lAgAAAGlkBwAAAAAAAAAAAgAAAF5SRk5TVEZMUFI=
      SCRIPT: | 
        '#include WEB_QUERYGET
        '#include WEB_QUERYPOST
        Option Explicit
        Sub Macros1176277259_1457844439(OwnerForm, SystemKey)
           dim web_service, version
          set web_service = (New TVB_Web_Service)(SystemKey(0))
          version = web_service.AppSystemVersion
          if version <> "v0" then
            call Application.MessageBox("Функциональность в данной версии системы перенесена в WEB ADMIN!!! ", "Внимание!", vbInformation + vbOkOnly + vbApplicationModal)
            exit sub
          end if
        
          'Вход пользователя
          call web_service.Login(web_service.AdminLogin, web_service.AdminPassw)
        
          If web_service.RequestStatus = 200 or web_service.RequestStatus = 403 Then
        
            dim Creator, strPostData, gdcObject, docId
            set Creator = new TCreator
            
            set gdcObject = OwnerForm.gdcObject
            docId = gdcObject.ID
            call gdcObject.SelectedID.Clear
            call gdcObject.AddToSelectedBookmark(OwnerForm.GetComponent("ibgrMain").SelectedRows)
            dim OldSubset
            OldSubset = gdcObject.SubSet
        
            gdcObject.Close
            gdcObject.Subset = "OnlySelected"
            gdcObject.Open
            gdcObject.First
        
            dim adminId, userName, userId, deviceId, isErr, code, JsonObj, resObj, errText
            set JsonObj = New TVB_gs_Json
        
            while not gdcObject.eof
              userId = gdcObject.FieldByName("USR$MOBILEID").AsString
              deviceId = gdcObject.FieldByName("USR$DEVICEID").AsString
              '1. Проверим, есть ли такой пользователь на сервере
              call web_service.GetUser(userId)
        
              if web_service.RequestStatus = 200 then
               '3. Генерируем активационный код
                call web_service.GetCode(deviceId)
                if web_service.RequestStatus = 200 then
                  set resObj = web_service.RequestData
                  gdcObject.Edit
                  gdcObject.FieldByName("USR$ACTIVEDCODE").AsString = resObj.SimpleValue("data", "")
                  gdcObject.FieldByName("USR$CODEDATE").AsDateTime = now()
                  gdcObject.Post
                end if
              end if
              gdcObject.Next
            wend
            'вернем сабсет обратно
            gdcObject.Close
            if OldSubset <> "" then
              gdcObject.Subset = OldSubset
            else
              gdcObject.Subset = "All"
            end if
            gdcObject.Open
            gdcObject.ID = docId
        
            call gdcObject.SelectedID.Clear
            'Выход пользователя
            call web_service.Logout()
        
            if web_service.HasError then
              call Application.MessageBox("Генерация кодов выполнено с ошибками! Смотрите файл с ошибками", "Внимание!", vbInformation + vbOkOnly + vbApplicationModal)
            else
              call Application.MessageBox("Генерация кодов выполнена успешно!", "Внимание!", vbInformation + vbOkOnly + vbApplicationModal)
            end if
          else
            call Application.MessageBox(web_service.RequestError, "Внимание!", vbInformation + vbOkOnly + vbApplicationModal)
          end if
        End Sub
        
    Set: 
      - 
        Table: "RP_ADDITIONALFUNCTION"
        Items: 
          - 
            ADDFUNCTIONKEY: "157976591_1065213694 web_queryGet"
          - 
            ADDFUNCTIONKEY: "157976589_1065213694 web_queryPost"
  - 
    Properties: 
      Class: "TgdcMacros"
      RUID: 1176277257_1457844439
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
    Fields: 
      NAME: "Deprecated. Сгенерировать новый код"
      DISPLAYINMENU: 0
      EXECUTEDATE: ~
      FUNCTIONKEY: "1176277259_1457844439 Macros1176277259_1457844439"
      ISLOCALEXECUTE: 0
      ISREBUILD: 0
      MACROSGROUPKEY: "1176277022_1457844439 Локальные макросы"
      OBJECTNAME: "gdc_frmAttrUserDefinedUSR_GDMN_USERS"
      SERVERKEY: ~
      SHORTCUT: 0
      EDITIONDATE: 2022-09-30T15:04:34+03:00
  - 
    Properties: 
      Class: "TgdcFunction"
      RUID: 1176277272_1457844439
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
      HeadObject: 1176277269_1457844439
    Fields: 
      NAME: "web_queryPatch"
      COMMENT: ~
      EVENT: ~
      FUNCTIONTYPE: ~
      GROUPNAME: ~
      INHERITEDRULE: 0
      LANGUAGE: "VBScript"
      LOCALNAME: ~
      MODIFYDATE: 2021-06-15T18:45:02+03:00
      MODULE: "UNKNOWN"
      MODULECODE: "1010001_17 APPLICATION"
      OBJECTNAME: "APPLICATION"
      OWNERNAME: ~
      PUBLICFUNCTION: 1
      SHORTCUT: ~
      USEDEBUGINFO: ~
      EDITIONDATE: 2020-10-02T15:37:51+03:00
      DISPLAYSCRIPT: | 
        WEB_QUERYPATCH
        
      ENTEREDPARAMS: !!binary > 
        U0xQUlBSU1QDAAAAVVJMAwAAAFVSTAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABGTlNUUFJTVAgA
        AABQT1NUREFUQQgAAABQT1NUREFUQQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABGTlNUUFJTVAYA
        AABTVEFUVVMGAAAAU1RBVFVTAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEZOU1RQUlNUAwAAAFJF
        UwMAAABSRVMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAARk5TVFBSU1QDAAAAU1RSAwAAAFNUUgAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAABGTlNURkxQUg==
      SCRIPT: | 
        Option Explicit
        Function web_queryPatch(url, postData, ByRef status, ByRef res, str)
          dim oXMLHTTP
          Set oXMLHTTP = CreateObject("MSXML2.XMLHTTP")
          call oXMLHTTP.Open("PATCH", url & "?deviceId=WEB", false)
          call oXMLHTTP.setRequestHeader("Content-Type", str)
          on error resume next
          call oXMLHTTP.Send(postData)
          web_queryPatch = err.Description
          on error goto 0
        
          res = oXMLHTTP.responseText
          status = oXMLHTTP.Status
        End Function
        
  - 
    Properties: 
      Class: "TgdcFunction"
      RUID: 1176277227_1457844439
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
      HeadObject: 1176277269_1457844439
    Fields: 
      NAME: "strRepl"
      COMMENT: ~
      EVENT: ~
      FUNCTIONTYPE: ~
      GROUPNAME: ~
      INHERITEDRULE: 0
      LANGUAGE: "VBScript"
      LOCALNAME: ~
      MODIFYDATE: 2021-06-15T18:45:02+03:00
      MODULE: "UNKNOWN"
      MODULECODE: "1010001_17 APPLICATION"
      OBJECTNAME: "APPLICATION"
      OWNERNAME: ~
      PUBLICFUNCTION: 1
      SHORTCUT: ~
      USEDEBUGINFO: ~
      EDITIONDATE: 2020-09-25T10:08:06+03:00
      DISPLAYSCRIPT: | 
        STRREPL
        
      ENTEREDPARAMS: !!binary > 
        U0xQUlBSU1QDAAAAU1RSAwAAAFNUUgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABGTlNURkxQUg==
      SCRIPT: | 
        Option Explicit
        Function strRepl(str)
          strRepl = Trim(Replace(Replace(Replace(str, "\", "\\"), """", "\"""), vbCrLf, "\n"))
        End Function
        
  - 
    Properties: 
      Class: "TgdcFunction"
      RUID: 1176277271_1457844439
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
      HeadObject: 1176277269_1457844439
    Fields: 
      NAME: "Macros1176277271_1457844439"
      COMMENT: ~
      EVENT: ~
      FUNCTIONTYPE: ~
      GROUPNAME: ~
      INHERITEDRULE: 0
      LANGUAGE: "VBScript"
      LOCALNAME: ~
      MODIFYDATE: 2021-06-15T18:45:03+03:00
      MODULE: "MACROS"
      MODULECODE: "1176276983_1457844439 gdc_frmAttrUserDefinedUSR_GDMN_USERS"
      OBJECTNAME: "gdc_frmAttrUserDefinedUSR_GDMN_USERS"
      OWNERNAME: ~
      PUBLICFUNCTION: 1
      SHORTCUT: ~
      USEDEBUGINFO: ~
      EDITIONDATE: 2022-05-23T18:05:12+03:00
      DISPLAYSCRIPT: | 
        MACROS1176277271_1457844439
        
      ENTEREDPARAMS: !!binary > 
        U0xQUlBSU1QJAAAAU1lTVEVNS0VZCgAAAM/u5PHo8fLl7OAQAAAAVVNSJEdETU5fU1lTVEVNUwgA
        AAB1c3IkbmFtZQIAAABpZAcAAAAAAAAAAAIAAABeUkZOU1RGTFBS
      SCRIPT: | 
        '#include STRREPL
        Option Explicit
        Sub Macros1176277271_1457844439(SystemKey)
          dim web_service, version
          set web_service = (New TVB_Web_Service)(SystemKey(0))
          version = web_service.AppSystemVersion
          if version <> "v0" then
            call Application.MessageBox("Функциональность в данной версии системы перенесена в WEB ADMIN!!! ", "Внимание!", vbInformation + vbOkOnly + vbApplicationModal)
            exit sub
          end if
        
          'Вход пользователя
          call web_service.Login(web_service.AdminLogin, web_service.AdminPassw)
        
          If web_service.RequestStatus = 200 or web_service.RequestStatus = 403 Then
            dim adminId, resObj, userId, deviceId, strPostData
            set resObj = web_service.RequestData
        
            adminId = resObj.SimpleValue("data", "")
            
            '1. Создаем пользователя
            strPostData =  _
              "{" & _
              """userName"":""" & strRepl(web_service.TaskUserLogin) & """" & _
              ",""password"":""" & strRepl(web_service.TaskUserLogin) & """"  & _
              ",""companies"":[""" & web_service.company & """]"  & _
              ",""creatorId"":""" & adminId & """" & _
              "}"
        
            call web_service.Signup(strPostData)
        
            if web_service.RequestStatus = 200 then
              set resObj = web_service.RequestData
              userId = resObj.SimpleValue("data", "")
        
              '2. Добавляем устройство
              strPostData = _
                "{" & _
                """deviceName"":""WEB"","  & _
                """userId"":""" & userId & """" & _
                "}"
        
              call web_service.AddDevice(strPostData)
              set resObj = web_service.RequestData
            end if
        
            'Выход пользователя
            call web_service.Logout()
        
            if web_service.HasError then
              call Application.MessageBox("Создание пользователя выполнено с ошибками! Смотрите файл с ошибками", "Внимание!", vbInformation + vbOkOnly + vbApplicationModal)
            else
              call Application.MessageBox("Создание пользователя выполнено успешно!", "Внимание!", vbInformation + vbOkOnly + vbApplicationModal)
            end if
          else
            call Application.MessageBox(web_service.RequestError, "Внимание!", vbInformation + vbOkOnly + vbApplicationModal)
          end if
        End Sub
        
    Set: 
      - 
        Table: "RP_ADDITIONALFUNCTION"
        Items: 
          - 
            ADDFUNCTIONKEY: "1176277227_1457844439 strRepl"
  - 
    Properties: 
      Class: "TgdcMacros"
      RUID: 1176277269_1457844439
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
    Fields: 
      NAME: "Deprecated. Создать пользователя для автозадачи"
      DISPLAYINMENU: 0
      EXECUTEDATE: ~
      FUNCTIONKEY: "1176277271_1457844439 Macros1176277271_1457844439"
      ISLOCALEXECUTE: 0
      ISREBUILD: 0
      MACROSGROUPKEY: "1176277022_1457844439 Локальные макросы"
      OBJECTNAME: "gdc_frmAttrUserDefinedUSR_GDMN_USERS"
      SERVERKEY: ~
      SHORTCUT: 0
      EDITIONDATE: 2022-05-23T18:05:12+03:00
  - 
    Properties: 
      Class: "TgdcFunction"
      RUID: 1176277226_1457844439
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
      HeadObject: 1176277238_1457844439
    Fields: 
      NAME: "web_sendUsersToServer"
      COMMENT: ~
      EVENT: ~
      FUNCTIONTYPE: ~
      GROUPNAME: ~
      INHERITEDRULE: 0
      LANGUAGE: "VBScript"
      LOCALNAME: ~
      MODIFYDATE: 2021-06-15T18:45:03+03:00
      MODULE: "UNKNOWN"
      MODULECODE: "1010001_17 APPLICATION"
      OBJECTNAME: "APPLICATION"
      OWNERNAME: ~
      PUBLICFUNCTION: 1
      SHORTCUT: ~
      USEDEBUGINFO: ~
      EDITIONDATE: 2021-10-27T14:16:41+03:00
      DISPLAYSCRIPT: | 
        WEB_SENDUSERSTOSERVER
        
      ENTEREDPARAMS: !!binary > 
        U0xQUlBSU1QJAAAAU1lTVEVNS0VZCQAAAFNZU1RFTUtFWQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AABGTlNURkxQUg==
      SCRIPT: | 
        '#include TVB_GS_JSON
        '#include WEB_QUERYGET
        '#include STRREPL
        '#include WEB_QUERYPOST
        Option Explicit
        Function web_sendUsersToServer(systemkey)
          dim web_service
          set web_service = (New TVB_Web_Service)(systemkey)
          dim version
          version = web_service.AppSystemVersion
          if version <> "v0" then
            call Application.MessageBox("Функциональность в данной версии системы перенесена в WEB ADMIN!!! ", "Внимание!", vbInformation + vbOkOnly + vbApplicationModal)
            exit function
          end if
          dim q, Creator, selectQuery
          set Creator = new TCreator
        
          set q = Creator.GetObject(nil, "TIBSQL", "")
          q.Transaction = gdcBaseManager.ReadTransaction
          q.SQL.Text = _
            "SELECT " & _
            " q.USR$SQLQUERY " & _
            "FROM USR$GDMN_QUERYUSERS q " & _
            "WHERE q.USR$SYSTEMKEY = :systemkey "
          q.ParamByName("systemkey").AsInteger = systemkey
          q.ExecQuery
        
          selectQuery = q.FieldByName("USR$SQLQUERY").AsString
        
          q.Close
          q.SQL.Text = selectQuery
          if InStr(LCase(selectQuery), ":systemkey") > 0 then
            q.ParamByName("systemkey").AsInteger = systemkey
          end if
          on error resume next
          q.ExecQuery
        
          if err.Number <> 0 then
            call Application.MessageBox(err.Description, "Ошибка запроса пользователей!", vbOkOnly + vbInformation)
            exit function
          end if
          on error goto 0
        
          dim Transaction
          set Transaction = Creator.GetObject(Null, "TIBTransaction", "Transaction")
          Transaction.Params.Add("nowait")
          Transaction.DefaultDatabase = gdcBaseManager.Database
          Transaction.StartTransaction
        
          dim qIns
          set qIns = Creator.GetObject(nil, "TIBSQL", "")
          qIns.Transaction = Transaction
          qIns.SQL.Text = _
            "UPDATE OR INSERT INTO USR$GDMN_USERS (USR$MOBILEID, USR$SYSTEMKEY, USR$CONTACTKEY, USR$DEVICEID, USR$ACTIVEDCODE, USR$CODEDATE, USR$NOTACTIVE) " & _
            "  VALUES (:MOBILEID, :SYSTEMKEY, :CONTACTKEY, :DEVICEID, :ACTIVEDCODE, :CODEDATE, 0) " & _
            "  MATCHING(USR$SYSTEMKEY, USR$CONTACTKEY) "
        
          if q.eof then
            call Application.MessageBox("Нет данных по пользователям!", "Ошибка запроса пользователей!", vbOkOnly + vbInformation + vbSystemModal)
            exit function
          end if
        
          dim strPostData, status, res
          'Вход администратора компании
          call web_service.Login(web_service.AdminLogin, web_service.AdminPassw)
        
          If web_service.RequestStatus <> 200 Then
            call Application.MessageBox (web_service.RequestError, "Внимание!", vbOkOnly + vbInformation)
            exit function
          End If
        
          dim adminId, userName, userId, firstName, lastName, firstN, middleN, deviceId, code, middlename, JsonObj, resObj, errText, externalContactId, userPass
          set resObj = web_service.RequestData
        
          adminId = resObj.SimpleValue("data", "")
        
          Dim P : Set P = Creator.GetObject(nil, "TgdccProgress", "")
          P.StartWork "GDMN", "Идет экспорт пользователей на сервер. Пожалуйста, подождите...", 10, True, True
        
          while not q.eof And (Not P.Canceled)
            P.StartStep q.FieldByName("surname").AsString, 1
        
            externalContactId = q.FieldByName("contactkey").AsInteger
            userName = Trim(q.FieldByName("surname").AsString)
            firstName = Trim(q.FieldByName("firstName").AsString)
            lastName = Trim(q.FieldByName("surname").AsString)
            middlename = Trim(q.FieldByName("middlename").AsString)
            
            userPass = Trim(q.FieldByName("password").AsString)
        
            firstN = Left(firstName, 1)
            if firstN <> "" then userName = userName & " " & firstN
            middleN = Left(middlename, 1)
            if middleN <> "" then
              if firstN <> "" then userName = userName & "."
              userName = userName & middleN & "."
            end if
        
            '1. Создаем пользователя
            strPostData =  _
              "{""externalId"":""" & externalContactId & """" & _
              ",""userName"":""" & strRepl(userName) & """" & _
              ",""password"":""" & strRepl(userPass) & """"
        
            if firstName <> "" then strPostData = strPostData & ",""firstName"":""" & strRepl(firstName) & """"
            if lastName  <> "" then strPostData = strPostData & ",""lastName"":""" & strRepl(lastName) & """"
        
            strPostData = strPostData & _
              ",""companies"":[""" & web_service.Company & """]"  & _
              ",""creatorId"":""" & adminId & """" & _
              "}"
        
            call web_service.Signup(strPostData)
        
            set resObj = web_service.RequestData
            if web_service.RequestStatus = 200 then
              userId = resObj.SimpleValue("data", "")
        
              '2. Добавляем устройство
              strPostData = _
                "{" & _
                """deviceName"":""Mobile phone"","  & _
                """userId"":""" & userId & """" & _
                "}"
        
              call web_service.AddDevice(strPostData)
              set resObj = web_service.RequestData
        
              if web_service.RequestStatus = 201 then
                deviceId = resObj.SimpleValue("data", "")
                '3. Генерируем активационный код
                call web_service.GetCode(deviceId)
        
                if web_service.RequestStatus = 200 then
                  set resObj = web_service.RequestData
                  code = resObj.SimpleValue("data", "")
        
                  'Записываем полученные данные в таблицу пользователей в гедымине
                  qIns.Close
                  qIns.ParamByName("SYSTEMKEY").AsInteger = systemKey
                  qIns.ParamByName("CONTACTKEY").AsInteger = externalContactId
                  qIns.ParamByName("DEVICEID").AsString = deviceId
                  qIns.ParamByName("ACTIVEDCODE").AsString = code
                  qIns.ParamByName("MOBILEID").AsString = userId
                  qIns.ParamByName("CODEDATE").AsDateTime = now()
                  on error resume next
                  qIns.ExecQuery
                  if err.number <> 0 then
                    web_service.Log.WriteLine("Данные по пользователю " & userName & " в таблицу не добавлены! Ошибка: " & err.description & ".")
                  end if
                  on error goto 0
                end if
              end if
            end if
            q.Next
          wend
        
          'Выход пользователя
          call web_service.Logout()
        
          if web_service.HasError then
            P.EndWork "Экспорт выполнен с ошибками!", False
          else
            if Transaction.InTransaction then
              Transaction.Commit
            else
              Transaction.RollBack
            end if
            P.EndWork "Экспорт успешно выполнен!", False
          end if
        End Function
        
    Set: 
      - 
        Table: "RP_ADDITIONALFUNCTION"
        Items: 
          - 
            ADDFUNCTIONKEY: "147026436_1220419898 TVB_gs_Json"
          - 
            ADDFUNCTIONKEY: "157976591_1065213694 web_queryGet"
          - 
            ADDFUNCTIONKEY: "1176277227_1457844439 strRepl"
          - 
            ADDFUNCTIONKEY: "157976589_1065213694 web_queryPost"
  - 
    Properties: 
      Class: "TgdcFunction"
      RUID: 1176277240_1457844439
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
      HeadObject: 1176277238_1457844439
    Fields: 
      NAME: "Macros1176277240_1457844439"
      COMMENT: ~
      EVENT: ~
      FUNCTIONTYPE: ~
      GROUPNAME: ~
      INHERITEDRULE: 0
      LANGUAGE: "VBScript"
      LOCALNAME: ~
      MODIFYDATE: 2021-06-15T18:45:03+03:00
      MODULE: "MACROS"
      MODULECODE: "1176276983_1457844439 gdc_frmAttrUserDefinedUSR_GDMN_USERS"
      OBJECTNAME: "gdc_frmAttrUserDefinedUSR_GDMN_USERS"
      OWNERNAME: ~
      PUBLICFUNCTION: 1
      SHORTCUT: ~
      USEDEBUGINFO: ~
      EDITIONDATE: 2022-05-23T18:05:12+03:00
      DISPLAYSCRIPT: | 
        MACROS1176277240_1457844439
        
      ENTEREDPARAMS: !!binary > 
        U0xQUlBSU1QJAAAAU1lTVEVNS0VZCgAAAM/u5PHo8fLl7OAQAAAAVVNSJEdETU5fU1lTVEVNUwgA
        AABVU1IkTkFNRQIAAABJRAcAAAAAAAAAAAIAAABeUkZOU1RGTFBS
      SCRIPT: | 
        '#include WEB_SENDUSERSTOSERVER
        Option Explicit
        Sub Macros1176277240_1457844439(systemKey)
          call web_sendUsersToServer(systemKey(0))
        End Sub
        
    Set: 
      - 
        Table: "RP_ADDITIONALFUNCTION"
        Items: 
          - 
            ADDFUNCTIONKEY: "1176277226_1457844439 web_sendUsersToServer"
  - 
    Properties: 
      Class: "TgdcMacrosGroup"
      RUID: 147173028_1545785791
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
      HeadObject: 147173030_1545785791
    Fields: 
      PARENT: ~
      NAME: "Локальные макросы"
      CLASSNAME: ""
      ISGLOBAL: 0
      OBJECTNAME: "gdc_dlgAttrUserDefinedUSR_GDMN_REFERENCES"
      OBJECTPARENT: ~
      SUBTYPE: ""
      EDITIONDATE: 2020-11-26T11:37:08+03:00
      DESCRIPTION: ~
  - 
    Properties: 
      Class: "TgdcReportGroup"
      RUID: 147173754_1545785791
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
    Fields: 
      PARENT: ~
      NAME: "Отчеты(gdc_frmAttrUserDefinedUSR_GDMN_QUERYUSERS_3)"
      DESCRIPTION: ~
      USERGROUPNAME: "147173754_1545785791"
      EDITIONDATE: 2020-11-26T18:42:20+03:00
  - 
    Properties: 
      Class: "TgdcMacrosGroup"
      RUID: 147163109_1545402342
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
    Fields: 
      PARENT: ~
      NAME: "Локальные макросы"
      CLASSNAME: ""
      ISGLOBAL: 0
      OBJECTNAME: "gdc_frmAttrUserDefinedUSR_GDMN_SYSTEMS"
      OBJECTPARENT: ~
      SUBTYPE: ""
      EDITIONDATE: 2020-10-15T00:35:53+03:00
      DESCRIPTION: ~
  - 
    Properties: 
      Class: "TgdcReportGroup"
      RUID: 147163110_1545402342
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
    Fields: 
      PARENT: ~
      NAME: "Отчеты(gdc_frmAttrUserDefinedUSR_GDMN_SYSTEMS)1"
      DESCRIPTION: ~
      USERGROUPNAME: "147163110_1545402342"
      EDITIONDATE: 2020-10-15T00:35:53+03:00
  - 
    Properties: 
      Class: "TgdcMacrosGroup"
      RUID: 147162779_1545402342
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
    Fields: 
      PARENT: ~
      NAME: "Локальные макросы"
      CLASSNAME: ""
      ISGLOBAL: 0
      OBJECTNAME: "gdc_frmAttrUserDefinedUSR_GDMN_DOCUMENTS"
      OBJECTPARENT: ~
      SUBTYPE: ""
      EDITIONDATE: 2020-10-14T21:35:37+03:00
      DESCRIPTION: ~
  - 
    Properties: 
      Class: "TgdcReportGroup"
      RUID: 147162780_1545402342
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
    Fields: 
      PARENT: ~
      NAME: "Отчеты(gdc_frmAttrUserDefinedUSR_GDMN_DOCUMENTS)"
      DESCRIPTION: ~
      USERGROUPNAME: "147162780_1545402342"
      EDITIONDATE: 2020-10-14T21:35:37+03:00
  - 
    Properties: 
      Class: "TgdcMacrosGroup"
      RUID: 147172817_1545785791
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
    Fields: 
      PARENT: ~
      NAME: "Локальные макросы"
      CLASSNAME: ""
      ISGLOBAL: 0
      OBJECTNAME: "gdc_frmAttrUserDefinedUSR_GDMN_REFERENCES"
      OBJECTPARENT: ~
      SUBTYPE: ""
      EDITIONDATE: 2020-11-24T10:35:16+03:00
      DESCRIPTION: ~
  - 
    Properties: 
      Class: "TgdcReportGroup"
      RUID: 147172818_1545785791
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
    Fields: 
      PARENT: ~
      NAME: "Отчеты(gdc_frmAttrUserDefinedUSR_GDMN_REFERENCES_4)"
      DESCRIPTION: ~
      USERGROUPNAME: "147172818_1545785791"
      EDITIONDATE: 2020-11-24T10:35:16+03:00
  - 
    Properties: 
      Class: "TgdcMacros"
      RUID: 1176277238_1457844439
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
    Fields: 
      NAME: "Deprecated. Экспорт пользователей на сервер (запрос)"
      DISPLAYINMENU: 0
      EXECUTEDATE: ~
      FUNCTIONKEY: "1176277240_1457844439 Macros1176277240_1457844439"
      ISLOCALEXECUTE: 0
      ISREBUILD: 0
      MACROSGROUPKEY: "1176277022_1457844439 Локальные макросы"
      OBJECTNAME: "gdc_frmAttrUserDefinedUSR_GDMN_USERS"
      SERVERKEY: ~
      SHORTCUT: 0
      EDITIONDATE: 2022-05-23T18:05:12+03:00
  - 
    Properties: 
      Class: "TgdcDelphiObject"
      RUID: 1176277285_1457844439
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
      HeadObject: 1176280850_1457844439
    Fields: 
      PARENT: "147275685_124484738 TgdcBase\\TgdcAttrUserDefined"
      NAME: "TgdcAttrUserDefinedUSR_GDMN_REFERENCES"
      CLASSNAME: "TgdcAttrUserDefined"
      DESCRIPTION: ~
      MACROSGROUPKEY: ~
      OBJECTNAME: ""
      OBJECTTYPE: 1
      REPORTGROUPKEY: ~
      SUBTYPE: "USR_GDMN_REFERENCES"
      EDITIONDATE: 2020-10-08T16:32:43+03:00
  - 
    Properties: 
      Class: "TgdcFunction"
      RUID: 1176280850_1457844439
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
    Fields: 
      NAME: "TgdcAttrUserDefinedUSR_GDMN_REFERENCESGetWhereClause"
      COMMENT: ~
      EVENT: ~
      FUNCTIONTYPE: ~
      GROUPNAME: ~
      INHERITEDRULE: 0
      LANGUAGE: "VBScript"
      LOCALNAME: ~
      MODIFYDATE: 2021-06-15T18:45:03+03:00
      MODULE: "METHOD"
      MODULECODE: "1176277285_1457844439 TgdcBase\\TgdcAttrUserDefined\\TgdcAttrUserDefinedUSR_GDMN_REFERENCES"
      OBJECTNAME: "TgdcAttrUserDefinedUSR_GDMN_REFERENCES"
      OWNERNAME: ~
      PUBLICFUNCTION: 1
      SHORTCUT: ~
      USEDEBUGINFO: ~
      EDITIONDATE: 2020-11-04T10:27:09+03:00
      DISPLAYSCRIPT: | 
        TGDCATTRUSERDEFINEDUSR_GDMN_REFERENCESGETWHERECLAUSE
        
      ENTEREDPARAMS: !!binary > 
        U0xQUlBSU1QEAAAAU0VMRgQAAABTRUxGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEZOU1RGTFBS
      SCRIPT: | 
        Option Explicit
        Function TgdcAttrUserDefinedUSR_GDMN_REFERENCESGetWhereClause(Self)
        '*** Данный код необходим для вызова кода определенного в gdc-классе.***
        '*** При его удаления  возможно нарушение  правильной работы системы.***
          dim Res
          Res =  Inherited(Self, "GetWhereClause", Array(Self))
        '***               Конец кода поддержки gdc-класса.                  ***
          if Self.HasSubSet("ByRemains") then
            if  Res = "" then
              Res = " WHERE USR$MOBILENAME = 'remains' "
            else
              Res = Res +  " AND USR$MOBILENAME = 'remains' "
            end if
          elseif Self.HasSubSet("ByReference") then
            if  Res = "" then
              Res = " WHERE COALESCE(USR$MOBILENAME, '') <> 'remains' "
            else
              Res = Res +  " AND COALESCE(USR$MOBILENAME, '') <> 'remains' "
            end if
          end if
          TgdcAttrUserDefinedUSR_GDMN_REFERENCESGetWhereClause = Res
        End Function
        
  - 
    Properties: 
      Class: "TgdcFunction"
      RUID: 1176277288_1457844439
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
    Fields: 
      NAME: "TgdcAttrUserDefinedUSR_GDMN_REFERENCESCheckSubSet"
      COMMENT: ~
      EVENT: ~
      FUNCTIONTYPE: ~
      GROUPNAME: ~
      INHERITEDRULE: 0
      LANGUAGE: "VBScript"
      LOCALNAME: ~
      MODIFYDATE: 2021-06-15T18:45:03+03:00
      MODULE: "METHOD"
      MODULECODE: "1176277285_1457844439 TgdcBase\\TgdcAttrUserDefined\\TgdcAttrUserDefinedUSR_GDMN_REFERENCES"
      OBJECTNAME: "TgdcAttrUserDefinedUSR_GDMN_REFERENCES"
      OWNERNAME: ~
      PUBLICFUNCTION: 1
      SHORTCUT: ~
      USEDEBUGINFO: ~
      EDITIONDATE: 2020-10-19T17:00:01+03:00
      DISPLAYSCRIPT: | 
        TGDCATTRUSERDEFINEDUSR_GDMN_REFERENCESCHECKSUBSET
        
      ENTEREDPARAMS: !!binary > 
        U0xQUlBSU1QEAAAAU0VMRgQAAABTRUxGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEZOU1RQUlNU
        BwAAAEFTVUJTRVQHAAAAQVNVQlNFVAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABGTlNURkxQUg==
      SCRIPT: | 
        Option Explicit
        Function TgdcAttrUserDefinedUSR_GDMN_REFERENCESCheckSubSet(Self, ASubSet)
        '*** Данный код необходим для вызова кода определенного в gdc-классе.***
        '*** При его удаления  возможно нарушение  правильной работы системы.***
          TgdcAttrUserDefinedUSR_GDMN_REFERENCESCheckSubSet = _
            Inherited(Self, "CheckSubSet", Array(Self, ASubSet)) or (ASubSet = "ByRemains") or (ASubSet = "ByReference")
        '***               Конец кода поддержки gdc-класса.                  ***
        End Function
        
  - 
    Properties: 
      Class: "TgdcEvent"
      RUID: 1176280848_1457844439
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
    Fields: 
      DISABLE: ~
      EVENTNAME: "GETWHERECLAUSE"
      FUNCTIONKEY: "1176280850_1457844439 TgdcAttrUserDefinedUSR_GDMN_REFERENCESGetWhereClause"
      OBJECTKEY: "1176277285_1457844439 TgdcBase\\TgdcAttrUserDefined\\TgdcAttrUserDefinedUSR_GDMN_REFERENCES"
      OBJECTNAME: "TgdcAttrUserDefinedUSR_GDMN_REFERENCES"
      PARENTNAME: "TgdcAttrUserDefined"
      EDITIONDATE: 2020-11-04T10:27:10+03:00
  - 
    Properties: 
      Class: "TgdcEvent"
      RUID: 1176277286_1457844439
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
    Fields: 
      DISABLE: ~
      EVENTNAME: "CHECKSUBSET"
      FUNCTIONKEY: "1176277288_1457844439 TgdcAttrUserDefinedUSR_GDMN_REFERENCESCheckSubSet"
      OBJECTKEY: "1176277285_1457844439 TgdcBase\\TgdcAttrUserDefined\\TgdcAttrUserDefinedUSR_GDMN_REFERENCES"
      OBJECTNAME: "TgdcAttrUserDefinedUSR_GDMN_REFERENCES"
      PARENTNAME: "TgdcAttrUserDefined"
      EDITIONDATE: 2020-10-19T17:00:01+03:00
  - 
    Properties: 
      Class: "TgdcDelphiObject"
      RUID: 148998258_1521203129
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
    Fields: 
      PARENT: ~
      NAME: "gdc_frmAttrUserDefinedUSR_GDMN_QUERYUSERS"
      CLASSNAME: ""
      DESCRIPTION: ~
      MACROSGROUPKEY: "147173753_1545785791 Локальные макросы"
      OBJECTNAME: "gdc_frmAttrUserDefinedUSR_GDMN_QUERYUSERS"
      OBJECTTYPE: 0
      REPORTGROUPKEY: "147173754_1545785791 Отчеты(gdc_frmAttrUserDefinedUSR_GDMN_QUERYUSERS_3)"
      SUBTYPE: ""
      EDITIONDATE: 2020-11-26T18:42:20+03:00
  - 
    Properties: 
      Class: "TgdcDelphiObject"
      RUID: 148998330_1521203129
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
    Fields: 
      PARENT: ~
      NAME: "gdc_dlgAttrUserDefinedUSR_GDMN_SYSTEMS"
      CLASSNAME: ""
      DESCRIPTION: ~
      MACROSGROUPKEY: "147040937_1730903579 Локальные макросы"
      OBJECTNAME: "gdc_dlgAttrUserDefinedUSR_GDMN_SYSTEMS"
      OBJECTTYPE: 0
      REPORTGROUPKEY: "147040938_1730903579 Отчеты(gdc_dlgAttrUserDefinedUSR_GDMN_SYSTEMS)"
      SUBTYPE: ""
      EDITIONDATE: 2021-10-28T18:44:53+03:00
  - 
    Properties: 
      Class: "TgdcDelphiObject"
      RUID: 148998328_1521203129
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
    Fields: 
      PARENT: ~
      NAME: "gdc_frmAttrUserDefinedUSR_GDMN_SYSTEMS"
      CLASSNAME: ""
      DESCRIPTION: ~
      MACROSGROUPKEY: "147163109_1545402342 Локальные макросы"
      OBJECTNAME: "gdc_frmAttrUserDefinedUSR_GDMN_SYSTEMS"
      OBJECTTYPE: 0
      REPORTGROUPKEY: "147163110_1545402342 Отчеты(gdc_frmAttrUserDefinedUSR_GDMN_SYSTEMS)1"
      SUBTYPE: ""
      EDITIONDATE: 2020-10-15T00:35:53+03:00
  - 
    Properties: 
      Class: "TgdcDelphiObject"
      RUID: 148998319_1521203129
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
    Fields: 
      PARENT: ~
      NAME: "gdc_frmAttrUserDefinedUSR_GDMN_DOCUMENTS"
      CLASSNAME: ""
      DESCRIPTION: ~
      MACROSGROUPKEY: "147162779_1545402342 Локальные макросы"
      OBJECTNAME: "gdc_frmAttrUserDefinedUSR_GDMN_DOCUMENTS"
      OBJECTTYPE: 0
      REPORTGROUPKEY: "147162780_1545402342 Отчеты(gdc_frmAttrUserDefinedUSR_GDMN_DOCUMENTS)"
      SUBTYPE: ""
      EDITIONDATE: 2020-10-14T21:35:37+03:00
  - 
    Properties: 
      Class: "TgdcReportGroup"
      RUID: 147173029_1545785791
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
      HeadObject: 147173030_1545785791
    Fields: 
      PARENT: ~
      NAME: "Отчеты(gdc_dlgAttrUserDefinedUSR_GDMN_REFERENCES)"
      DESCRIPTION: ~
      USERGROUPNAME: "147173029_1545785791"
      EDITIONDATE: 2020-11-26T11:37:08+03:00
  - 
    Properties: 
      Class: "TgdcDelphiObject"
      RUID: 148998313_1521203129
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
    Fields: 
      PARENT: ~
      NAME: "gdc_frmAttrUserDefinedUSR_GDMN_REFERENCES"
      CLASSNAME: ""
      DESCRIPTION: ~
      MACROSGROUPKEY: "147172817_1545785791 Локальные макросы"
      OBJECTNAME: "gdc_frmAttrUserDefinedUSR_GDMN_REFERENCES"
      OBJECTTYPE: 0
      REPORTGROUPKEY: "147172818_1545785791 Отчеты(gdc_frmAttrUserDefinedUSR_GDMN_REFERENCES_4)"
      SUBTYPE: ""
      EDITIONDATE: 2020-11-24T10:35:16+03:00
  - 
    Properties: 
      Class: "TgdcDelphiObject"
      RUID: 148998334_1521203129
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
    Fields: 
      PARENT: ~
      NAME: "gdc_dlgAttrUserDefinedUSR_GDMN_REFERENCES"
      CLASSNAME: ""
      DESCRIPTION: ~
      MACROSGROUPKEY: "147173028_1545785791 Локальные макросы"
      OBJECTNAME: "gdc_dlgAttrUserDefinedUSR_GDMN_REFERENCES"
      OBJECTTYPE: 0
      REPORTGROUPKEY: "147173029_1545785791 Отчеты(gdc_dlgAttrUserDefinedUSR_GDMN_REFERENCES)"
      SUBTYPE: ""
      EDITIONDATE: 2020-11-26T11:37:08+03:00
  - 
    Properties: 
      Class: "TgdcFunction"
      RUID: 147163280_1545785791
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
      HeadObject: 147163278_1545785791
    Fields: 
      NAME: "usrg_actTestAdminOnExecute"
      COMMENT: ~
      EVENT: "ONEXECUTE"
      FUNCTIONTYPE: ~
      GROUPNAME: ~
      INHERITEDRULE: 0
      LANGUAGE: "VBScript"
      LOCALNAME: ~
      MODIFYDATE: 2021-06-15T18:45:03+03:00
      MODULE: "EVENTS"
      MODULECODE: "1176268402_1457844439 usrf_gdmn_config"
      OBJECTNAME: "usrf_gdmn_config"
      OWNERNAME: ~
      PUBLICFUNCTION: 1
      SHORTCUT: ~
      USEDEBUGINFO: 0
      EDITIONDATE: 2022-01-25T12:40:31+03:00
      DISPLAYSCRIPT: | 
        USRG_ACTTESTADMINONEXECUTE
        
      ENTEREDPARAMS: !!binary > 
        U0xQUlBSU1QGAAAAU0VOREVSBgAAAFNFTkRFUgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABGTlNU
        RkxQUg==
      SCRIPT: | 
        Option Explicit
        Sub usrg_actTestAdminOnExecute(ByVal Sender)
        '*** Данный код необходим для вызова встроенного обработчика ***
        '*** В случае его удаления возможно нарушение работы системы ***
          Call   Inherited(Sender, "OnExecute", Array(Sender))
        '*** конец кода поддержки встроенного обработчика            ***
          dim web_service, adminLogin, adminPassw, errorMessage
          Set web_service = New TVB_Web_Service
        
          adminLogin = Sender.OwnerForm.GetComponent("usrg_edAdminLogin").Text
          adminPassw = Sender.OwnerForm.GetComponent("usrg_edAdminPassword").Text
        
          call web_service.TestUser(Sender.OwnerForm.GetComponent("usrg_edURL").Text, adminLogin, adminPassw)
        
          if web_service.RequestStatus = 200 then
            call Application.MessageBox("Проверка пользователя " & adminLogin & " прошла успешно!", "Внимание!", vbInformation + vbOkOnly + vbApplicationModal)
          else
            if web_service.RequestError > "" then
              errorMessage = web_service.RequestError
            else
              errorMessage = " Неустановленная ошибка. " & vbCr & vbCr & _
              " Если GEDEMIN запущен на том же компьютере, " & vbCr & _
              " что и сервер приложения, "  & vbCr & _
              " замените IP в URL в параметрах подключения на localhost.  " & vbCr & _
              " Порт при этом не изменяйте. "
            end if
            call Application.MessageBox(errorMessage, "Внимание!", vbInformation + vbOkOnly + vbApplicationModal)
          end if
        End Sub
        
  - 
    Properties: 
      Class: "TgdcDelphiObject"
      RUID: 147163277_1545785791
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
      HeadObject: 147163278_1545785791
    Fields: 
      PARENT: "1176268402_1457844439 usrf_gdmn_config"
      NAME: "usrg_actTestAdmin"
      CLASSNAME: ""
      DESCRIPTION: ~
      MACROSGROUPKEY: ~
      OBJECTNAME: "usrg_actTestAdmin"
      OBJECTTYPE: 0
      REPORTGROUPKEY: ~
      SUBTYPE: ""
      EDITIONDATE: 2020-10-15T17:36:11+03:00
  - 
    Properties: 
      Class: "TgdcEvent"
      RUID: 147163278_1545785791
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
    Fields: 
      DISABLE: 0
      EVENTNAME: "ONEXECUTE"
      FUNCTIONKEY: "147163280_1545785791 usrg_actTestAdminOnExecute"
      OBJECTKEY: "147163277_1545785791 usrf_gdmn_config\\usrg_actTestAdmin"
      OBJECTNAME: "usrg_actTestAdmin"
      PARENTNAME: "usrf_gdmn_config"
      EDITIONDATE: 2022-01-25T12:40:31+03:00
  - 
    Properties: 
      Class: "TgdcFunction"
      RUID: 147163276_1545785791
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
      HeadObject: 147163274_1545785791
    Fields: 
      NAME: "usrg_actTestServerOnExecute"
      COMMENT: ~
      EVENT: "ONEXECUTE"
      FUNCTIONTYPE: ~
      GROUPNAME: ~
      INHERITEDRULE: 0
      LANGUAGE: "VBScript"
      LOCALNAME: ~
      MODIFYDATE: 2021-06-15T18:45:03+03:00
      MODULE: "EVENTS"
      MODULECODE: "1176268402_1457844439 usrf_gdmn_config"
      OBJECTNAME: "usrf_gdmn_config"
      OWNERNAME: ~
      PUBLICFUNCTION: 1
      SHORTCUT: ~
      USEDEBUGINFO: 0
      EDITIONDATE: 2022-07-06T12:54:45+03:00
      DISPLAYSCRIPT: | 
        USRG_ACTTESTSERVERONEXECUTE
        
      ENTEREDPARAMS: !!binary > 
        U0xQUlBSU1QGAAAAU0VOREVSBgAAAFNFTkRFUgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABGTlNU
        RkxQUg==
      SCRIPT: | 
        Option Explicit
        Sub usrg_actTestServerOnExecute(ByVal Sender)
        '*** Данный код необходим для вызова встроенного обработчика ***
        '*** В случае его удаления возможно нарушение работы системы ***
          Call   Inherited(Sender, "OnExecute", Array(Sender))
        '*** конец кода поддержки встроенного обработчика            ***
          dim web_service, ver
          ver = Sender.OwnerForm.GetComponent("usrg_gdmn_version").CurrentKeyInt
          if ver = -1 then
            call Application.MessageBox("Выберите версию системы !!! ", "Внимание!", vbInformation + vbOkOnly + vbApplicationModal)
            exit sub
          end if
          Set web_service = New TVB_Web_Service
          
          call web_service.CheckUrl(Sender.OwnerForm.GetComponent("usrg_edURL").Text)
        
          if web_service.RequestStatus = 200 then
            call Application.MessageBox("Подключение к серверу прошло успешно!", "Внимание!", vbInformation + vbOkOnly + vbApplicationModal)
          else
            call Application.MessageBox(web_service.RequestError, "Внимание!", vbInformation + vbOkOnly + vbApplicationModal)
          end if
        End Sub
        
  - 
    Properties: 
      Class: "TgdcDelphiObject"
      RUID: 147163273_1545785791
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
      HeadObject: 147163274_1545785791
    Fields: 
      PARENT: "1176268402_1457844439 usrf_gdmn_config"
      NAME: "usrg_actTestServer"
      CLASSNAME: ""
      DESCRIPTION: ~
      MACROSGROUPKEY: ~
      OBJECTNAME: "usrg_actTestServer"
      OBJECTTYPE: 0
      REPORTGROUPKEY: ~
      SUBTYPE: ""
      EDITIONDATE: 2020-10-15T16:47:38+03:00
  - 
    Properties: 
      Class: "TgdcEvent"
      RUID: 147163274_1545785791
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
    Fields: 
      DISABLE: 0
      EVENTNAME: "ONEXECUTE"
      FUNCTIONKEY: "147163276_1545785791 usrg_actTestServerOnExecute"
      OBJECTKEY: "147163273_1545785791 usrf_gdmn_config\\usrg_actTestServer"
      OBJECTNAME: "usrg_actTestServer"
      PARENTNAME: "usrf_gdmn_config"
      EDITIONDATE: 2022-07-06T12:54:45+03:00
  - 
    Properties: 
      Class: "TgdcFunction"
      RUID: 147163315_1545785791
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
      HeadObject: 147163313_1545785791
    Fields: 
      NAME: "usrg_actTestTaskUserOnExecute"
      COMMENT: ~
      EVENT: "ONEXECUTE"
      FUNCTIONTYPE: ~
      GROUPNAME: ~
      INHERITEDRULE: 0
      LANGUAGE: "VBScript"
      LOCALNAME: ~
      MODIFYDATE: 2021-06-15T18:45:03+03:00
      MODULE: "EVENTS"
      MODULECODE: "1176268402_1457844439 usrf_gdmn_config"
      OBJECTNAME: "usrf_gdmn_config"
      OWNERNAME: ~
      PUBLICFUNCTION: 1
      SHORTCUT: ~
      USEDEBUGINFO: 0
      EDITIONDATE: 2022-01-25T15:59:10+03:00
      DISPLAYSCRIPT: | 
        USRG_ACTTESTTASKUSERONEXECUTE
        
      ENTEREDPARAMS: !!binary > 
        U0xQUlBSU1QGAAAAU0VOREVSBgAAAFNFTkRFUgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABGTlNU
        RkxQUg==
      SCRIPT: | 
        Option Explicit
        Sub usrg_actTestTaskUserOnExecute(ByVal Sender)
        '*** Данный код необходим для вызова встроенного обработчика ***
        '*** В случае его удаления возможно нарушение работы системы ***
          Call   Inherited(Sender, "OnExecute", Array(Sender))
        '*** конец кода поддержки встроенного обработчика            ***
          dim web_service, taskUserLogin, taskUserPassw, Window, ParamResult, systemKey, errorMessage
          dim ibsql, Creator, version, CompanyKey
        
          set Window = System.GetNewParamWindow(0)
          call Window.AddLinkParam("Выберите подсистему:", "PRMLINKELEMENT", _
            "USR$GDMN_SYSTEMS", "ID", "USR$NAME", "", "", _
            "Подсистемы")
          Window.ParamList.Params(0).Required = True
          ParamResult = Window.Execute
          if not IsEmpty(ParamResult) then
            systemKey = ParamResult(0)(0)
          else
            exit sub
          end if
          
          Set web_service = (New TVB_Web_Service)(systemKey)
          set Creator = new TCreator
          set ibsql = Creator.GetObject(nil, "TIBSQL", "")
          ibsql.Transaction = gdcBaseManager.ReadTransaction
          version = web_service.AppSystemVersion
          'Проверка соответствия версии в форме версии в системе
          if Sender.OwnerForm.GetComponent("usrg_gdmn_version").CurrentKeyInt > 0 then
            if version <> Sender.OwnerForm.GetComponent("usrg_gdmn_version").Text then
              errorMessage = "Версия API в подсистеме не соответствует версии API в форме конфигурации! "
              call Application.MessageBox(errorMessage, "Внимание!", vbInformation + vbOkOnly + vbApplicationModal)
              exit sub
            end if
          end if
          
          taskUserLogin = Sender.OwnerForm.GetComponent("usrg_edTaskUserLogin").Text
          taskUserPassw = Sender.OwnerForm.GetComponent("usrg_edTaskUserPassword").Text
          CompanyKey =  Sender.OwnerForm.GetComponent("usrg_edCompanyKey").Text
          if CompanyKey = "" then
            errorMessage = " Код компании отсутствует или не верен! " & vbCr & _
              " нажмите кнопку 'Получить код'"
            call Application.MessageBox(errorMessage, "Внимание!", vbInformation + vbOkOnly + vbApplicationModal)
            exit sub
          end if
        
          if version <> "v0" then
            ibsql.Close
            ibsql.SQL.Text = _
              "select u.ID " & _
              "from USR$GDMN_USERS u " & _
              "where u.USR$SYSTEMKEY = :systemkey " & _
              "  and u.USR$MOBILELOGIN = :mobileLogin " & _
              "  and not u.USR$DEVICEID is null "
            ibsql.ParamByName("mobileLogin").AsString = taskUserLogin
            ibsql.ParamByName("systemkey").AsInteger = systemKey
            ibsql.ExecQuery
            if ibsql.RecordCount = 0 then
              errorMessage = " Пользователь " & taskUserLogin & _
                " отсутствует в справочнике 'Пользователи мобильного приложения'" & vbCr & _
                " либо у него не заполнен ID устройства." & vbCr & vbCr & _
                " Выполните макрос 'GDMN. Получить пользователей из WEB_ADMIN' " & vbCr & _
                " в справочнике  'Пользователи мобильного приложения' "
              call Application.MessageBox(errorMessage, "Внимание!", vbInformation + vbOkOnly + vbApplicationModal)
              exit sub
            end if
          end if
          call web_service.TestUser(Sender.OwnerForm.GetComponent("usrg_edURL").Text, taskUserLogin, taskUserPassw)
        
          if web_service.RequestStatus = 200 then
            call Application.MessageBox("Проверка пользователя " & taskUserLogin & " прошла успешно!", "Внимание!", vbInformation + vbOkOnly + vbApplicationModal)
          else
            if web_service.RequestError > "" then
              errorMessage = web_service.RequestError
            else
              errorMessage = " Неустановленная ошибка. Проверьте: " & vbCr & _
              " 1. Логин/пароль;" & vbCr & _
              " 2. Cоответствие базы файлов мобильному приложению; " & vbCr & _
              " 3. Код системы в пункте 'Подсистемы мобильного приложения'; " & vbCr  & _
              " 4. Алиас мобильного приложения у пользователя gdmn в пункте 'Пользователи мобильного приложения'; "
            end if
            call Application.MessageBox(errorMessage, "Внимание!", vbInformation + vbOkOnly + vbApplicationModal)
          end if
        End Sub
        
  - 
    Properties: 
      Class: "TgdcDelphiObject"
      RUID: 147163248_1545785791
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
      HeadObject: 147163313_1545785791
    Fields: 
      PARENT: "1176268402_1457844439 usrf_gdmn_config"
      NAME: "usrg_actTestTaskUser"
      CLASSNAME: ""
      DESCRIPTION: ~
      MACROSGROUPKEY: ~
      OBJECTNAME: "usrg_actTestTaskUser"
      OBJECTTYPE: 0
      REPORTGROUPKEY: ~
      SUBTYPE: ""
      EDITIONDATE: 2020-10-15T13:28:05+03:00
  - 
    Properties: 
      Class: "TgdcEvent"
      RUID: 147163313_1545785791
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
    Fields: 
      DISABLE: 0
      EVENTNAME: "ONEXECUTE"
      FUNCTIONKEY: "147163315_1545785791 usrg_actTestTaskUserOnExecute"
      OBJECTKEY: "147163248_1545785791 usrf_gdmn_config\\usrg_actTestTaskUser"
      OBJECTNAME: "usrg_actTestTaskUser"
      PARENTNAME: "usrf_gdmn_config"
      EDITIONDATE: 2022-01-25T15:59:10+03:00
  - 
    Properties: 
      Class: "TgdcFunction"
      RUID: 147163272_1545785791
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
      HeadObject: 147163270_1545785791
    Fields: 
      NAME: "usrg_actTestUserOnExecute"
      COMMENT: ~
      EVENT: "ONEXECUTE"
      FUNCTIONTYPE: ~
      GROUPNAME: ~
      INHERITEDRULE: 0
      LANGUAGE: "VBScript"
      LOCALNAME: ~
      MODIFYDATE: 2021-06-15T18:45:03+03:00
      MODULE: "EVENTS"
      MODULECODE: "1176268402_1457844439 usrf_gdmn_config"
      OBJECTNAME: "usrf_gdmn_config"
      OWNERNAME: ~
      PUBLICFUNCTION: 1
      SHORTCUT: ~
      USEDEBUGINFO: 0
      EDITIONDATE: 2022-05-12T12:51:13+03:00
      DISPLAYSCRIPT: | 
        USRG_ACTTESTUSERONEXECUTE
        
      ENTEREDPARAMS: !!binary > 
        U0xQUlBSU1QGAAAAU0VOREVSBgAAAFNFTkRFUgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABGTlNU
        RkxQUg==
      SCRIPT: | 
        Option Explicit
        Sub usrg_actTestUserOnExecute(ByVal Sender)
        '*** Данный код необходим для вызова встроенного обработчика ***
        '*** В случае его удаления возможно нарушение работы системы ***
          Call   Inherited(Sender, "OnExecute", Array(Sender))
        '*** конец кода поддержки встроенного обработчика            ***
          dim web_service, userLogin, userPassw, Window, ParamResult, systemKey, errorMessage
          dim ibsql, Creator, version, CompanyKey
          set Window = System.GetNewParamWindow(0)
          call Window.AddLinkParam("Выберите подсистему:", "PRMLINKELEMENT", _
            "USR$GDMN_SYSTEMS", "ID", "USR$NAME", "", "", _
            "Подсистемы")
          Window.ParamList.Params(0).Required = True
          ParamResult = Window.Execute
        
          if not IsEmpty(ParamResult) then
            systemKey = ParamResult(0)(0)
          else
            exit sub
          end if
          Set web_service = (New TVB_Web_Service)(systemKey)
          set Creator = new TCreator
          set ibsql = Creator.GetObject(nil, "TIBSQL", "")
          ibsql.Transaction = gdcBaseManager.ReadTransaction
          version = web_service.AppSystemVersion
          'Проверка соответствия версии в форме версии в системе
          if Sender.OwnerForm.GetComponent("usrg_gdmn_version").CurrentKeyInt > 0 then
            if version <> Sender.OwnerForm.GetComponent("usrg_gdmn_version").Text then
              errorMessage = "Версия API в подсистеме не соответствует версии API в форме конфигурации! "
              call Application.MessageBox(errorMessage, "Внимание!", vbInformation + vbOkOnly + vbApplicationModal)
              exit sub
            end if
          end if
          
          userLogin = Sender.OwnerForm.GetComponent("usrg_edUserLogin").Text
          userPassw = Sender.OwnerForm.GetComponent("usrg_edUserPassword").Text
          CompanyKey =  Sender.OwnerForm.GetComponent("usrg_edCompanyKey").Text
          if CompanyKey = "" then
            errorMessage = " Код компании отсутствует или не верен! " & vbCr  & _
              " нажмите кнопку 'Получить код'"
            call Application.MessageBox(errorMessage, "Внимание!", vbInformation + vbOkOnly + vbApplicationModal)
            exit sub
          end if
        
          if version <> "v0" then
            ibsql.Close
            ibsql.SQL.Text = _
              "select coalesce(u.USR$IS_ERP_USER, 0) as isErpUser, s.USR$CODE, u.id " & _
              "from USR$GDMN_USERS u " & _
              "  join USR$GDMN_SYSTEMS s on s.ID = u.USR$SYSTEMKEY " & _
              "where u.USR$SYSTEMKEY = :systemkey " & _
              "  and u.USR$MOBILELOGIN = :mobileLogin " & _
              "  and not u.USR$DEVICEID is null "
            ibsql.ParamByName("mobileLogin").AsString = userLogin
            ibsql.ParamByName("systemkey").AsInteger = systemKey
            ibsql.ExecQuery
            
            if ibsql.RecordCount = 0 then
              errorMessage = " Пользователь " & userLogin & _
                " отсутствует в справочнике 'Пользователи мобильного приложения'" & vbCr & _
                " либо у него не заполнен ID устройства." & vbCr & vbCr & _
                " Выполните макрос 'GDMN. Получить пользователей из WEB_ADMIN' " & vbCr & _
                " в справочнике  'Пользователи мобильного приложения' "
              call Application.MessageBox(errorMessage, "Внимание!", vbInformation + vbOkOnly + vbApplicationModal)
              exit sub
            end if
            'Проверка соответствия кода системы в подсистеме и у пользователя gdmn
            if ibsql.FieldByName("isErpUser").AsInteger = 0 then
              errorMessage = "Пользователь " & userLogin & _
                " не является пользователем ERP системы"
              call Application.MessageBox(errorMessage, "Внимание!", vbInformation + vbOkOnly + vbApplicationModal)
              exit sub
            end if
          end if
          call web_service.TestUser(Sender.OwnerForm.GetComponent("usrg_edURL").Text, userLogin, UserPassw)
          
          if web_service.RequestStatus = 200 then
            call Application.MessageBox("Проверка пользователя " & userLogin & " прошла успешно!", "Внимание!", vbInformation + vbOkOnly + vbApplicationModal)
          else
            if web_service.RequestError > "" then
              errorMessage = web_service.RequestError
            else
              errorMessage = " Неустановленная ошибка. Проверьте: " & vbCr & _
              " 1. Логин/пароль;" & vbCr & _
              " 2. Cоответствие базы файлов мобильному приложению; " & vbCr & _
              " 3. Код системы в пункте 'Подсистемы мобильного приложения'; "
            end if
            call Application.MessageBox(errorMessage, "Внимание!", vbInformation + vbOkOnly + vbApplicationModal)
          end if
        End Sub
        
  - 
    Properties: 
      Class: "TgdcDelphiObject"
      RUID: 147163269_1545785791
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
      HeadObject: 147163270_1545785791
    Fields: 
      PARENT: "1176268402_1457844439 usrf_gdmn_config"
      NAME: "usrg_actTestUser"
      CLASSNAME: ""
      DESCRIPTION: ~
      MACROSGROUPKEY: ~
      OBJECTNAME: "usrg_actTestUser"
      OBJECTTYPE: 0
      REPORTGROUPKEY: ~
      SUBTYPE: ""
      EDITIONDATE: 2020-10-15T13:57:59+03:00
  - 
    Properties: 
      Class: "TgdcEvent"
      RUID: 147163270_1545785791
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
    Fields: 
      DISABLE: 0
      EVENTNAME: "ONEXECUTE"
      FUNCTIONKEY: "147163272_1545785791 usrg_actTestUserOnExecute"
      OBJECTKEY: "147163269_1545785791 usrf_gdmn_config\\usrg_actTestUser"
      OBJECTNAME: "usrg_actTestUser"
      PARENTNAME: "usrf_gdmn_config"
      EDITIONDATE: 2022-05-11T19:09:17+03:00
  - 
    Properties: 
      Class: "TgdcFunction"
      RUID: 170497702_1488307703
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
    Fields: 
      NAME: "TVB_Web_Service"
      COMMENT: ~
      EVENT: ~
      FUNCTIONTYPE: ~
      GROUPNAME: ~
      INHERITEDRULE: 0
      LANGUAGE: "VBScript"
      LOCALNAME: ~
      MODIFYDATE: 2021-06-15T18:45:04+03:00
      MODULE: "VBCLASSES"
      MODULECODE: "1010001_17 APPLICATION"
      OBJECTNAME: "APPLICATION"
      OWNERNAME: ~
      PUBLICFUNCTION: 1
      SHORTCUT: ~
      USEDEBUGINFO: 0
      EDITIONDATE: 2023-04-03T17:47:08+03:00
      DISPLAYSCRIPT: ~
      ENTEREDPARAMS: ~
      SCRIPT: | 
        Option Explicit
        Class TVB_Web_Service
          private FUserLogin
          private FUserPassw
          private FAdminLogin
          private FAdminPassw
          private FTaskUserLogin
          private FTaskUserPassw
          private FCompanyName
          private FCompanyKey
          private FwebServerURL
          private FApiVersion
          private FBDPath
        
          private FLogPath
          private FLogObj
          private FFSO
        
          private FHasError
        
          private FError
          private FStatus
          private FData
        
          private FAppSystemkey
          private FAppSystemName
          private FAppSystemId
          private FAppSystemVersion
        
          private FGdmnDeviceId
          private FCreator
          private FXMLHTTP
          private FIsServerWin
          
          public property get HasError
            HasError = FHasError
          end property
        
          public property get LogLine
            LogLine = FLogObj.Line
          end property
        
          public property get url
            url = getUrl(FwebServerURL)
          end property
        
          public property get LogPath
            if Right(FLogPath, 1) <> "\" then FLogPath = FLogPath & "\"
            LogPath = FLogPath
          end property
        
          public property get UserLogin
            UserLogin = FUserLogin
          end property
        
          public property get UserPassw
            UserPassw = FUserPassw
          end property
        
          public property get AdminLogin
            AdminLogin = FAdminLogin
          end property
        
          public property get AdminPassw
            AdminPassw = FAdminPassw
          end property
        
          public property get TaskUserLogin
            TaskUserLogin = FTaskUserLogin
          end property
        
          public property get TaskUserPassw
            TaskUserPassw = FTaskUserPassw
          end property
        
          public property get Company
            Company = FCompanyName
          end property
        
          public property get CompanyKey
            CompanyKey = FCompanyKey
          end property
        
          public property get AppSystem
            AppSystem = FAppSystemName
          end property
        
          public property get AppSystemId
            AppSystemId = FAppSystemId
          end property
        
          public property get AppSystemVersion
            AppSystemVersion = FAppSystemVersion
          end property
        
          public property get ApiVersionKey
            ApiVersionKey = FApiVersion
          end property
        
          public property get ApiVersion
            ApiVersion = getApiVersion()
          end property
        
          public property get RequestError
            RequestError = FError
          end property
        
          public property get RequestStatus
            RequestStatus = FStatus
          end property
        
          public property get RequestData
            set RequestData = FData
          end property
        
          public property get BDPath
            BDPath = FBDPath
          end property
        
          public property get ServerURL
            ServerURL = FwebServerURL
          end property
          
          public property get IsServerWin
            IsServerWin = FIsServerWin
          end property
        
          public sub SetError(AError)
            FError = AError
            FHasError = true
            call WriteLog()
          end sub
        
        ' QueryPost
          private sub QueryPost(urlPath, postData, contentType, version)
            dim v
            FError = ""
            set FData = nothing
        
            if version = "" then
              v = "v0"
            else
              v = version
            end if
        
            dim strContentType
            select case contentType
              case 1
                strContentType = "application/x-www-form-urlencoded; charset=utf-8"
              case 2
                strContentType = "application/json; charset=utf-8"
            end select
        
            select case v
              case "v0"
                call FXMLHTTP.Open("POST", urlPath & "?deviceId=WEB", false)
              case "v1"
                call FXMLHTTP.Open("POST", urlPath & "?deviceId=" & FGdmnDeviceId, false)
            end select
        
            call FXMLHTTP.SetRequestHeader("Content-Type", strContentType)
        
            on error resume next
            call FXMLHTTP.Send(postData)
        
        
            FStatus = FXMLHTTP.Status
            if left(FStatus, 2) = "12"  or FStatus = 0 then
              FHasError = true
              FError = "Не удается установить связь с сервером!"
              exit sub
            end if
            
            on error goto 0
        
            dim JsonObj, resObj, result, responseText
            set JsonObj = New TVB_gs_Json
            set responseText = JsonObj.Decode(FXMLHTTP.responseText)
            result = responseText.SimpleValue("result", true)
        
            if (FStatus <> 200 and FStatus <> 201) or result = false then
              FHasError = true
              FError = FXMLHTTP.ResponseText
              if result = false then
                FStatus = 500
              end if
            else
              set FData = responseText
            end if
          end sub
        
          ' QueryPatch
          private sub QueryPatch(urlPath, patchData, contentType, version)
            FError = ""
            set FData = nothing
            dim v
            if version = "" then
              v = "v0"
            else
              v = version
            end if
            dim strContentType
            select case contentType
              case 1
                strContentType = "application/x-www-form-urlencoded; charset=utf-8"
              case 2
                strContentType = "application/json; charset=utf-8"
            end select
        
            select case v
              case "v0"
                call FXMLHTTP.Open("PATCH", urlPath & "?deviceId=WEB", false)
              case "v1"
                call FXMLHTTP.Open("PATCH", urlPath & "?deviceId=" & FGdmnDeviceId, false)
            end select
        
            call FXMLHTTP.SetRequestHeader("Content-Type", strContentType)
        
            on error resume next
            call FXMLHTTP.Send(patchData)
        
            FStatus = FXMLHTTP.Status
            if left(FStatus, 2) = "12"  or FStatus = 0 then
              FHasError = true
              FError = "Не удается установить связь с сервером!"
              exit sub
            end if
            on error goto 0
        
            dim JsonObj, resObj, result, responseText
            set JsonObj = New TVB_gs_Json
            set responseText = JsonObj.Decode(FXMLHTTP.responseText)
            result = responseText.SimpleValue("result", true)
        
            if (FStatus <> 200 and FStatus <> 201) or result = false then
              FHasError = true
              FError = FXMLHTTP.ResponseText
              if result = false then
                FStatus = 500
              end if
            else
              set FData = responseText
            end if
          end sub
        
          'QueryDelete
          private sub QueryDelete(urlPath, version)
            FError = ""
            set FData = nothing
            dim v
            if version = "" then
              v = "v0"
            else
              v = version
            end if
        
            select case v
              case "v0"
                call FXMLHTTP.Open("DELETE", urlPath & "?deviceId=WEB", false)
              case "v1"
                call FXMLHTTP.Open("DELETE", urlPath & "?deviceId=" & FGdmnDeviceId, false)
            end select
            call FXMLHTTP.setRequestHeader("Content-Type", "application/x-www-form-urlencoded")
        
            on error resume next
            call FXMLHTTP.Send()
        
            FStatus = FXMLHTTP.Status
            if left(FStatus, 2) = "12"  or FStatus = 0 then
              FHasError = true
              FError = "Не удается установить связь с сервером!"
              exit sub
            end if
            on error goto 0
        
            dim JsonObj, resObj, result, responseText
            set JsonObj = New TVB_gs_Json
            set responseText = JsonObj.Decode(FXMLHTTP.responseText)
            result = responseText.SimpleValue("result", true)
        
            if (FStatus <> 200 and FStatus <> 201) or result = false then
              FHasError = true
              FError = FXMLHTTP.ResponseText
              if result = false then
                FStatus = 500
              end if
            end if
          end sub
        
           'QueryDeleteWithError
          private sub QueryDeleteWithError(urlPath, errorData, version)
            FError = ""
            set FData = nothing
            dim v
            if version = "" then
              v = "v0"
            else
              v = version
            end if
        
            select case v
              case "v0"
                call FXMLHTTP.Open("DELETE", urlPath & "?deviceId=WEB", false)
              case "v1"
                call FXMLHTTP.Open("DELETE", urlPath & "?deviceId=" & FGdmnDeviceId, false)
            end select
            call FXMLHTTP.setRequestHeader("Content-Type", "application/json; charset=utf-8")
        
            on error resume next
            call FXMLHTTP.Send(errorData)
        
            FStatus = FXMLHTTP.Status
            if left(FStatus, 2) = "12"  or FStatus = 0 then
              FHasError = true
              FError = "Не удается установить связь с сервером!"
              exit sub
            end if
            on error goto 0
        
            dim JsonObj, resObj, result, responseText
            set JsonObj = New TVB_gs_Json
            set responseText = JsonObj.Decode(FXMLHTTP.responseText)
            result = responseText.SimpleValue("result", true)
        
            if (FStatus <> 200 and FStatus <> 201) or result = false then
              FHasError = true
              FError = FXMLHTTP.ResponseText
              if result = false then
                FStatus = 500
              end if
            end if
          end sub
        
          'QueryGet
          private sub QueryGet(urlPath, version, params, isAdmin)
            dim v
            FError = ""
            set FData = nothing
            if version = "" then
              v = "v0"
            else
              v = version
            end if
        
            dim path
            if isAdmin then
              if params = "" then
                path = urlPath
              else
                path = urlPath & "?" & params
              end if
            else
              if params = "" then
                path = urlPath & "?deviceId=" & FGdmnDeviceId
              else
                path = urlPath & "?deviceId=" & FGdmnDeviceId & "&" & params
              end if
            end if
        
            select case v
              case "v0"
                call FXMLHTTP.Open("GET", urlPath & "?deviceId=WEB", false)
              case "v1"
                call FXMLHTTP.Open("GET", path, false)
            end select
        
            call FXMLHTTP.SetRequestHeader("Content-Type", "application/x-www-form-urlencoded")
        
            on error resume next
            call FXMLHTTP.Send
        
            FStatus = FXMLHTTP.Status
            if left(FStatus, 2) = "12"  or FStatus = 0 then
              FHasError = true
              FError = "Не удается установить связь с сервером!"
              exit sub
            end if
            
            on error goto 0
        
            dim JsonObj, resObj, result, responseText
            set JsonObj = New TVB_gs_Json
            set responseText = JsonObj.Decode(FXMLHTTP.responseText)
            result = responseText.SimpleValue("result", true)
        
            if (FStatus <> 200 and FStatus <> 201) or result = false then
              FHasError = true
              FError = FXMLHTTP.ResponseText
              if result = false then
                FStatus = 500
              end if
            else
              set FData = responseText
            end if
          end sub
        
          public sub CheckUrl(urlPath)
            dim path, v
            v = getVersion()
            path = getUrl(urlPath)
            select case v
              case "v0"
                call QueryGet(path & "test/all", v, "", false)
              case "v1"
                call QueryGet(path & "test/", v, "", true)
            end select
        
            if FError <> "" then
              FError = "Подключение к серверу не выполнено! " & FError & " Статус: " & FStatus
            end if
          end sub
        
          'DeleteMessages
          public sub DeleteMessages()
            dim v
            v = getVersion()
            call QueryDelete(url & "messages/", v)
            if FError <> "" then
              FHasError = true
              FError = "Данные не удалены! " & FError & " Статус: " & FStatus
              call WriteLog()
            end if
          end sub
        
          'DeleteMessage
          public sub DeleteMessage(msgID)
            dim v
            v = getVersion()
            select case v
              case "v0"
                call QueryDelete(url & "messages/" & FCompanyKey & "/" & msgID, v)
              case "v1"
                call QueryDelete(url & "messages/" & msgID, v)
            end select
        
            if FError <> "" then
              FHasError = true
              FError = "Сообщение " & msgID & " не удалено! " & FError & " Статус: " & FStatus
              call WriteLog()
            end if
          end sub
        
          'SendMessage
          public sub SendMessage(postData)
            dim v
            v = getVersion()
            call QueryPost(url & "messages", postData, 2, v)
            if FError <> "" then
              FHasError = true
              FError = "Данные не отправлены! " & vbCr & FError & " Статус: " & FStatus
              call WriteLog()
            end if
          end sub
        
          'GetMessages
          public sub GetMessages()
            dim v
            v = getVersion()
            call QueryGet(url & "messages/", v, "companyId=" & FCompanyKey & "&appSystemId=" & FAppSystemId, false)
            if FError <> "" then
              FHasError = true
              FError = "Данные не получены! " & vbCr & FError & " Статус: " & FStatus
              call WriteLog()
            end if
          end sub
        
          'add process
          public sub AddProcess(postData)
            dim v
            v = getVersion()
            call QueryPost(url & "processes", postData, 2, v)
            if FError <> "" then
              FHasError = true
              FError = "Данные не отправлены! " & vbCr & FError & " Статус: " & FStatus
              call WriteLog()
            end if
          end sub
        
          'prepare process
          public sub PrepareProcess(processId, patchData)
            dim v
            v = getVersion()
            call QueryPatch(url & "processes/" & processId & "/prepare", patchData, 2, v)
            if FError <> "" then
              FHasError = true
              FError = "Данные не отправлены! " & vbCr & FError & " Статус: " & FStatus
              call WriteLog()
            end if
          end sub
        
          'CompleteProcess
          public sub CompleteProcess(processId)
            dim v
            v = getVersion()
            call QueryDelete(url & "processes/"  & processId & "/complete", v)
            if FError <> "" then
              FHasError = true
              FError = "Ошибка при " & processId & " complete! " & FError & " Статус: " & FStatus
              call WriteLog()
            end if
          end sub
        
          'CancelProcess
          public sub CancelProcess(processId, errorData)
            dim v
            v = getVersion()
            call QueryDeleteWithError(url & "processes/" &  processId & "/cancel", errorData, v)
            if FError <> "" then
              FHasError = true
              FError = "Ошибка при " & processId & " cancel! " & FError & " Статус: " & FStatus
              call WriteLog()
            end if
          end sub
        
          'InterruptProcess
          public sub InterruptProcess(processId, errorData)
            dim v
            v = getVersion()
            call QueryDeleteWithError(url & "processes/" & processId & "/interrupt", errorData, v)
            if FError <> "" then
              FHasError = true
              FError = "Ошибка при " & processId & " interrupt! " & FError & " Статус: " & FStatus
              call WriteLog()
            end if
          end sub
        
          'GetAppSystems
          public sub GetAppSystems()
            dim v
            v = getVersion()
            call QueryGet(url & "appSystems", v, "", true)
            if FError <> "" then
              FHasError = true
              FError = "Данные не получены! " & vbCr & FError & " Статус: " & FStatus
              call WriteLog()
            end if
          end sub
        
          'TestUser
          public sub TestUser(urlPath, login, password)
            dim path, strPostData
            path = getUrl(urlPath)
            'Вход под пользователем
        
            select case ApiVersion
              case "v0"
                call QueryPost(path & "auth/login", "userName=" & login & "&password=" & password, 1, ApiVersion)
              case "v1"
                strPostData = _
                  "{" & _
                  """name"":""" & login & """" & _
                  ",""password"":""" & password & """" & _
                  "}"
                call QueryPost(path & "auth/login", strPostData , 2, ApiVersion)
            end select
        
            if FError <> "" then
              FHasError = true
              FError = "Вход под пользователем " & login & " не выполнен! " & vbCr & FError & " Статус: " & FStatus
              call WriteLog()
            else
              'Выход пользователя
              select case ApiVersion
                case "v0"
                  call QueryGet(path & "auth/logout", ApiVersion, "", false)
                case "v1"
                  call QueryPost(path & "auth/logout", "", 1, ApiVersion)
              end select
              if FError <> "" then
                FHasError = true
                FError = "Выход пользователя " & login & " не выполнен! " & FError & " Статус: " & FStatus
                call WriteLog()
              end if
            end if
          end sub
        
          private function getUrl(urlPath)
            dim v
            v = getVersion()
            getUrl = urlPath
            if right(urlPath, 1) <> "/" then getUrl = urlPath & "/"
            select case v
              case "v0"
                getUrl = getUrl & "api/"
              case "v1"
                getUrl = getUrl & "api/" & v & "/"
            end select
          end function
        
          private function getApiVersion()
            dim  ibsql
            set ibsql = FCreator.GetObject(NULL, "TIBSQL", "")
            ibsql.Transaction = gdcBaseManager.ReadTransaction
            ibsql.SQL.Text = _
              "SELECT  " & _
              "  coalesce(v.USR$VERSIONSTRING, '') AS VERSION " & _
              "FROM  USR$GDMN_VERSIONS v  " & _
              "WHERE v.ID = :ID "
            ibsql.ParamByName("ID").AsInteger = FApiVersion
            ibsql.ExecQuery
            if ibsql.RecordCount > 0 then
              getApiVersion = ibsql.FieldByName("VERSION").AsString
            else
              getApiVersion = "v0"
            end if
          end function
        
          private function getVersion()
            dim v
            if not IsEmpty(FAppSystemVersion) then
              getVersion = FAppSystemVersion
            else
              getVersion = getApiVersion()
            end if
          end function
        
          'login
          public sub Login(loginName, password)
            dim v, strPostData
            v = getVersion()
            select case v
              case "v0"
                call QueryPost(url & "auth/login", "userName=" & loginName & "&password=" & password, 1, v)
              case "v1"
                strPostData = _
                  "{" & _
                  """name"":""" & loginName & """" & _
                  ",""password"":""" & password & """" & _
                  "}"
                call QueryPost(url & "auth/login", strPostData , 2, v)
            end select
            if FError <> "" then
              FHasError = true
              FError = "Вход под пользователем " & loginName & " не выполнен! " & vbCr & FError & " Статус: " & FStatus
              call WriteLog()
            end if
          end sub
        
          'Signup
          public sub Signup(postData)
            dim v
            v = getVersion()
            select case v
              case "v0"
                call QueryPost(url & "auth/signUp", postData, 2, v)
              case "v1"
                call QueryPost(url & "auth/signup", postData, 2, v)
            end select
            if FError <> "" then
              FHasError = true
              FError = "Регистрация пользователя не выполнена! " & vbCr & FError & " Статус: " & FStatus
              call WriteLog()
            end if
          end sub
        
          'Logout
          public sub Logout()
            dim v
            v = getVersion()
            select case v
              case "v0"
                 call QueryGet(url & "auth/logout", v, "", false)
              case "v1"
                 call QueryPost(url & "auth/logout", "", 1, v)
            end select
            if FError <> "" then
              FHasError = true
              FError = "Выход под пользователем не выполнен! " & FError & " Статус: " & FStatus
              call WriteLog()
            end if
          end sub
        
          public sub AddDevice(postData)
            dim v
            v = getVersion()
            call QueryPost(url & "devices", postData, 2, v)
            if FError <> "" then
              FHasError = true
              FError = "Добавление устройства не выполнено! " & vbCr & FError & " Статус: " & FStatus
              call WriteLog()
            end if
          end sub
        
          public sub GetCode(deviceId)
            dim v
            v = getVersion()
            call QueryGet(url & "auth/device/" & deviceId & "/code", v, "", false)
            if FError <> "" then
              FHasError = true
              FError = "Код не сгенерирован! " & vbCr & FError & " Статус: " & FStatus
              call WriteLog()
            end if
          end sub
        
          public sub WriteLog()
            if Assigned(FLogObj) then
              FLogObj.WriteLine(Now() & ": " & IbLogin.ServerName & " | " & IBLogin.ContactName & ": " & FError)
            end if
          end sub
        
           'GetUsers
          public sub GetUsers(params)
            dim v
            v = getVersion()
            call QueryGet(url & "users/", v, "companyId=" & FCompanyKey & "&" & params, false)
            if FError <> "" then
              FHasError = true
              FError = "Данные не получены! " & vbCr & FError & " Статус: " & FStatus
              call WriteLog()
            end if
          end sub
          
           'GetUsersWithDevice
          public sub GetUsersWithDevice(params)
            dim v
            v = getVersion()
            call QueryGet(url & "users/withdevice/", v, "companyId=" & FCompanyKey & "&" & params, false)
            if FError <> "" then
              FHasError = true
              FError = "Данные не получены! " & vbCr & FError & " Статус: " & FStatus
              call WriteLog()
            end if
          end sub
        
          'getDeviceBindings
          public sub getDeviceBindings(params)
            dim v
            v = getVersion()
            call QueryGet(url & "binding/", v, "companyId=" & FCompanyKey & "&" & params, true)
            if FError <> "" then
              FHasError = true
              FError = "Данные не получены! " & vbCr & FError & " Статус: " & FStatus
              call WriteLog()
            end if
          end sub
        
          'GetCompanyByName
          public sub GetCompanyByName(companyName)
            dim v
            v = getVersion()
            call QueryGet(url & "companies/", v, "name=" & companyName, true)
            if FError <> "" then
              FHasError = true
              FError = "Данные не получены! " & vbCr & FError & " Статус: " & FStatus
              call WriteLog()
            end if
          end sub
          
          'GetCompanyByID
          public sub GetCompanyByID()
            dim v
            v = getVersion()
            call QueryGet(url & "companies/" & FCompanyKey, v, "", true)
            if FError <> "" then
              FHasError = true
              FError = "Данные не получены! " & vbCr & FError & " Статус: " & FStatus
              call WriteLog()
            end if
          end sub
        
          'getDevice
          public sub getDevice(deviceId)
            dim v
            v = getVersion()
            call QueryGet(url & "devices/" & deviceId, v, "", true)
            if FError <> "" then
              FHasError = true
              FError = "Данные не получены! " & vbCr & FError & " Статус: " & FStatus
              call WriteLog()
            end if
          end sub
          
          public sub GetUserByParams(params)
            dim v
            v = getVersion()
            call QueryGet(url & "users/", v, params, true)
            if FError <> "" then
              FHasError = true
              FError = "Пользователь не найден! " & FError & " Статус: " & FStatus
              call WriteLog()
            end if
          end sub
        
          public sub GetUser(userId)
            dim v
            v = getVersion()
            call QueryGet(url & "users/" & userId, v, "", false)
            if FError <> "" then
              FHasError = true
              FError = "Пользователь не найден! " & FError & " Статус: " & FStatus
              call WriteLog()
            end if
          end sub
        
          public sub UpdateUser(userId, patchData)
            dim v
            v = getVersion()
            call QueryPatch(url & "users/" & userId, patchData, 2, v)
            if FError <> "" then
              FHasError = true
              FError = "Пользователь не найден! " & FError & " Статус: " & FStatus
              call WriteLog()
            end if
          end sub
          
          public sub GetUserWithDevice(userId)
            dim v
            v = getVersion()
            call QueryGet(url & "users/withdevice/" & userId, v, "", false)
            if FError <> "" then
              FHasError = true
              FError = "Пользователь не найден! " & FError & " Статус: " & FStatus
              call WriteLog()
            end if
          end sub
        
          function cur_replace(num)
            cur_replace =  Replace(num, ",", ".")
          end function
        
          function formatDate(pDate)
            formatDate = Year(pDate) & "-" & Right("0" & Month(pDate), 2) & "-" & Right("0" & Day(pDate), 2)
          end function
        
          Public Function JSonString(Value)
            dim i, c, Res
            Res = """"
        
            dim b, f, r, n, t
            b = ChrW(8)
            f = vbFormFeed
            r = vbCr
            n = vbLf
            t = vbTab
            For i = 1 To Len(Value)
              c = Mid(Value, i, 1)
              Select Case c
                Case """" Res = Res & "\"""
                Case "\"  Res = Res & "\\"
                Case "/"  Res = Res & "/"
                Case b    Res = Res & "\b"
                Case f    Res = Res & "\f"
                Case r    Res = Res & "\r"
                Case n    Res = Res & "\n"
                Case t    Res = Res & "\t"
                Case Else
                  If AscW(c) >= 0 And AscW(c) <= 31 Then
                    c = Right("0" & Hex(AscW(c)), 2)
                    Res = Res & "\u00" & c
                  Else
                    Res = Res & c
                  End If
              End Select
            Next
            JSonString = Res & """"
          End Function
        
          public sub SetupOptions
        
            dim Form, edUrl, edCompanyName, edUserLogin, edUserPassword, edAdminLogin, _
               edAdminPassword, edTaskUserLogin, edTaskUserPassword, edLogPath, edApiVersion, _
               edCompanyKey, edBDPath, isServerWin
            set Form = FCreator.GetObject(null, "usrf_gdmn_config", "usrf_gdmn_config")
            set edUrl = Form.FindComponent("usrg_edUrl")
            set edLogPath = Form.FindComponent("usrg_edLogPath")
            set edCompanyName = Form.FindComponent("usrg_edCompanyName")
            set edCompanyKey = Form.FindComponent("usrg_edCompanyKey")
            set edUserLogin = Form.FindComponent("usrg_edUserLogin")
            set edUserPassword = Form.FindComponent("usrg_edUserPassword")
            set edAdminLogin = Form.FindComponent("usrg_edAdminLogin")
            set edAdminPassword = Form.FindComponent("usrg_edAdminPassword")
            set edTaskUserLogin = Form.FindComponent("usrg_edTaskUserLogin")
            set edTaskUserPassword = Form.FindComponent("usrg_edTaskUserPassword")
            set edApiVersion = Form.FindComponent("usrg_gdmn_version")
            set edBDPath = Form.FindComponent("usrg_edBDPath")
            set isServerWin = Form.FindComponent("usrg_isServerWin")
        
            edUserLogin.Text = FUserLogin
            edUserPassword.Text = FUserPassw
            edAdminLogin.Text = FAdminLogin
            edAdminPassword.Text = FAdminPassw
            edTaskUserLogin.Text = FTaskUserLogin
            edTaskUserPassword.Text = FTaskUserPassw
            edCompanyName.Text = FCompanyName
            edCompanyKey.Text = FCompanyKey
            edUrl.Text = FWebServerURL
            edLogPath.Text = FLogPath
            edApiVersion.CurrentKeyInt = FApiVersion
            edBDPath.Text = FBDPath
            if FIsServerWin = 1 then
              isServerWin.Checked = true
            else
              isServerWin.Checked = False
            end if
        
            Form.GetComponent("usrg_gdcDoc").Open
            Form.GetComponent("usrg_gdcRef").Open
            Form.GetComponent("usrg_gdcRemains").Open
            Form.GetComponent("usrg_gdcUserQuery").Open
        
            Form.GetComponent("usrg_gdcParams").Open
            Form.GetComponent("usrg_gdcParamsLine").Open
        
            Form.GetComponent("usrg_pcMain").ActivePageIndex = 0
            Form.GetComponent("usrg_pcSubSystem").Visible = false
        
            if Form.ShowModal = mrOK then
              FUserLogin = edUserLogin.Text
              FUserPassw = edUserPassword.Text
              FAdminLogin = edAdminLogin.Text
              FAdminPassw =  edAdminPassword.Text
              FTaskUserLogin = edTaskUserLogin.Text
              FTaskUserPassw =  edTaskUserPassword.Text
              FCompanyName = edCompanyName.Text
              FCompanyKey = edCompanyKey.Text
              FWebServerURL = edUrl.Text
              FLogPath = edLogPath.Text
              FApiVersion = edApiVersion.CurrentKeyInt
              FBDPath = edBDPath.Text
              if isServerWin.Checked then
                FIsServerWin = 1
              else
                FIsServerWin = 0
              end if
              SaveToStorage
            end if
          end sub
        
          Public Default Function Init(AppSystemkey)
            dim ibsql
            set ibsql = FCreator.GetObject(NULL, "TIBSQL", "")
            ibsql.Transaction = gdcBaseManager.ReadTransaction
            ibsql.Close
            ibsql.SQL.Text = _
              "SELECT s.USR$CODE AS CODE, s.USR$APPSYSTEMID AS APPSYSTEMID," & _
              "  coalesce(v.USR$VERSIONSTRING, '') AS VERSION, " & _
              "  s.USR$ERPUSERDEVICEID " & _
              "FROM USR$GDMN_SYSTEMS s " & _
              "  LEFT JOIN USR$GDMN_VERSIONS v ON v.ID = s.USR$GDMN_VERSION " & _
              "WHERE s.ID = :ID "
            ibsql.ParamByName("ID").AsInteger = AppSystemkey
            ibsql.ExecQuery
        
            FAppSystemName = ibsql.FieldByName("code").AsString
            FAppSystemId = ibsql.FieldByName("appSystemId").AsString
            FAppSystemkey = AppSystemkey
            if ibsql.FieldByName("VERSION").AsString = "" then
              FAppSystemVersion = "v0"
            else
              FAppSystemVersion = ibsql.FieldByName("VERSION").AsString
            end if
             if ibsql.RecordCount > 0 and ibsql.FieldByName("USR$ERPUSERDEVICEID").AsString > "" then
              FGdmnDeviceId = ibsql.FieldByName("USR$ERPUSERDEVICEID").AsString
            else
              FGdmnDeviceId = "gdmn"
            end if
        
            if trim(LogPath) <> "" then
              dim pathFile
              pathFile = LogPath & ibsql.FieldByName("code").AsString & "_log.txt"
        
              set FFSO = CreateObject("Scripting.FileSystemObject")
        
              on error resume next
              set FLogObj =  FFSO.OpenTextFile(pathFile, 8, 1)
              on error goto 0
            end if
        
            'ibsql.Close
        '    ibsql.SQL.Text = _
        '      "select first 1 " & _
        '      "  u.USR$DEVICEID " & _
        '      "from  USR$GDMN_USERS u " & _
        '      "where u.USR$SYSTEMKEY = :systemkey " & _
        '      "  and coalesce(u.USR$IS_ERP_USER, 0) = 1 " & _
        '      "  and not USR$MOBILEID is null "
        '    ibsql.ParamByName("systemkey").AsInteger = FAppSystemKey
        '    ibsql.ExecQuery
        '    if ibsql.RecordCount > 0 then
        '      FGdmnDeviceId = ibsql.FieldByName("USR$DEVICEID").AsString
        '    else
        '      FGdmnDeviceId = "gdmn"
        '    end if
        
            Set Init = Me
          End function
        
          Private Sub Class_Initialize
          'Setup Initialize event.
            set FCreator = new TCreator
            LoadFromStorage
            if FIsServerWin = 1 then
              Set FXMLHTTP = CreateObject("MSXML2.ServerXMLHTTP")
            else
              Set FXMLHTTP = CreateObject("MSXML2.XMLHTTP")
            end if
            FHasError = false
        
          End Sub
        
          Private Sub Class_Terminate
          'Setup Terminate event.
            SaveToStorage
          End Sub
        
          Public Sub LoadFromStorage
            if Assigned(CompanyStorage) Then
              CompanyStorage.LoadFromDataBase
        
              Dim F
              Set F = CompanyStorage.OpenFolder("Options\web_gdmn", True, True)
              FuserLogin = F.ReadString("userLogin", "")
              FuserPassw = F.ReadString("userPassw", "")
              FAdminLogin = F.ReadString("adminLogin", "")
              FAdminPassw = F.ReadString("adminPassw", "")
              FTaskUserLogin = F.ReadString("taskUserLogin", "")
              FTaskUserPassw = F.ReadString("taskUserPassw", "")
              FCompanyName = F.ReadString("companyName", "")
              FCompanyKey = F.ReadString("companyKey", "")
              FwebServerURL = F.ReadString("webServerURL", "")
              FLogPath = F.ReadString("logPath", "")
              FApiVersion = F.ReadInteger("apiVersion", 0)
              FBDPath = F.ReadString("BDPath", "")
              FIsServerWin = F.ReadInteger("isServerWin", 0)
              Call CompanyStorage.CloseFolder(F, True)
            end if
          end sub
        
          Public Sub SaveToStorage
             if Assigned(CompanyStorage) Then
              Dim F
              Set F = CompanyStorage.OpenFolder("Options\web_gdmn", True, True)
              Call F.WriteString("userLogin", FUserLogin)
              Call F.WriteString("userPassw", FUserPassw)
              Call F.WriteString("adminLogin", FAdminLogin)
              Call F.WriteString("adminPassw", FAdminPassw)
              Call F.WriteString("taskUserLogin", FTaskUserLogin)
              Call F.WriteString("taskUserPassw", FTaskUserPassw)
              Call F.WriteString("companyName", FCompanyName)
              Call F.WriteString("companyKey", FCompanyKey)
              Call F.WriteString("webServerURL", FwebServerURL)
              Call F.WriteString("logPath", FLogPath)
              Call F.WriteInteger("apiVersion", FApiVersion)
              Call F.WriteString("BDPath", FBDPath)
              Call F.WriteInteger("isServerWin", FIsServerWin)
              Call CompanyStorage.CloseFolder(F, True)
        
              CompanyStorage.SaveToDataBase
            end if
          end sub
        End Class
        
  - 
    Properties: 
      Class: "TgdcFunction"
      RUID: 147163328_1545402342
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
      HeadObject: 147163536_1545402342
    Fields: 
      NAME: "usrg_actOpenLogFolderOnExecute"
      COMMENT: ~
      EVENT: "ONEXECUTE"
      FUNCTIONTYPE: ~
      GROUPNAME: ~
      INHERITEDRULE: 0
      LANGUAGE: "VBScript"
      LOCALNAME: ~
      MODIFYDATE: 2021-06-15T18:45:04+03:00
      MODULE: "EVENTS"
      MODULECODE: "1176268402_1457844439 usrf_gdmn_config"
      OBJECTNAME: "usrf_gdmn_config"
      OWNERNAME: ~
      PUBLICFUNCTION: 1
      SHORTCUT: ~
      USEDEBUGINFO: 0
      EDITIONDATE: 2020-10-19T19:24:35+03:00
      DISPLAYSCRIPT: | 
        USRG_ACTOPENLOGFOLDERONEXECUTE
        
      ENTEREDPARAMS: !!binary > 
        U0xQUlBSU1QGAAAAU0VOREVSBgAAAFNFTkRFUgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABGTlNU
        RkxQUg==
      SCRIPT: | 
        Option Explicit
        Sub usrg_actOpenLogFolderOnExecute(ByVal Sender)
        '*** Данный код необходим для вызова встроенного обработчика ***
        '*** В случае его удаления возможно нарушение работы системы ***
          Call   Inherited(Sender, "OnExecute", Array(Sender))
        '*** конец кода поддержки встроенного обработчика            ***
          Dim usrg_edLogPath, fso, path
          Set FSO = CreateObject("Scripting.FileSystemObject")
          set usrg_edLogPath = Sender.OwnerForm.GetComponent("usrg_edLogPath")
          path = usrg_edLogPath.text
          
          if not FSO.FolderExists(path) then
            call Application.MessageBox("Путь не найден!","Внимание", mb_Ok or mb_IconInformation or mb_SystemModal)
            exit sub
          end if
          
          Dim SH
          Set SH = CreateObject("WScript.Shell")
          SH.Run Path
          Set SH = Nothing
        End Sub
        
  - 
    Properties: 
      Class: "TgdcDelphiObject"
      RUID: 147163535_1545402342
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
      HeadObject: 147163536_1545402342
    Fields: 
      PARENT: "1176268402_1457844439 usrf_gdmn_config"
      NAME: "usrg_actOpenLogFolder"
      CLASSNAME: ""
      DESCRIPTION: ~
      MACROSGROUPKEY: ~
      OBJECTNAME: "usrg_actOpenLogFolder"
      OBJECTTYPE: 0
      REPORTGROUPKEY: ~
      SUBTYPE: ""
      EDITIONDATE: 2020-10-19T19:24:33+03:00
  - 
    Properties: 
      Class: "TgdcEvent"
      RUID: 147163536_1545402342
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
    Fields: 
      DISABLE: 0
      EVENTNAME: "ONEXECUTE"
      FUNCTIONKEY: "147163328_1545402342 usrg_actOpenLogFolderOnExecute"
      OBJECTKEY: "147163535_1545402342 usrf_gdmn_config\\usrg_actOpenLogFolder"
      OBJECTNAME: "usrg_actOpenLogFolder"
      PARENTNAME: "usrf_gdmn_config"
      EDITIONDATE: 2020-10-19T19:24:33+03:00
  - 
    Properties: 
      Class: "TgdcDelphiObject"
      RUID: 147163544_1545402342
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
      HeadObject: 147163545_1545402342
    Fields: 
      PARENT: "147275685_124484738 TgdcBase\\TgdcAttrUserDefined"
      NAME: "TgdcAttrUserDefinedUSR_GDMN_SYSTEMS"
      CLASSNAME: "TgdcAttrUserDefined"
      DESCRIPTION: ~
      MACROSGROUPKEY: ~
      OBJECTNAME: ""
      OBJECTTYPE: 1
      REPORTGROUPKEY: ~
      SUBTYPE: "USR_GDMN_SYSTEMS"
      EDITIONDATE: 2020-10-19T20:34:54+03:00
  - 
    Properties: 
      Class: "TgdcFunction"
      RUID: 147163547_1545402342
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
      HeadObject: 147163545_1545402342
    Fields: 
      NAME: "TgdcAttrUserDefinedUSR_GDMN_SYSTEMSCreateFields"
      COMMENT: ~
      EVENT: ~
      FUNCTIONTYPE: ~
      GROUPNAME: ~
      INHERITEDRULE: 0
      LANGUAGE: "VBScript"
      LOCALNAME: ~
      MODIFYDATE: 2021-06-15T18:45:04+03:00
      MODULE: "METHOD"
      MODULECODE: "147163544_1545402342 TgdcBase\\TgdcAttrUserDefined\\TgdcAttrUserDefinedUSR_GDMN_SYSTEMS"
      OBJECTNAME: "TgdcAttrUserDefinedUSR_GDMN_SYSTEMS"
      OWNERNAME: ~
      PUBLICFUNCTION: 1
      SHORTCUT: ~
      USEDEBUGINFO: 0
      EDITIONDATE: 2020-10-19T20:34:54+03:00
      DISPLAYSCRIPT: | 
        TGDCATTRUSERDEFINEDUSR_GDMN_SYSTEMSCREATEFIELDS
        
      ENTEREDPARAMS: !!binary > 
        U0xQUlBSU1QEAAAAU0VMRgQAAABTRUxGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEZOU1RGTFBS
      SCRIPT: | 
        Option Explicit
        Sub TgdcAttrUserDefinedUSR_GDMN_SYSTEMSCreateFields(Self)
        '*** Данный код необходим для вызова кода определенного в gdc-классе.***
        '*** При его удаления  возможно нарушение  правильной работы системы.***
          Call Inherited(Self, "CreateFields", Array(Self))
        '***               Конец кода поддержки gdc-класса.                  ***
          Self.FieldByName("USR$NAME").Required = true
          Self.FieldByName("USR$CODE").Required = true
        End Sub
        
  - 
    Properties: 
      Class: "TgdcEvent"
      RUID: 147163545_1545402342
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
    Fields: 
      DISABLE: 0
      EVENTNAME: "CREATEFIELDS"
      FUNCTIONKEY: "147163547_1545402342 TgdcAttrUserDefinedUSR_GDMN_SYSTEMSCreateFields"
      OBJECTKEY: "147163544_1545402342 TgdcBase\\TgdcAttrUserDefined\\TgdcAttrUserDefinedUSR_GDMN_SYSTEMS"
      OBJECTNAME: "TgdcAttrUserDefinedUSR_GDMN_SYSTEMS"
      PARENTNAME: "TgdcAttrUserDefined"
      EDITIONDATE: 2020-10-19T20:34:54+03:00
  - 
    Properties: 
      Class: "TgdcDelphiObject"
      RUID: 147171365_1545785791
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
      HeadObject: 147171366_1545785791
    Fields: 
      PARENT: "147275685_124484738 TgdcBase\\TgdcAttrUserDefined"
      NAME: "TgdcAttrUserDefinedUSR_GDMN_PARAMSLINE"
      CLASSNAME: "TgdcAttrUserDefined"
      DESCRIPTION: ~
      MACROSGROUPKEY: ~
      OBJECTNAME: ""
      OBJECTTYPE: 1
      REPORTGROUPKEY: ~
      SUBTYPE: "USR_GDMN_PARAMSLINE"
      EDITIONDATE: 2020-11-03T17:58:51+03:00
  - 
    Properties: 
      Class: "TgdcFunction"
      RUID: 147171368_1545785791
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
      HeadObject: 147171366_1545785791
    Fields: 
      NAME: "TgdcAttrUserDefinedUSR_GDMN_PARAMSLINECheckSubSet"
      COMMENT: ~
      EVENT: ~
      FUNCTIONTYPE: ~
      GROUPNAME: ~
      INHERITEDRULE: 0
      LANGUAGE: "VBScript"
      LOCALNAME: ~
      MODIFYDATE: 2021-06-15T18:45:04+03:00
      MODULE: "METHOD"
      MODULECODE: "147171365_1545785791 TgdcBase\\TgdcAttrUserDefined\\TgdcAttrUserDefinedUSR_GDMN_PARAMSLINE"
      OBJECTNAME: "TgdcAttrUserDefinedUSR_GDMN_PARAMSLINE"
      OWNERNAME: ~
      PUBLICFUNCTION: 1
      SHORTCUT: ~
      USEDEBUGINFO: 0
      EDITIONDATE: 2020-11-03T17:58:51+03:00
      DISPLAYSCRIPT: | 
        TGDCATTRUSERDEFINEDUSR_GDMN_PARAMSLINECHECKSUBSET
        
      ENTEREDPARAMS: !!binary > 
        U0xQUlBSU1QEAAAAU0VMRgQAAABTRUxGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEZOU1RQUlNU
        BwAAAEFTVUJTRVQHAAAAQVNVQlNFVAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABGTlNURkxQUg==
      SCRIPT: | 
        Option Explicit
        Function TgdcAttrUserDefinedUSR_GDMN_PARAMSLINECheckSubSet(Self, ASubSet)
        '*** Данный код необходим для вызова кода определенного в gdc-классе.***
        '*** При его удаления  возможно нарушение  правильной работы системы.***
          TgdcAttrUserDefinedUSR_GDMN_PARAMSLINECheckSubSet = _
            Inherited(Self, "CheckSubSet", Array(Self, ASubSet)) or (ASubSet = "ByParent")
        '***               Конец кода поддержки gdc-класса.                  ***
        End Function
        
  - 
    Properties: 
      Class: "TgdcEvent"
      RUID: 147171366_1545785791
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
    Fields: 
      DISABLE: 0
      EVENTNAME: "CHECKSUBSET"
      FUNCTIONKEY: "147171368_1545785791 TgdcAttrUserDefinedUSR_GDMN_PARAMSLINECheckSubSet"
      OBJECTKEY: "147171365_1545785791 TgdcBase\\TgdcAttrUserDefined\\TgdcAttrUserDefinedUSR_GDMN_PARAMSLINE"
      OBJECTNAME: "TgdcAttrUserDefinedUSR_GDMN_PARAMSLINE"
      PARENTNAME: "TgdcAttrUserDefined"
      EDITIONDATE: 2020-11-03T17:58:51+03:00
  - 
    Properties: 
      Class: "TgdcFunction"
      RUID: 147171371_1545785791
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
      HeadObject: 147171369_1545785791
    Fields: 
      NAME: "TgdcAttrUserDefinedUSR_GDMN_PARAMSLINEGetWhereClause"
      COMMENT: ~
      EVENT: ~
      FUNCTIONTYPE: ~
      GROUPNAME: ~
      INHERITEDRULE: 0
      LANGUAGE: "VBScript"
      LOCALNAME: ~
      MODIFYDATE: 2021-06-15T18:45:04+03:00
      MODULE: "METHOD"
      MODULECODE: "147171365_1545785791 TgdcBase\\TgdcAttrUserDefined\\TgdcAttrUserDefinedUSR_GDMN_PARAMSLINE"
      OBJECTNAME: "TgdcAttrUserDefinedUSR_GDMN_PARAMSLINE"
      OWNERNAME: ~
      PUBLICFUNCTION: 1
      SHORTCUT: ~
      USEDEBUGINFO: 0
      EDITIONDATE: 2020-11-03T18:01:07+03:00
      DISPLAYSCRIPT: | 
        TGDCATTRUSERDEFINEDUSR_GDMN_PARAMSLINEGETWHERECLAUSE
        
      ENTEREDPARAMS: !!binary > 
        U0xQUlBSU1QEAAAAU0VMRgQAAABTRUxGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEZOU1RGTFBS
      SCRIPT: | 
        Option Explicit
        Function TgdcAttrUserDefinedUSR_GDMN_PARAMSLINEGetWhereClause(Self)
        '*** Данный код необходим для вызова кода определенного в gdc-классе.***
        '*** При его удаления  возможно нарушение  правильной работы системы.***
          dim Res
          Res = Inherited(Self, "GetWhereClause", Array(Self))
        '***               Конец кода поддержки gdc-класса.                  ***
          if Self.HasSubSet("ByParent") then
            if Res = "" then
              Res = "WHERE "
            else
              Res = Res & " AND "
            end if
            Res = Res & " z.USR$MASTERKEY = :Parent "
          end if
          TgdcAttrUserDefinedUSR_GDMN_PARAMSLINEGetWhereClause = Res
        End Function
        
  - 
    Properties: 
      Class: "TgdcEvent"
      RUID: 147171369_1545785791
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
    Fields: 
      DISABLE: 0
      EVENTNAME: "GETWHERECLAUSE"
      FUNCTIONKEY: "147171371_1545785791 TgdcAttrUserDefinedUSR_GDMN_PARAMSLINEGetWhereClause"
      OBJECTKEY: "147171365_1545785791 TgdcBase\\TgdcAttrUserDefined\\TgdcAttrUserDefinedUSR_GDMN_PARAMSLINE"
      OBJECTNAME: "TgdcAttrUserDefinedUSR_GDMN_PARAMSLINE"
      PARENTNAME: "TgdcAttrUserDefined"
      EDITIONDATE: 2020-11-03T18:01:07+03:00
  - 
    Properties: 
      Class: "TgdcFunction"
      RUID: 147171422_1545785791
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
      HeadObject: 147171420_1545785791
    Fields: 
      NAME: "usrg_actEditParamsOnExecute"
      COMMENT: ~
      EVENT: "ONEXECUTE"
      FUNCTIONTYPE: ~
      GROUPNAME: ~
      INHERITEDRULE: 0
      LANGUAGE: "VBScript"
      LOCALNAME: ~
      MODIFYDATE: 2021-06-15T18:45:04+03:00
      MODULE: "EVENTS"
      MODULECODE: "1176268402_1457844439 usrf_gdmn_config"
      OBJECTNAME: "usrf_gdmn_config"
      OWNERNAME: ~
      PUBLICFUNCTION: 1
      SHORTCUT: ~
      USEDEBUGINFO: 0
      EDITIONDATE: 2020-11-04T09:53:09+03:00
      DISPLAYSCRIPT: | 
        USRG_ACTEDITPARAMSONEXECUTE
        
      ENTEREDPARAMS: !!binary > 
        U0xQUlBSU1QGAAAAU0VOREVSBgAAAFNFTkRFUgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABGTlNU
        RkxQUg==
      SCRIPT: | 
        Option Explicit
        Sub usrg_actEditParamsOnExecute(ByVal Sender)
        '*** Данный код необходим для вызова встроенного обработчика ***
        '*** В случае его удаления возможно нарушение работы системы ***
          Call   Inherited(Sender, "OnExecute", Array(Sender))
        '*** конец кода поддержки встроенного обработчика            ***
          dim DataSet
          set DataSet = Sender.OwnerForm.GetComponent("usrg_gdcParams")
          call DataSet.EditDialog("")
          DataSet.Refresh
        End Sub
        
  - 
    Properties: 
      Class: "TgdcDelphiObject"
      RUID: 147171419_1545785791
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
      HeadObject: 147171420_1545785791
    Fields: 
      PARENT: "1176268402_1457844439 usrf_gdmn_config"
      NAME: "usrg_actEditParams"
      CLASSNAME: ""
      DESCRIPTION: ~
      MACROSGROUPKEY: ~
      OBJECTNAME: "usrg_actEditParams"
      OBJECTTYPE: 0
      REPORTGROUPKEY: ~
      SUBTYPE: ""
      EDITIONDATE: 2020-11-04T09:53:08+03:00
  - 
    Properties: 
      Class: "TgdcEvent"
      RUID: 147171420_1545785791
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
    Fields: 
      DISABLE: 0
      EVENTNAME: "ONEXECUTE"
      FUNCTIONKEY: "147171422_1545785791 usrg_actEditParamsOnExecute"
      OBJECTKEY: "147171419_1545785791 usrf_gdmn_config\\usrg_actEditParams"
      OBJECTNAME: "usrg_actEditParams"
      PARENTNAME: "usrf_gdmn_config"
      EDITIONDATE: 2020-11-04T09:53:09+03:00
  - 
    Properties: 
      Class: "TgdcFunction"
      RUID: 147171426_1545785791
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
      HeadObject: 147171424_1545785791
    Fields: 
      NAME: "usrg_actEditParamsLineOnExecute"
      COMMENT: ~
      EVENT: "ONEXECUTE"
      FUNCTIONTYPE: ~
      GROUPNAME: ~
      INHERITEDRULE: 0
      LANGUAGE: "VBScript"
      LOCALNAME: ~
      MODIFYDATE: 2021-06-15T18:45:04+03:00
      MODULE: "EVENTS"
      MODULECODE: "1176268402_1457844439 usrf_gdmn_config"
      OBJECTNAME: "usrf_gdmn_config"
      OWNERNAME: ~
      PUBLICFUNCTION: 1
      SHORTCUT: ~
      USEDEBUGINFO: 0
      EDITIONDATE: 2020-11-04T09:55:11+03:00
      DISPLAYSCRIPT: | 
        USRG_ACTEDITPARAMSLINEONEXECUTE
        
      ENTEREDPARAMS: !!binary > 
        U0xQUlBSU1QGAAAAU0VOREVSBgAAAFNFTkRFUgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABGTlNU
        RkxQUg==
      SCRIPT: | 
        Option Explicit
        Sub usrg_actEditParamsLineOnExecute(ByVal Sender)
        '*** Данный код необходим для вызова встроенного обработчика ***
        '*** В случае его удаления возможно нарушение работы системы ***
          Call   Inherited(Sender, "OnExecute", Array(Sender))
        '*** конец кода поддержки встроенного обработчика            ***
          dim DataSet
          set DataSet = Sender.OwnerForm.GetComponent("usrg_gdcParamsLine")
          call DataSet.EditDialog("")
          DataSet.Refresh
        End Sub
        
  - 
    Properties: 
      Class: "TgdcDelphiObject"
      RUID: 147171423_1545785791
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
      HeadObject: 147171424_1545785791
    Fields: 
      PARENT: "1176268402_1457844439 usrf_gdmn_config"
      NAME: "usrg_actEditParamsLine"
      CLASSNAME: ""
      DESCRIPTION: ~
      MACROSGROUPKEY: ~
      OBJECTNAME: "usrg_actEditParamsLine"
      OBJECTTYPE: 0
      REPORTGROUPKEY: ~
      SUBTYPE: ""
      EDITIONDATE: 2020-11-04T09:55:10+03:00
  - 
    Properties: 
      Class: "TgdcEvent"
      RUID: 147171424_1545785791
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
    Fields: 
      DISABLE: 0
      EVENTNAME: "ONEXECUTE"
      FUNCTIONKEY: "147171426_1545785791 usrg_actEditParamsLineOnExecute"
      OBJECTKEY: "147171423_1545785791 usrf_gdmn_config\\usrg_actEditParamsLine"
      OBJECTNAME: "usrg_actEditParamsLine"
      PARENTNAME: "usrf_gdmn_config"
      EDITIONDATE: 2020-11-04T09:55:11+03:00
  - 
    Properties: 
      Class: "TgdcFunction"
      RUID: 147171384_1545785791
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
      HeadObject: 147171382_1545785791
    Fields: 
      NAME: "usrg_actAddParamsOnExecute"
      COMMENT: ~
      EVENT: "ONEXECUTE"
      FUNCTIONTYPE: ~
      GROUPNAME: ~
      INHERITEDRULE: 0
      LANGUAGE: "VBScript"
      LOCALNAME: ~
      MODIFYDATE: 2021-06-15T18:45:04+03:00
      MODULE: "EVENTS"
      MODULECODE: "1176268402_1457844439 usrf_gdmn_config"
      OBJECTNAME: "usrf_gdmn_config"
      OWNERNAME: ~
      PUBLICFUNCTION: 1
      SHORTCUT: ~
      USEDEBUGINFO: 0
      EDITIONDATE: 2020-11-03T18:23:11+03:00
      DISPLAYSCRIPT: | 
        USRG_ACTADDPARAMSONEXECUTE
        
      ENTEREDPARAMS: !!binary > 
        U0xQUlBSU1QGAAAAU0VOREVSBgAAAFNFTkRFUgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABGTlNU
        RkxQUg==
      SCRIPT: | 
        Option Explicit
        Sub usrg_actAddParamsOnExecute(ByVal Sender)
        '*** Данный код необходим для вызова встроенного обработчика ***
        '*** В случае его удаления возможно нарушение работы системы ***
          Call   Inherited(Sender, "OnExecute", Array(Sender))
        '*** конец кода поддержки встроенного обработчика            ***
          dim gdcParams, system
          set gdcParams = Sender.OwnerForm.GetComponent("usrg_gdcParams")
          set system = Sender.OwnerForm.GetComponent("usrg_lcSystems")
          gdcParams.Insert
          if system.CurrentkeyInt > 0  then
            gdcParams.FieldByName("USR$SYSTEMKEY").AsInteger = system.CurrentkeyInt
          end if
          gdcParams.Post
          call gdcParams.EditDialog("")
          gdcParams.Refresh
        End Sub
        
  - 
    Properties: 
      Class: "TgdcDelphiObject"
      RUID: 147171381_1545785791
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
      HeadObject: 147171382_1545785791
    Fields: 
      PARENT: "1176268402_1457844439 usrf_gdmn_config"
      NAME: "usrg_actAddParams"
      CLASSNAME: ""
      DESCRIPTION: ~
      MACROSGROUPKEY: ~
      OBJECTNAME: "usrg_actAddParams"
      OBJECTTYPE: 0
      REPORTGROUPKEY: ~
      SUBTYPE: ""
      EDITIONDATE: 2020-11-03T18:23:10+03:00
  - 
    Properties: 
      Class: "TgdcEvent"
      RUID: 147171382_1545785791
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
    Fields: 
      DISABLE: 0
      EVENTNAME: "ONEXECUTE"
      FUNCTIONKEY: "147171384_1545785791 usrg_actAddParamsOnExecute"
      OBJECTKEY: "147171381_1545785791 usrf_gdmn_config\\usrg_actAddParams"
      OBJECTNAME: "usrg_actAddParams"
      PARENTNAME: "usrf_gdmn_config"
      EDITIONDATE: 2020-11-03T18:23:11+03:00
  - 
    Properties: 
      Class: "TgdcFunction"
      RUID: 147171392_1545785791
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
      HeadObject: 147171390_1545785791
    Fields: 
      NAME: "usrg_actAddParamsLineOnExecute"
      COMMENT: ~
      EVENT: "ONEXECUTE"
      FUNCTIONTYPE: ~
      GROUPNAME: ~
      INHERITEDRULE: 0
      LANGUAGE: "VBScript"
      LOCALNAME: ~
      MODIFYDATE: 2021-06-15T18:45:04+03:00
      MODULE: "EVENTS"
      MODULECODE: "1176268402_1457844439 usrf_gdmn_config"
      OBJECTNAME: "usrf_gdmn_config"
      OWNERNAME: ~
      PUBLICFUNCTION: 1
      SHORTCUT: ~
      USEDEBUGINFO: 0
      EDITIONDATE: 2020-11-26T15:25:33+03:00
      DISPLAYSCRIPT: | 
        USRG_ACTADDPARAMSLINEONEXECUTE
        
      ENTEREDPARAMS: !!binary > 
        U0xQUlBSU1QGAAAAU0VOREVSBgAAAFNFTkRFUgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABGTlNU
        RkxQUg==
      SCRIPT: | 
        Option Explicit
        Sub usrg_actAddParamsLineOnExecute(ByVal Sender)
        '*** Данный код необходим для вызова встроенного обработчика ***
        '*** В случае его удаления возможно нарушение работы системы ***
          Call   Inherited(Sender, "OnExecute", Array(Sender))
        '*** конец кода поддержки встроенного обработчика            ***
          call Sender.OwnerForm.GetComponent("usrg_gdcParamsLine").CreateDialog("")
        End Sub
        
  - 
    Properties: 
      Class: "TgdcDelphiObject"
      RUID: 147171389_1545785791
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
      HeadObject: 147171390_1545785791
    Fields: 
      PARENT: "1176268402_1457844439 usrf_gdmn_config"
      NAME: "usrg_actAddParamsLine"
      CLASSNAME: ""
      DESCRIPTION: ~
      MACROSGROUPKEY: ~
      OBJECTNAME: "usrg_actAddParamsLine"
      OBJECTTYPE: 0
      REPORTGROUPKEY: ~
      SUBTYPE: ""
      EDITIONDATE: 2020-11-03T18:26:41+03:00
  - 
    Properties: 
      Class: "TgdcEvent"
      RUID: 147171390_1545785791
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
    Fields: 
      DISABLE: 0
      EVENTNAME: "ONEXECUTE"
      FUNCTIONKEY: "147171392_1545785791 usrg_actAddParamsLineOnExecute"
      OBJECTKEY: "147171389_1545785791 usrf_gdmn_config\\usrg_actAddParamsLine"
      OBJECTNAME: "usrg_actAddParamsLine"
      PARENTNAME: "usrf_gdmn_config"
      EDITIONDATE: 2020-11-26T15:25:33+03:00
  - 
    Properties: 
      Class: "TgdcFunction"
      RUID: 147171430_1545785791
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
      HeadObject: 147171428_1545785791
    Fields: 
      NAME: "usrg_actDeleteParamsOnExecute"
      COMMENT: ~
      EVENT: "ONEXECUTE"
      FUNCTIONTYPE: ~
      GROUPNAME: ~
      INHERITEDRULE: 0
      LANGUAGE: "VBScript"
      LOCALNAME: ~
      MODIFYDATE: 2021-06-15T18:45:04+03:00
      MODULE: "EVENTS"
      MODULECODE: "1176268402_1457844439 usrf_gdmn_config"
      OBJECTNAME: "usrf_gdmn_config"
      OWNERNAME: ~
      PUBLICFUNCTION: 1
      SHORTCUT: ~
      USEDEBUGINFO: 0
      EDITIONDATE: 2020-11-04T10:18:08+03:00
      DISPLAYSCRIPT: | 
        USRG_ACTDELETEPARAMSONEXECUTE
        
      ENTEREDPARAMS: !!binary > 
        U0xQUlBSU1QGAAAAU0VOREVSBgAAAFNFTkRFUgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABGTlNU
        RkxQUg==
      SCRIPT: | 
        Option Explicit
        Sub usrg_actDeleteParamsOnExecute(ByVal Sender)
        '*** Данный код необходим для вызова встроенного обработчика ***
        '*** В случае его удаления возможно нарушение работы системы ***
          Call   Inherited(Sender, "OnExecute", Array(Sender))
        '*** конец кода поддержки встроенного обработчика            ***
          Sender.OwnerForm.FindComponent("usrg_gdcParams").DeleteMultiple(Sender.OwnerForm.FindComponent("usrg_grParams").SelectedRows)
        End Sub
        
  - 
    Properties: 
      Class: "TgdcDelphiObject"
      RUID: 147171427_1545785791
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
      HeadObject: 147171428_1545785791
    Fields: 
      PARENT: "1176268402_1457844439 usrf_gdmn_config"
      NAME: "usrg_actDeleteParams"
      CLASSNAME: ""
      DESCRIPTION: ~
      MACROSGROUPKEY: ~
      OBJECTNAME: "usrg_actDeleteParams"
      OBJECTTYPE: 0
      REPORTGROUPKEY: ~
      SUBTYPE: ""
      EDITIONDATE: 2020-11-04T09:55:49+03:00
  - 
    Properties: 
      Class: "TgdcEvent"
      RUID: 147171428_1545785791
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
    Fields: 
      DISABLE: 0
      EVENTNAME: "ONEXECUTE"
      FUNCTIONKEY: "147171430_1545785791 usrg_actDeleteParamsOnExecute"
      OBJECTKEY: "147171427_1545785791 usrf_gdmn_config\\usrg_actDeleteParams"
      OBJECTNAME: "usrg_actDeleteParams"
      PARENTNAME: "usrf_gdmn_config"
      EDITIONDATE: 2020-11-04T10:18:08+03:00
  - 
    Properties: 
      Class: "TgdcFunction"
      RUID: 147171694_1545785791
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
      HeadObject: 147171692_1545785791
    Fields: 
      NAME: "usrg_actDeleteParamsLineOnExecute"
      COMMENT: ~
      EVENT: "ONEXECUTE"
      FUNCTIONTYPE: ~
      GROUPNAME: ~
      INHERITEDRULE: 0
      LANGUAGE: "VBScript"
      LOCALNAME: ~
      MODIFYDATE: 2021-06-15T18:45:04+03:00
      MODULE: "EVENTS"
      MODULECODE: "1176268402_1457844439 usrf_gdmn_config"
      OBJECTNAME: "usrf_gdmn_config"
      OWNERNAME: ~
      PUBLICFUNCTION: 1
      SHORTCUT: ~
      USEDEBUGINFO: 0
      EDITIONDATE: 2020-11-04T13:56:44+03:00
      DISPLAYSCRIPT: | 
        USRG_ACTDELETEPARAMSLINEONEXECUTE
        
      ENTEREDPARAMS: !!binary > 
        U0xQUlBSU1QGAAAAU0VOREVSBgAAAFNFTkRFUgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABGTlNU
        RkxQUg==
      SCRIPT: | 
        Option Explicit
        Sub usrg_actDeleteParamsLineOnExecute(ByVal Sender)
        '*** Данный код необходим для вызова встроенного обработчика ***
        '*** В случае его удаления возможно нарушение работы системы ***
          Call   Inherited(Sender, "OnExecute", Array(Sender))
        '*** конец кода поддержки встроенного обработчика            ***
          Sender.OwnerForm.FindComponent("usrg_gdcParamsLine").DeleteMultiple(Sender.OwnerForm.FindComponent("usrg_grParamsLine").SelectedRows)
        End Sub
        
  - 
    Properties: 
      Class: "TgdcDelphiObject"
      RUID: 147171431_1545785791
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
      HeadObject: 147171692_1545785791
    Fields: 
      PARENT: "1176268402_1457844439 usrf_gdmn_config"
      NAME: "usrg_actDeleteParamsLine"
      CLASSNAME: ""
      DESCRIPTION: ~
      MACROSGROUPKEY: ~
      OBJECTNAME: "usrg_actDeleteParamsLine"
      OBJECTTYPE: 0
      REPORTGROUPKEY: ~
      SUBTYPE: ""
      EDITIONDATE: 2020-11-04T09:55:53+03:00
  - 
    Properties: 
      Class: "TgdcEvent"
      RUID: 147171692_1545785791
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
    Fields: 
      DISABLE: 0
      EVENTNAME: "ONEXECUTE"
      FUNCTIONKEY: "147171694_1545785791 usrg_actDeleteParamsLineOnExecute"
      OBJECTKEY: "147171431_1545785791 usrf_gdmn_config\\usrg_actDeleteParamsLine"
      OBJECTNAME: "usrg_actDeleteParamsLine"
      PARENTNAME: "usrf_gdmn_config"
      EDITIONDATE: 2020-11-04T13:56:44+03:00
  - 
    Properties: 
      Class: "TgdcFunction"
      RUID: 147171765_1545785791
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
      HeadObject: 147171763_1545785791
    Fields: 
      NAME: "Macros147171765_1545785791"
      COMMENT: ~
      EVENT: ~
      FUNCTIONTYPE: ~
      GROUPNAME: ~
      INHERITEDRULE: 0
      LANGUAGE: "VBScript"
      LOCALNAME: ~
      MODIFYDATE: 2021-06-15T18:45:04+03:00
      MODULE: "MACROS"
      MODULECODE: "1176276983_1457844439 gdc_frmAttrUserDefinedUSR_GDMN_USERS"
      OBJECTNAME: "gdc_frmAttrUserDefinedUSR_GDMN_USERS"
      OWNERNAME: ~
      PUBLICFUNCTION: 1
      SHORTCUT: ~
      USEDEBUGINFO: 0
      EDITIONDATE: 2022-05-23T18:05:12+03:00
      DISPLAYSCRIPT: | 
        MACROS147171765_1545785791
        
      ENTEREDPARAMS: !!binary > 
        U0xQUlBSU1QJAAAAT1dORVJGT1JNCQAAAE9XTkVSRk9STQAAAAAAAAAAAAAAAAsAAAAAAAAAAAAA
        AABGTlNUUFJTVAkAAABTWVNURU1LRVkKAAAAz+7k8ejx8uXs4BAAAABVU1IkR0RNTl9TWVNURU1T
        CAAAAHVzciRuYW1lAgAAAGlkBwAAAAAAAAAAAAAAAEZOU1RGTFBS
      SCRIPT: | 
        Option Explicit
        Sub Macros147171765_1545785791(OwnerForm, SystemKey)
          dim gdcContact, gdcObject, Creator, i
          set Creator = new TCreator
          set gdcObject = OwnerForm.gdcObject
          set gdcContact = Creator.GetObject(nil, "TgdcContact", "")
          gdcContact.Transaction = gdcBaseManager.ReadTransaction
          gdcContact.SelectedId.Clear
          if gdcContact.ChooseItemsSelf(False, "Detail", "") then
            if Assigned(gdcObject) then
              for i = 0 to gdcContact.SelectedID.Count - 1
                gdcObject.Append
                gdcObject.FieldByName("USR$CONTACTKEY").AsInteger = gdcContact.SelectedID.Keys(i)
                gdcObject.FieldByName("USR$SYSTEMKEY").AsInteger = SystemKey(0)
                gdcObject.FieldByName("USR$PASSWORD").AsString = "1"
                gdcObject.Post
              next
            end if
          end if
        End Sub
        
  - 
    Properties: 
      Class: "TgdcMacros"
      RUID: 147171763_1545785791
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
    Fields: 
      NAME: "Deprecated. Выбрать пользователей из контактов"
      DISPLAYINMENU: 0
      EXECUTEDATE: ~
      FUNCTIONKEY: "147171765_1545785791 Macros147171765_1545785791"
      ISLOCALEXECUTE: 0
      ISREBUILD: 0
      MACROSGROUPKEY: "1176277022_1457844439 Локальные макросы"
      OBJECTNAME: "gdc_frmAttrUserDefinedUSR_GDMN_USERS"
      SERVERKEY: ~
      SHORTCUT: 0
      EDITIONDATE: 2022-05-23T18:05:13+03:00
  - 
    Properties: 
      Class: "TgdcDelphiObject"
      RUID: 147171355_1545402342
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
      HeadObject: 147171356_1545402342
    Fields: 
      PARENT: "147275685_124484738 TgdcBase\\TgdcAttrUserDefined"
      NAME: "TgdcAttrUserDefinedUSR_GDMN_USERS"
      CLASSNAME: "TgdcAttrUserDefined"
      DESCRIPTION: ~
      MACROSGROUPKEY: ~
      OBJECTNAME: ""
      OBJECTTYPE: 1
      REPORTGROUPKEY: ~
      SUBTYPE: "USR_GDMN_USERS"
      EDITIONDATE: 2020-11-23T11:43:14+03:00
  - 
    Properties: 
      Class: "TgdcFunction"
      RUID: 147171358_1545402342
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
      HeadObject: 147171356_1545402342
    Fields: 
      NAME: "TgdcAttrUserDefinedUSR_GDMN_USERSCreateFields"
      COMMENT: ~
      EVENT: ~
      FUNCTIONTYPE: ~
      GROUPNAME: ~
      INHERITEDRULE: 0
      LANGUAGE: "VBScript"
      LOCALNAME: ~
      MODIFYDATE: 2021-06-15T18:45:04+03:00
      MODULE: "METHOD"
      MODULECODE: "147171355_1545402342 TgdcBase\\TgdcAttrUserDefined\\TgdcAttrUserDefinedUSR_GDMN_USERS"
      OBJECTNAME: "TgdcAttrUserDefinedUSR_GDMN_USERS"
      OWNERNAME: ~
      PUBLICFUNCTION: 1
      SHORTCUT: ~
      USEDEBUGINFO: 0
      EDITIONDATE: 2021-08-06T14:08:16+03:00
      DISPLAYSCRIPT: | 
        TGDCATTRUSERDEFINEDUSR_GDMN_USERSCREATEFIELDS
        
      ENTEREDPARAMS: !!binary > 
        U0xQUlBSU1QEAAAAU0VMRgQAAABTRUxGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEZOU1RGTFBS
      SCRIPT: | 
        Option Explicit
        Sub TgdcAttrUserDefinedUSR_GDMN_USERSCreateFields(Self)
        '*** Данный код необходим для вызова кода определенного в gdc-классе.***
        '*** При его удаления  возможно нарушение  правильной работы системы.***
          Call Inherited(Self, "CreateFields", Array(Self))
        '***               Конец кода поддержки gdc-класса.                  ***
         ' Self.FieldByName("USR$PASSWORD").Required = true
        End Sub
        
  - 
    Properties: 
      Class: "TgdcEvent"
      RUID: 147171356_1545402342
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
    Fields: 
      DISABLE: 0
      EVENTNAME: "CREATEFIELDS"
      FUNCTIONKEY: "147171358_1545402342 TgdcAttrUserDefinedUSR_GDMN_USERSCreateFields"
      OBJECTKEY: "147171355_1545402342 TgdcBase\\TgdcAttrUserDefined\\TgdcAttrUserDefinedUSR_GDMN_USERS"
      OBJECTNAME: "TgdcAttrUserDefinedUSR_GDMN_USERS"
      PARENTNAME: "TgdcAttrUserDefined"
      EDITIONDATE: 2021-08-06T14:08:16+03:00
  - 
    Properties: 
      Class: "TgdcDelphiObject"
      RUID: 147171379_1545402342
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
      HeadObject: 147171380_1545402342
    Fields: 
      PARENT: "147275685_124484738 TgdcBase\\TgdcAttrUserDefined"
      NAME: "TgdcAttrUserDefinedUSR_GDMN_PARAMS"
      CLASSNAME: "TgdcAttrUserDefined"
      DESCRIPTION: ~
      MACROSGROUPKEY: ~
      OBJECTNAME: ""
      OBJECTTYPE: 1
      REPORTGROUPKEY: ~
      SUBTYPE: "USR_GDMN_PARAMS"
      EDITIONDATE: 2020-11-23T11:50:09+03:00
  - 
    Properties: 
      Class: "TgdcFunction"
      RUID: 147171382_1545402342
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
      HeadObject: 147171380_1545402342
    Fields: 
      NAME: "TgdcAttrUserDefinedUSR_GDMN_PARAMSCreateFields"
      COMMENT: ~
      EVENT: ~
      FUNCTIONTYPE: ~
      GROUPNAME: ~
      INHERITEDRULE: 0
      LANGUAGE: "VBScript"
      LOCALNAME: ~
      MODIFYDATE: 2021-06-15T18:45:04+03:00
      MODULE: "METHOD"
      MODULECODE: "147171379_1545402342 TgdcBase\\TgdcAttrUserDefined\\TgdcAttrUserDefinedUSR_GDMN_PARAMS"
      OBJECTNAME: "TgdcAttrUserDefinedUSR_GDMN_PARAMS"
      OWNERNAME: ~
      PUBLICFUNCTION: 1
      SHORTCUT: ~
      USEDEBUGINFO: 0
      EDITIONDATE: 2020-11-23T11:51:35+03:00
      DISPLAYSCRIPT: | 
        TGDCATTRUSERDEFINEDUSR_GDMN_PARAMSCREATEFIELDS
        
      ENTEREDPARAMS: !!binary > 
        U0xQUlBSU1QEAAAAU0VMRgQAAABTRUxGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEZOU1RGTFBS
      SCRIPT: | 
        Option Explicit
        Sub TgdcAttrUserDefinedUSR_GDMN_PARAMSCreateFields(Self)
        '*** Данный код необходим для вызова кода определенного в gdc-классе.***
        '*** При его удаления  возможно нарушение  правильной работы системы.***
          Call Inherited(Self, "CreateFields", Array(Self))
        '***               Конец кода поддержки gdc-класса.                  ***
          Self.FieldByName("USR$SYSTEMKEY").Required = true
          Self.FieldByName("USR$NAME").Required = true
        End Sub
        
  - 
    Properties: 
      Class: "TgdcEvent"
      RUID: 147171380_1545402342
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
    Fields: 
      DISABLE: 0
      EVENTNAME: "CREATEFIELDS"
      FUNCTIONKEY: "147171382_1545402342 TgdcAttrUserDefinedUSR_GDMN_PARAMSCreateFields"
      OBJECTKEY: "147171379_1545402342 TgdcBase\\TgdcAttrUserDefined\\TgdcAttrUserDefinedUSR_GDMN_PARAMS"
      OBJECTNAME: "TgdcAttrUserDefinedUSR_GDMN_PARAMS"
      PARENTNAME: "TgdcAttrUserDefined"
      EDITIONDATE: 2020-11-23T11:51:35+03:00
  - 
    Properties: 
      Class: "TgdcFunction"
      RUID: 147171416_1545402342
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
    Fields: 
      NAME: "web_SendUsersToServer_new"
      COMMENT: ~
      EVENT: ~
      FUNCTIONTYPE: ~
      GROUPNAME: ~
      INHERITEDRULE: 0
      LANGUAGE: "VBScript"
      LOCALNAME: ~
      MODIFYDATE: 2021-06-15T18:45:04+03:00
      MODULE: "UNKNOWN"
      MODULECODE: "1010001_17 APPLICATION"
      OBJECTNAME: "APPLICATION"
      OWNERNAME: ~
      PUBLICFUNCTION: 1
      SHORTCUT: ~
      USEDEBUGINFO: 0
      EDITIONDATE: 2021-10-27T14:16:47+03:00
      DISPLAYSCRIPT: | 
        WEB_SENDUSERSTOSERVER_NEW
        
      ENTEREDPARAMS: !!binary > 
        U0xQUlBSU1QJAAAAU1lTVEVNS0VZCQAAAFNZU1RFTUtFWQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AABGTlNURkxQUg==
      SCRIPT: | 
        '#include STRREPL
        Option Explicit
        Function web_SendUsersToServer_new(systemkey)
          web_SendUsersToServer_new = false
          
          dim web_service, version
          set web_service = (New TVB_Web_Service)(systemkey)
          version = web_service.AppSystemVersion
          if version <> "v0" then
            call Application.MessageBox("Функциональность в данной версии системы перенесена в WEB ADMIN!!! ", "Внимание!", vbInformation + vbOkOnly + vbApplicationModal)
            exit function
          end if
          dim ibsql, Creator, selectQuery
          set Creator = new TCreator
        
          set ibsql = Creator.GetObject(nil, "TIBSQL", "")
          ibsql.Transaction = gdcBaseManager.ReadTransaction
          ibsql.SQL.Text = _
            "SELECT " & _
            "  U.ID, " & _
            "  P.CONTACTKEY, " & _
            "  P.SURNAME, " & _
            "  P.FIRSTNAME, " & _
            "  P.MIDDLENAME, " & _
            "  U.USR$PASSWORD " & _
            "FROM " & _
            "  USR$GDMN_USERS U " & _
            "  JOIN GD_PEOPLE P ON P.CONTACTKEY = U.USR$CONTACTKEY " & _
            "WHERE " & _
            "  COALESCE(U.USR$NOTACTIVE, 0) = 0 " & _
            "  AND COALESCE(U.USR$MOBILEID, '') = ''  " & _
            "  AND U.USR$SYSTEMKEY = :SYSTEMKEY "
          ibsql.ParamByName("systemkey").AsInteger = systemkey
          ibsql.ExecQuery
        
          if ibsql.eof then
            call Application.MessageBox("Нет пользователей для выгрузки!", "Внимание", vbOkOnly + vbInformation)
            exit function
          end if
          
          dim Transaction
          set Transaction = Creator.GetObject(Null, "TIBTransaction", "Transaction")
          Transaction.Params.Add("nowait")
          Transaction.DefaultDatabase = gdcBaseManager.Database
          Transaction.StartTransaction
          
          dim ibsqlUpd
          set ibsqlUpd = Creator.GetObject(nil, "TIBSQL", "")
          ibsqlUpd.Transaction = Transaction
          ibsqlUpd.SQL.Text = _
            "UPDATE " & _
            "  USR$GDMN_USERS " & _
            "SET " & _
            "  USR$MOBILEID = :MOBILEID, " & _
            "  USR$DEVICEID = :DEVICEID, " & _
            "  USR$ACTIVEDCODE = :ACTIVEDCODE, " & _
            "  USR$CODEDATE = :CODEDATE " & _
            "WHERE " & _
            "  ID = :ID "
        
          dim strPostData, status, res
          'Вход администратора компании
          call web_service.Login(web_service.AdminLogin, web_service.AdminPassw)
        
          If web_service.RequestStatus <> 200 Then
            call Application.MessageBox (web_service.RequestError, "Внимание!", vbOkOnly + vbInformation)
            exit function
          End If
        
          dim adminId, userName, userId, firstName, lastName, firstN, middleN, deviceId, code, middlename
          dim JsonObj, resObj, errText, externalContactId, userPass
          set resObj = web_service.RequestData
        
          adminId = resObj.SimpleValue("data", "")
        
          Dim P : Set P = Creator.GetObject(nil, "TgdccProgress", "")
          P.StartWork "GDMN", "Идет выгрузка пользователей на сервер. Пожалуйста, подождите...", 10, True, True
        
          while not ibsql.eof And (Not P.Canceled)
            P.StartStep ibsql.FieldByName("surname").AsString, 1
        
            externalContactId = ibsql.FieldByName("contactkey").AsInteger
            userName = Trim(ibsql.FieldByName("surname").AsString)
            firstName = Trim(ibsql.FieldByName("firstName").AsString)
            lastName = Trim(ibsql.FieldByName("surname").AsString)
            middlename = Trim(ibsql.FieldByName("middlename").AsString)
            
            userPass = Trim(ibsql.FieldByName("usr$password").AsString)
        
            firstN = Left(firstName, 1)
            if firstN <> "" then userName = userName & " " & firstN
            middleN = Left(middlename, 1)
            
            if middleN <> "" then
              if firstN <> "" then userName = userName & "."
              userName = userName & middleN & "."
            end if
        
            '1. Создаем пользователя
            strPostData =  _
              "{""externalId"":""" & externalContactId & """" & _
              ",""userName"":""" & strRepl(userName) & """" & _
              ",""password"":""" & strRepl(userPass) & """"
        
            if firstName <> "" then strPostData = strPostData & ",""firstName"":""" & strRepl(firstName) & """"
            if lastName  <> "" then strPostData = strPostData & ",""lastName"":""" & strRepl(lastName) & """"
        
            strPostData = strPostData & _
              ",""companies"":[""" & web_service.Company & """]"  & _
              ",""creatorId"":""" & adminId & """" & _
              "}"
        
            call web_service.Signup(strPostData)
        
            set resObj = web_service.RequestData
            
            if web_service.RequestStatus = 200 then
              userId = resObj.SimpleValue("data", "")
        
              '2. Добавляем устройство
              strPostData = _
                "{" & _
                """deviceName"":""Mobile phone"","  & _
                """userId"":""" & userId & """" & _
                "}"
        
              call web_service.AddDevice(strPostData)
              set resObj = web_service.RequestData
        
              if web_service.RequestStatus = 201 then
                deviceId = resObj.SimpleValue("data", "")
                '3. Генерируем активационный код
                call web_service.GetCode(deviceId)
        
                if web_service.RequestStatus = 200 then
                  set resObj = web_service.RequestData
                  code = resObj.SimpleValue("data", "")
        
                  'Записываем полученные данные в таблицу пользователей в гедымине
                  ibsqlUpd.Close
                  ibsqlUpd.ParamByName("ID").AsInteger = ibsql.FieldByName("id").AsInteger
                  ibsqlUpd.ParamByName("DEVICEID").AsString = deviceId
                  ibsqlUpd.ParamByName("ACTIVEDCODE").AsString = code
                  ibsqlUpd.ParamByName("MOBILEID").AsString = userId
                  ibsqlUpd.ParamByName("CODEDATE").AsDateTime = now()
                  
                  on error resume next
                  ibsqlUpd.ExecQuery
                  if err.number <> 0 then
                    web_service.Log.WriteLine("Данные по пользователю " & userName & " в таблицу не добавлены! Ошибка: " & err.description & ".")
                  end if
                  on error goto 0
                end if
              end if
            end if
            ibsql.Next
          wend
        
          'Выход пользователя
          call web_service.Logout()
        
          if web_service.HasError then
            P.EndWork "Экспорт выполнен с ошибками!", False
          else
            if Transaction.InTransaction then
              Transaction.Commit
            else
              Transaction.RollBack
            end if
            P.EndWork "Экспорт успешно выполнен!", False
          end if
          
          web_SendUsersToServer_new = true
        End Function
        
    Set: 
      - 
        Table: "RP_ADDITIONALFUNCTION"
        Items: 
          - 
            ADDFUNCTIONKEY: "1176277227_1457844439 strRepl"
  - 
    Properties: 
      Class: "TgdcFunction"
      RUID: 147171411_1545402342
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
      HeadObject: 147171409_1545402342
    Fields: 
      NAME: "Macros1176277240_1457844439147171411_1545402342"
      COMMENT: ~
      EVENT: ~
      FUNCTIONTYPE: ~
      GROUPNAME: ~
      INHERITEDRULE: 0
      LANGUAGE: "VBScript"
      LOCALNAME: ~
      MODIFYDATE: 2021-06-15T18:45:04+03:00
      MODULE: "MACROS"
      MODULECODE: "1176276983_1457844439 gdc_frmAttrUserDefinedUSR_GDMN_USERS"
      OBJECTNAME: "gdc_frmAttrUserDefinedUSR_GDMN_USERS"
      OWNERNAME: ~
      PUBLICFUNCTION: 1
      SHORTCUT: ~
      USEDEBUGINFO: 0
      EDITIONDATE: 2022-05-23T18:05:06+03:00
      DISPLAYSCRIPT: | 
        MACROS1176277240_1457844439147171411_1545402342
        
      ENTEREDPARAMS: !!binary > 
        U0xQUlBSU1QJAAAAT1dORVJGT1JNCQAAAE9XTkVSRk9STQAAAAAAAAAAAAAAAAsAAAAAAAAAAAAA
        AABGTlNUUFJTVAkAAABTWVNURU1LRVkKAAAAz+7k8ejx8uXs4BAAAABVU1IkR0RNTl9TWVNURU1T
        CAAAAFVTUiROQU1FAgAAAElEBwAAAAAAAAAAAgAAAF5SRk5TVEZMUFI=
      SCRIPT: | 
        '#include WEB_SENDUSERSTOSERVER_NEW
        Option Explicit
        Sub Macros1176277240_1457844439147171411_1545402342(OwnerForm, systemKey)
          if web_SendUsersToServer_new(systemKey(0)) then
            OwnerForm.gdcObject.CloseOpen
          end if
        End Sub
        
    Set: 
      - 
        Table: "RP_ADDITIONALFUNCTION"
        Items: 
          - 
            ADDFUNCTIONKEY: "147171416_1545402342 web_SendUsersToServer_new"
  - 
    Properties: 
      Class: "TgdcMacros"
      RUID: 147171409_1545402342
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
    Fields: 
      NAME: "Deprecated. Экспорт пользователей на сервер (справочник)"
      DISPLAYINMENU: 0
      EXECUTEDATE: ~
      FUNCTIONKEY: "147171411_1545402342 Macros1176277240_1457844439147171411_1545402342"
      ISLOCALEXECUTE: 0
      ISREBUILD: 0
      MACROSGROUPKEY: "1176277022_1457844439 Локальные макросы"
      OBJECTNAME: "gdc_frmAttrUserDefinedUSR_GDMN_USERS"
      SERVERKEY: ~
      SHORTCUT: 0
      EDITIONDATE: 2022-05-23T18:05:07+03:00
  - 
    Properties: 
      Class: "TgdcFunction"
      RUID: 147171490_1545402342
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
      HeadObject: 147171488_1545402342
    Fields: 
      NAME: "TgdcAttrUserDefinedUSR_GDMN_PARAMSLINECreateFields"
      COMMENT: ~
      EVENT: ~
      FUNCTIONTYPE: ~
      GROUPNAME: ~
      INHERITEDRULE: 0
      LANGUAGE: "VBScript"
      LOCALNAME: ~
      MODIFYDATE: 2021-06-15T18:45:04+03:00
      MODULE: "METHOD"
      MODULECODE: "147171365_1545785791 TgdcBase\\TgdcAttrUserDefined\\TgdcAttrUserDefinedUSR_GDMN_PARAMSLINE"
      OBJECTNAME: "TgdcAttrUserDefinedUSR_GDMN_PARAMSLINE"
      OWNERNAME: ~
      PUBLICFUNCTION: 1
      SHORTCUT: ~
      USEDEBUGINFO: 0
      EDITIONDATE: 2020-11-23T15:05:09+03:00
      DISPLAYSCRIPT: | 
        TGDCATTRUSERDEFINEDUSR_GDMN_PARAMSLINECREATEFIELDS
        
      ENTEREDPARAMS: !!binary > 
        U0xQUlBSU1QEAAAAU0VMRgQAAABTRUxGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEZOU1RGTFBS
      SCRIPT: | 
        Option Explicit
        Sub TgdcAttrUserDefinedUSR_GDMN_PARAMSLINECreateFields(Self)
        '*** Данный код необходим для вызова кода определенного в gdc-классе.***
        '*** При его удаления  возможно нарушение  правильной работы системы.***
          Call Inherited(Self, "CreateFields", Array(Self))
        '***               Конец кода поддержки gdc-класса.                  ***
          Self.FieldByName("USR$PARAMNAME").Required = true
          Self.FieldByName("USR$PARAMCODE").Required = true
        End Sub
        
  - 
    Properties: 
      Class: "TgdcEvent"
      RUID: 147171488_1545402342
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
    Fields: 
      DISABLE: 0
      EVENTNAME: "CREATEFIELDS"
      FUNCTIONKEY: "147171490_1545402342 TgdcAttrUserDefinedUSR_GDMN_PARAMSLINECreateFields"
      OBJECTKEY: "147171365_1545785791 TgdcBase\\TgdcAttrUserDefined\\TgdcAttrUserDefinedUSR_GDMN_PARAMSLINE"
      OBJECTNAME: "TgdcAttrUserDefinedUSR_GDMN_PARAMSLINE"
      PARENTNAME: "TgdcAttrUserDefined"
      EDITIONDATE: 2020-11-23T15:05:09+03:00
  - 
    Properties: 
      Class: "TgdcFunction"
      RUID: 147172932_1545785791
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
      HeadObject: 147172930_1545785791
    Fields: 
      NAME: "Macros147172932_1545785791"
      COMMENT: ~
      EVENT: ~
      FUNCTIONTYPE: ~
      GROUPNAME: ~
      INHERITEDRULE: 0
      LANGUAGE: "VBScript"
      LOCALNAME: ~
      MODIFYDATE: 2021-06-15T18:45:04+03:00
      MODULE: "MACROS"
      MODULECODE: "1176276983_1457844439 gdc_frmAttrUserDefinedUSR_GDMN_USERS"
      OBJECTNAME: "gdc_frmAttrUserDefinedUSR_GDMN_USERS"
      OWNERNAME: ~
      PUBLICFUNCTION: 1
      SHORTCUT: ~
      USEDEBUGINFO: 0
      EDITIONDATE: 2022-09-30T15:04:39+03:00
      DISPLAYSCRIPT: | 
        MACROS147172932_1545785791
        
      ENTEREDPARAMS: !!binary > 
        U0xQUlBSU1QJAAAAT1dORVJGT1JNCQAAAE9XTkVSRk9STQAAAAAAAAAAAAAAAAsAAAAAAAAAAAAA
        AABGTlNUUFJTVAkAAABTWVNURU1LRVkKAAAAz+7k8ejx8uXs4BAAAABVU1IkR0RNTl9TWVNURU1T
        CAAAAHVzciRuYW1lAgAAAGlkBwAAAAAAAAAAAgAAAF5SRk5TVEZMUFI=
      SCRIPT: | 
        Option Explicit
        Sub Macros147172932_1545785791(OwnerForm, SystemKey)
          dim web_service, version
          set web_service = (New TVB_Web_Service)(SystemKey(0))
          version = web_service.AppSystemVersion
          if version <> "v0" then
            call Application.MessageBox("Функциональность в данной версии системы перенесена в WEB ADMIN!!! ", "Внимание!", vbInformation + vbOkOnly + vbApplicationModal)
            exit sub
          end if
          'Вход пользователя
          call web_service.Login(web_service.AdminLogin, web_service.AdminPassw)
        
          If web_service.RequestStatus = 200 or web_service.RequestStatus = 403 Then
        
            dim Creator, strPostData, gdcObject, docId
            set Creator = new TCreator
        
            set gdcObject = OwnerForm.gdcObject
            docId = gdcObject.ID
            call gdcObject.SelectedID.Clear
            call gdcObject.AddToSelectedBookmark(OwnerForm.GetComponent("ibgrMain").SelectedRows)
            dim OldSubset
            OldSubset = gdcObject.SubSet
        
            gdcObject.Close
            gdcObject.Subset = "OnlySelected"
            gdcObject.Open
            gdcObject.First
        
            dim adminId, userName, userId, userPass, isErr, code, JsonObj, resObj, errText
            set JsonObj = New TVB_gs_Json
        
            while not gdcObject.eof
              userId = gdcObject.FieldByName("USR$MOBILEID").AsString
              userPass = gdcObject.FieldByName("USR$PASSWORD").AsString
        
              'Проверим, есть ли такой пользователь на сервере
              call web_service.GetUser(userId)
        
              if web_service.RequestStatus = 200 then
                'Создаем объект пользователя с новым паролем
                strPostData =  _
                  "{""password"":""" & userPass & """" & "}"
               'Обновим пользователя
                call web_service.UpdateUser(userId, strPostData)
              end if
              gdcObject.Next
            wend
            'вернем сабсет обратно
            gdcObject.Close
            if OldSubset <> "" then
              gdcObject.Subset = OldSubset
            else
              gdcObject.Subset = "All"
            end if
            gdcObject.Open
            gdcObject.ID = docId
        
            call gdcObject.SelectedID.Clear
            'Выход пользователя
            call web_service.Logout()
        
            if web_service.HasError then
              call Application.MessageBox("Обновление пароля выполнено с ошибками! Смотрите файл с ошибками", "Внимание!", vbInformation + vbOkOnly + vbApplicationModal)
            else
              call Application.MessageBox("Обновление пароля выполнено успешно!", "Внимание!", vbInformation + vbOkOnly + vbApplicationModal)
            end if
          else
            call Application.MessageBox(web_service.RequestError, "Внимание!", vbInformation + vbOkOnly + vbApplicationModal)
          end if
        End Sub
        
  - 
    Properties: 
      Class: "TgdcMacros"
      RUID: 147172930_1545785791
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
    Fields: 
      NAME: "Deprecated. Обновить пароль"
      DISPLAYINMENU: 0
      EXECUTEDATE: ~
      FUNCTIONKEY: "147172932_1545785791 Macros147172932_1545785791"
      ISLOCALEXECUTE: 0
      ISREBUILD: 0
      MACROSGROUPKEY: "1176277022_1457844439 Локальные макросы"
      OBJECTNAME: "gdc_frmAttrUserDefinedUSR_GDMN_USERS"
      SERVERKEY: ~
      SHORTCUT: 0
      EDITIONDATE: 2022-09-30T15:04:39+03:00
  - 
    Properties: 
      Class: "TgdcDelphiObject"
      RUID: 149012428_1521203129
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
      HeadObject: 149012429_1521203129
    Fields: 
      PARENT: "147275685_124484738 TgdcBase\\TgdcAttrUserDefined"
      NAME: "TgdcAttrUserDefinedUSR_GDMN_DOCUMENTS"
      CLASSNAME: "TgdcAttrUserDefined"
      DESCRIPTION: ~
      MACROSGROUPKEY: ~
      OBJECTNAME: ""
      OBJECTTYPE: 1
      REPORTGROUPKEY: ~
      SUBTYPE: "USR_GDMN_DOCUMENTS"
      EDITIONDATE: 2020-11-24T18:07:06+03:00
  - 
    Properties: 
      Class: "TgdcFunction"
      RUID: 149012431_1521203129
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
      HeadObject: 149012429_1521203129
    Fields: 
      NAME: "TgdcAttrUserDefinedUSR_GDMN_DOCUMENTSCreateFields"
      COMMENT: ~
      EVENT: ~
      FUNCTIONTYPE: ~
      GROUPNAME: ~
      INHERITEDRULE: 0
      LANGUAGE: "VBScript"
      LOCALNAME: ~
      MODIFYDATE: 2021-06-15T18:45:04+03:00
      MODULE: "METHOD"
      MODULECODE: "149012428_1521203129 TgdcBase\\TgdcAttrUserDefined\\TgdcAttrUserDefinedUSR_GDMN_DOCUMENTS"
      OBJECTNAME: "TgdcAttrUserDefinedUSR_GDMN_DOCUMENTS"
      OWNERNAME: ~
      PUBLICFUNCTION: 1
      SHORTCUT: ~
      USEDEBUGINFO: 0
      EDITIONDATE: 2021-07-07T14:09:57+03:00
      DISPLAYSCRIPT: | 
        TGDCATTRUSERDEFINEDUSR_GDMN_DOCUMENTSCREATEFIELDS
        
      ENTEREDPARAMS: !!binary > 
        U0xQUlBSU1QEAAAAU0VMRgQAAABTRUxGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEZOU1RGTFBS
      SCRIPT: | 
        Option Explicit
        Sub TgdcAttrUserDefinedUSR_GDMN_DOCUMENTSCreateFields(Self)
        '*** Данный код необходим для вызова кода определенного в gdc-классе.***
        '*** При его удаления  возможно нарушение  правильной работы системы.***
          Call Inherited(Self, "CreateFields", Array(Self))
        '***               Конец кода поддержки gdc-класса.                  ***
          Self.FieldByName("USR$SYSTEMKEY").Required = true
         ' Self.FieldByName("USR$DOCUMENTTYPE").Required = true
        End Sub
        
  - 
    Properties: 
      Class: "TgdcEvent"
      RUID: 149012429_1521203129
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
    Fields: 
      DISABLE: 0
      EVENTNAME: "CREATEFIELDS"
      FUNCTIONKEY: "149012431_1521203129 TgdcAttrUserDefinedUSR_GDMN_DOCUMENTSCreateFields"
      OBJECTKEY: "149012428_1521203129 TgdcBase\\TgdcAttrUserDefined\\TgdcAttrUserDefinedUSR_GDMN_DOCUMENTS"
      OBJECTNAME: "TgdcAttrUserDefinedUSR_GDMN_DOCUMENTS"
      PARENTNAME: "TgdcAttrUserDefined"
      EDITIONDATE: 2021-07-07T14:09:57+03:00
  - 
    Properties: 
      Class: "TgdcFunction"
      RUID: 147173032_1545785791
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
      HeadObject: 147173030_1545785791
    Fields: 
      NAME: "gdc_dlgAttrUserDefinedUSR_GDMN_REFERENCESOnShow"
      COMMENT: ~
      EVENT: "ONSHOW"
      FUNCTIONTYPE: ~
      GROUPNAME: ~
      INHERITEDRULE: 0
      LANGUAGE: "VBScript"
      LOCALNAME: ~
      MODIFYDATE: 2021-06-15T18:45:04+03:00
      MODULE: "EVENTS"
      MODULECODE: "148998334_1521203129 gdc_dlgAttrUserDefinedUSR_GDMN_REFERENCES"
      OBJECTNAME: "gdc_dlgAttrUserDefinedUSR_GDMN_REFERENCES"
      OWNERNAME: ~
      PUBLICFUNCTION: 1
      SHORTCUT: ~
      USEDEBUGINFO: 0
      EDITIONDATE: 2021-06-09T17:49:21+03:00
      DISPLAYSCRIPT: | 
        GDC_DLGATTRUSERDEFINEDUSR_GDMN_REFERENCESONSHOW
        
      ENTEREDPARAMS: !!binary > 
        U0xQUlBSU1QGAAAAU0VOREVSBgAAAFNFTkRFUgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABGTlNU
        RkxQUg==
      SCRIPT: | 
        Option Explicit
        Sub gdc_dlgAttrUserDefinedUSR_GDMN_REFERENCESOnShow(ByVal Sender)
        '*** Данный код необходим для вызова встроенного обработчика ***
        '*** В случае его удаления возможно нарушение работы системы ***
          Call   Inherited(Sender, "OnShow", Array(Sender))
        '*** конец кода поддержки встроенного обработчика            ***
          dim gdcParams
          set gdcParams = Sender.OwnerForm.GetComponent("usrg_gdcParams")
          gdcParams.ExtraConditions.Clear
          gdcParams.ExtraConditions.Add("z.USR$SYSTEMKEY = " & Sender.gdcObject.FieldByName("USR$SYSTEMKEY").AsInteger)
          gdcParams.Open
          dim gdcQueryFields
          set gdcQueryFields = Sender.OwnerForm.GetComponent("usrg_gdcQueryFields")
          gdcQueryFields.ExtraConditions.Clear
          gdcQueryFields.ExtraConditions.Add("z.USR$REFERENCELINE = " & Sender.gdcObject.FieldByName("ID").AsInteger)
          gdcQueryFields.Open
        End Sub
        
  - 
    Properties: 
      Class: "TgdcEvent"
      RUID: 147173030_1545785791
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
    Fields: 
      DISABLE: 0
      EVENTNAME: "ONSHOW"
      FUNCTIONKEY: "147173032_1545785791 gdc_dlgAttrUserDefinedUSR_GDMN_REFERENCESOnShow"
      OBJECTKEY: "148998334_1521203129 gdc_dlgAttrUserDefinedUSR_GDMN_REFERENCES"
      OBJECTNAME: "gdc_dlgAttrUserDefinedUSR_GDMN_REFERENCES"
      PARENTNAME: ~
      EDITIONDATE: 2021-06-09T17:49:21+03:00
  - 
    Properties: 
      Class: "TgdcFunction"
      RUID: 147173035_1545785791
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
      HeadObject: 147173033_1545785791
    Fields: 
      NAME: "gdc_dlgAttrUserDefinedUSR_GDMN_REFERENCESOnSyncField"
      COMMENT: ~
      EVENT: "ONSYNCFIELD"
      FUNCTIONTYPE: ~
      GROUPNAME: ~
      INHERITEDRULE: 0
      LANGUAGE: "VBScript"
      LOCALNAME: ~
      MODIFYDATE: 2021-06-15T18:45:04+03:00
      MODULE: "EVENTS"
      MODULECODE: "148998334_1521203129 gdc_dlgAttrUserDefinedUSR_GDMN_REFERENCES"
      OBJECTNAME: "gdc_dlgAttrUserDefinedUSR_GDMN_REFERENCES"
      OWNERNAME: ~
      PUBLICFUNCTION: 1
      SHORTCUT: ~
      USEDEBUGINFO: 0
      EDITIONDATE: 2020-11-26T12:55:24+03:00
      DISPLAYSCRIPT: | 
        GDC_DLGATTRUSERDEFINEDUSR_GDMN_REFERENCESONSYNCFIELD
        
      ENTEREDPARAMS: !!binary > 
        U0xQUlBSU1QGAAAAU0VOREVSBgAAAFNFTkRFUgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABGTlNU
        UFJTVAUAAABGSUVMRAUAAABGSUVMRAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABGTlNUUFJTVAgA
        AABTWU5DTElTVAgAAABTWU5DTElTVAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABGTlNURkxQUg==
      SCRIPT: | 
        Option Explicit
        Sub gdc_dlgAttrUserDefinedUSR_GDMN_REFERENCESOnSyncField(ByVal Sender, ByVal Field, ByVal SyncList)
        '*** Данный код необходим для вызова встроенного обработчика ***
        '*** В случае его удаления возможно нарушение работы системы ***
          Call   Inherited(Sender, "OnSyncField", Array(Sender, Field, SyncList))
        '*** конец кода поддержки встроенного обработчика            ***
          if Field.FieldName = "USR$SYSTEMKEY" then
            dim gdcParams
            set gdcParams = Sender.OwnerForm.GetComponent("usrg_gdcParams")
            gdcParams.Close
            gdcParams.ExtraConditions.Clear
            gdcParams.ExtraConditions.Add("z.USR$SYSTEMKEY = " & Field.AsInteger)
            gdcParams.Open
          end if
        End Sub
        
  - 
    Properties: 
      Class: "TgdcEvent"
      RUID: 147173033_1545785791
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
    Fields: 
      DISABLE: 0
      EVENTNAME: "ONSYNCFIELD"
      FUNCTIONKEY: "147173035_1545785791 gdc_dlgAttrUserDefinedUSR_GDMN_REFERENCESOnSyncField"
      OBJECTKEY: "148998334_1521203129 gdc_dlgAttrUserDefinedUSR_GDMN_REFERENCES"
      OBJECTNAME: "gdc_dlgAttrUserDefinedUSR_GDMN_REFERENCES"
      PARENTNAME: ~
      EDITIONDATE: 2020-11-26T12:55:24+03:00
  - 
    Properties: 
      Class: "TgdcFunction"
      RUID: 147173041_1545785791
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
      HeadObject: 147173039_1545785791
    Fields: 
      NAME: "gdc_dlgAttrUserDefinedUSR_GDMN_REFERENCESOnSaveSettings"
      COMMENT: ~
      EVENT: "ONSAVESETTINGS"
      FUNCTIONTYPE: ~
      GROUPNAME: ~
      INHERITEDRULE: 0
      LANGUAGE: "VBScript"
      LOCALNAME: ~
      MODIFYDATE: 2021-06-15T18:45:04+03:00
      MODULE: "EVENTS"
      MODULECODE: "148998334_1521203129 gdc_dlgAttrUserDefinedUSR_GDMN_REFERENCES"
      OBJECTNAME: "gdc_dlgAttrUserDefinedUSR_GDMN_REFERENCES"
      OWNERNAME: ~
      PUBLICFUNCTION: 1
      SHORTCUT: ~
      USEDEBUGINFO: 0
      EDITIONDATE: 2021-06-09T17:52:50+03:00
      DISPLAYSCRIPT: | 
        GDC_DLGATTRUSERDEFINEDUSR_GDMN_REFERENCESONSAVESETTINGS
        
      ENTEREDPARAMS: !!binary > 
        U0xQUlBSU1QGAAAAU0VOREVSBgAAAFNFTkRFUgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABGTlNU
        RkxQUg==
      SCRIPT: | 
        Option Explicit
        Sub gdc_dlgAttrUserDefinedUSR_GDMN_REFERENCESOnSaveSettings(ByVal Sender)
        '*** Данный код необходим для вызова встроенного обработчика ***
        '*** В случае его удаления возможно нарушение работы системы ***
          Call   Inherited(Sender, "OnSaveSettings", Array(Sender))
        '*** конец кода поддержки встроенного обработчика            ***
          Sender.SaveGrid(Sender.GetComponent("usrg_grParams"))
          Sender.SaveGrid(Sender.GetComponent("usrg_grParamsLine"))
          Sender.SaveGrid(Sender.GetComponent("usrg_grQueryFields"))
        End Sub
        
  - 
    Properties: 
      Class: "TgdcEvent"
      RUID: 147173039_1545785791
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
    Fields: 
      DISABLE: 0
      EVENTNAME: "ONSAVESETTINGS"
      FUNCTIONKEY: "147173041_1545785791 gdc_dlgAttrUserDefinedUSR_GDMN_REFERENCESOnSaveSettings"
      OBJECTKEY: "148998334_1521203129 gdc_dlgAttrUserDefinedUSR_GDMN_REFERENCES"
      OBJECTNAME: "gdc_dlgAttrUserDefinedUSR_GDMN_REFERENCES"
      PARENTNAME: ~
      EDITIONDATE: 2021-06-09T17:52:50+03:00
  - 
    Properties: 
      Class: "TgdcFunction"
      RUID: 147173038_1545785791
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
      HeadObject: 147173036_1545785791
    Fields: 
      NAME: "gdc_dlgAttrUserDefinedUSR_GDMN_REFERENCESOnLoadSettingsAfterCreate"
      COMMENT: ~
      EVENT: "ONLOADSETTINGSAFTERCREATE"
      FUNCTIONTYPE: ~
      GROUPNAME: ~
      INHERITEDRULE: 0
      LANGUAGE: "VBScript"
      LOCALNAME: ~
      MODIFYDATE: 2021-06-15T18:45:04+03:00
      MODULE: "EVENTS"
      MODULECODE: "148998334_1521203129 gdc_dlgAttrUserDefinedUSR_GDMN_REFERENCES"
      OBJECTNAME: "gdc_dlgAttrUserDefinedUSR_GDMN_REFERENCES"
      OWNERNAME: ~
      PUBLICFUNCTION: 1
      SHORTCUT: ~
      USEDEBUGINFO: 0
      EDITIONDATE: 2021-06-09T17:52:40+03:00
      DISPLAYSCRIPT: | 
        GDC_DLGATTRUSERDEFINEDUSR_GDMN_REFERENCESONLOADSETTINGSAFTERCREATE
        
      ENTEREDPARAMS: !!binary > 
        U0xQUlBSU1QGAAAAU0VOREVSBgAAAFNFTkRFUgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABGTlNU
        RkxQUg==
      SCRIPT: | 
        Option Explicit
        Sub gdc_dlgAttrUserDefinedUSR_GDMN_REFERENCESOnLoadSettingsAfterCreate(ByVal Sender)
        '*** Данный код необходим для вызова встроенного обработчика ***
        '*** В случае его удаления возможно нарушение работы системы ***
          Call   Inherited(Sender, "OnLoadSettingsAfterCreate", Array(Sender))
        '*** конец кода поддержки встроенного обработчика            ***
         Sender.LoadGrid(Sender.GetComponent("usrg_grParams"))
         Sender.LoadGrid(Sender.GetComponent("usrg_grParamsLine"))
         Sender.LoadGrid(Sender.GetComponent("usrg_grQueryFields"))
        End Sub
        
  - 
    Properties: 
      Class: "TgdcEvent"
      RUID: 147173036_1545785791
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
    Fields: 
      DISABLE: 0
      EVENTNAME: "ONLOADSETTINGSAFTERCREATE"
      FUNCTIONKEY: "147173038_1545785791 gdc_dlgAttrUserDefinedUSR_GDMN_REFERENCESOnLoadSettingsAfterCreate"
      OBJECTKEY: "148998334_1521203129 gdc_dlgAttrUserDefinedUSR_GDMN_REFERENCES"
      OBJECTNAME: "gdc_dlgAttrUserDefinedUSR_GDMN_REFERENCES"
      PARENTNAME: ~
      EDITIONDATE: 2021-06-09T17:52:40+03:00
  - 
    Properties: 
      Class: "TgdcFunction"
      RUID: 147173302_1545785791
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
      HeadObject: 147173300_1545785791
    Fields: 
      NAME: "usrg_actEditParamsLineOnExecute"
      COMMENT: ~
      EVENT: "ONEXECUTE"
      FUNCTIONTYPE: ~
      GROUPNAME: ~
      INHERITEDRULE: 0
      LANGUAGE: "VBScript"
      LOCALNAME: ~
      MODIFYDATE: 2021-06-15T18:45:04+03:00
      MODULE: "EVENTS"
      MODULECODE: "148998334_1521203129 gdc_dlgAttrUserDefinedUSR_GDMN_REFERENCES"
      OBJECTNAME: "gdc_dlgAttrUserDefinedUSR_GDMN_REFERENCES"
      OWNERNAME: ~
      PUBLICFUNCTION: 1
      SHORTCUT: ~
      USEDEBUGINFO: 0
      EDITIONDATE: 2020-11-26T15:30:55+03:00
      DISPLAYSCRIPT: | 
        USRG_ACTEDITPARAMSLINEONEXECUTE
        
      ENTEREDPARAMS: !!binary > 
        U0xQUlBSU1QGAAAAU0VOREVSBgAAAFNFTkRFUgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABGTlNU
        RkxQUg==
      SCRIPT: | 
        Option Explicit
        Sub usrg_actEditParamsLineOnExecute(ByVal Sender)
        '*** Данный код необходим для вызова встроенного обработчика ***
        '*** В случае его удаления возможно нарушение работы системы ***
          Call   Inherited(Sender, "OnExecute", Array(Sender))
        '*** конец кода поддержки встроенного обработчика            ***
          call Sender.OwnerForm.GetComponent("usrg_gdcParamsLine").EditDialog("")
        End Sub
        
  - 
    Properties: 
      Class: "TgdcDelphiObject"
      RUID: 147173299_1545785791
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
      HeadObject: 147173300_1545785791
    Fields: 
      PARENT: "148998334_1521203129 gdc_dlgAttrUserDefinedUSR_GDMN_REFERENCES"
      NAME: "usrg_actEditParamsLine"
      CLASSNAME: ""
      DESCRIPTION: ~
      MACROSGROUPKEY: ~
      OBJECTNAME: "usrg_actEditParamsLine"
      OBJECTTYPE: 0
      REPORTGROUPKEY: ~
      SUBTYPE: ""
      EDITIONDATE: 2020-11-26T13:45:34+03:00
  - 
    Properties: 
      Class: "TgdcEvent"
      RUID: 147173300_1545785791
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
    Fields: 
      DISABLE: 0
      EVENTNAME: "ONEXECUTE"
      FUNCTIONKEY: "147173302_1545785791 usrg_actEditParamsLineOnExecute"
      OBJECTKEY: "147173299_1545785791 gdc_dlgAttrUserDefinedUSR_GDMN_REFERENCES\\usrg_actEditParamsLine"
      OBJECTNAME: "usrg_actEditParamsLine"
      PARENTNAME: "gdc_dlgAttrUserDefinedUSR_GDMN_REFERENCES"
      EDITIONDATE: 2020-11-26T15:30:55+03:00
  - 
    Properties: 
      Class: "TgdcFunction"
      RUID: 147173118_1545785791
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
      HeadObject: 147173116_1545785791
    Fields: 
      NAME: "usrg_actEditParamsOnExecute"
      COMMENT: ~
      EVENT: "ONEXECUTE"
      FUNCTIONTYPE: ~
      GROUPNAME: ~
      INHERITEDRULE: 0
      LANGUAGE: "VBScript"
      LOCALNAME: ~
      MODIFYDATE: 2021-06-15T18:45:04+03:00
      MODULE: "EVENTS"
      MODULECODE: "148998334_1521203129 gdc_dlgAttrUserDefinedUSR_GDMN_REFERENCES"
      OBJECTNAME: "gdc_dlgAttrUserDefinedUSR_GDMN_REFERENCES"
      OWNERNAME: ~
      PUBLICFUNCTION: 1
      SHORTCUT: ~
      USEDEBUGINFO: 0
      EDITIONDATE: 2020-11-26T15:30:47+03:00
      DISPLAYSCRIPT: | 
        USRG_ACTEDITPARAMSONEXECUTE
        
      ENTEREDPARAMS: !!binary > 
        U0xQUlBSU1QGAAAAU0VOREVSBgAAAFNFTkRFUgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABGTlNU
        RkxQUg==
      SCRIPT: | 
        Option Explicit
        Sub usrg_actEditParamsOnExecute(ByVal Sender)
        '*** Данный код необходим для вызова встроенного обработчика ***
        '*** В случае его удаления возможно нарушение работы системы ***
          Call   Inherited(Sender, "OnExecute", Array(Sender))
        '*** конец кода поддержки встроенного обработчика            ***
          call Sender.OwnerForm.GetComponent("usrg_gdcParams").EditDialog("")
        End Sub
        
  - 
    Properties: 
      Class: "TgdcDelphiObject"
      RUID: 147173115_1545785791
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
      HeadObject: 147173116_1545785791
    Fields: 
      PARENT: "148998334_1521203129 gdc_dlgAttrUserDefinedUSR_GDMN_REFERENCES"
      NAME: "usrg_actEditParams"
      CLASSNAME: ""
      DESCRIPTION: ~
      MACROSGROUPKEY: ~
      OBJECTNAME: "usrg_actEditParams"
      OBJECTTYPE: 0
      REPORTGROUPKEY: ~
      SUBTYPE: ""
      EDITIONDATE: 2020-11-26T13:45:21+03:00
  - 
    Properties: 
      Class: "TgdcEvent"
      RUID: 147173116_1545785791
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
    Fields: 
      DISABLE: 0
      EVENTNAME: "ONEXECUTE"
      FUNCTIONKEY: "147173118_1545785791 usrg_actEditParamsOnExecute"
      OBJECTKEY: "147173115_1545785791 gdc_dlgAttrUserDefinedUSR_GDMN_REFERENCES\\usrg_actEditParams"
      OBJECTNAME: "usrg_actEditParams"
      PARENTNAME: "gdc_dlgAttrUserDefinedUSR_GDMN_REFERENCES"
      EDITIONDATE: 2020-11-26T15:30:47+03:00
  - 
    Properties: 
      Class: "TgdcFunction"
      RUID: 147173306_1545785791
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
      HeadObject: 147173304_1545785791
    Fields: 
      NAME: "usrg_actDeleteParamsLineOnExecute"
      COMMENT: ~
      EVENT: "ONEXECUTE"
      FUNCTIONTYPE: ~
      GROUPNAME: ~
      INHERITEDRULE: 0
      LANGUAGE: "VBScript"
      LOCALNAME: ~
      MODIFYDATE: 2021-06-15T18:45:04+03:00
      MODULE: "EVENTS"
      MODULECODE: "148998334_1521203129 gdc_dlgAttrUserDefinedUSR_GDMN_REFERENCES"
      OBJECTNAME: "gdc_dlgAttrUserDefinedUSR_GDMN_REFERENCES"
      OWNERNAME: ~
      PUBLICFUNCTION: 1
      SHORTCUT: ~
      USEDEBUGINFO: 0
      EDITIONDATE: 2020-11-26T13:45:36+03:00
      DISPLAYSCRIPT: | 
        USRG_ACTDELETEPARAMSLINEONEXECUTE
        
      ENTEREDPARAMS: !!binary > 
        U0xQUlBSU1QGAAAAU0VOREVSBgAAAFNFTkRFUgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABGTlNU
        RkxQUg==
      SCRIPT: | 
        Option Explicit
        Sub usrg_actDeleteParamsLineOnExecute(ByVal Sender)
        '*** Данный код необходим для вызова встроенного обработчика ***
        '*** В случае его удаления возможно нарушение работы системы ***
          Call   Inherited(Sender, "OnExecute", Array(Sender))
        '*** конец кода поддержки встроенного обработчика            ***
          Sender.OwnerForm.FindComponent("usrg_gdcParamsLine").DeleteMultiple(Sender.OwnerForm.FindComponent("usrg_grParamsLine").SelectedRows)
        End Sub
        
  - 
    Properties: 
      Class: "TgdcDelphiObject"
      RUID: 147173303_1545785791
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
      HeadObject: 147173304_1545785791
    Fields: 
      PARENT: "148998334_1521203129 gdc_dlgAttrUserDefinedUSR_GDMN_REFERENCES"
      NAME: "usrg_actDeleteParamsLine"
      CLASSNAME: ""
      DESCRIPTION: ~
      MACROSGROUPKEY: ~
      OBJECTNAME: "usrg_actDeleteParamsLine"
      OBJECTTYPE: 0
      REPORTGROUPKEY: ~
      SUBTYPE: ""
      EDITIONDATE: 2020-11-26T13:45:36+03:00
  - 
    Properties: 
      Class: "TgdcEvent"
      RUID: 147173304_1545785791
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
    Fields: 
      DISABLE: 0
      EVENTNAME: "ONEXECUTE"
      FUNCTIONKEY: "147173306_1545785791 usrg_actDeleteParamsLineOnExecute"
      OBJECTKEY: "147173303_1545785791 gdc_dlgAttrUserDefinedUSR_GDMN_REFERENCES\\usrg_actDeleteParamsLine"
      OBJECTNAME: "usrg_actDeleteParamsLine"
      PARENTNAME: "gdc_dlgAttrUserDefinedUSR_GDMN_REFERENCES"
      EDITIONDATE: 2020-11-26T13:45:36+03:00
  - 
    Properties: 
      Class: "TgdcFunction"
      RUID: 147173122_1545785791
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
      HeadObject: 147173120_1545785791
    Fields: 
      NAME: "usrg_actDeleteParamsOnExecute"
      COMMENT: ~
      EVENT: "ONEXECUTE"
      FUNCTIONTYPE: ~
      GROUPNAME: ~
      INHERITEDRULE: 0
      LANGUAGE: "VBScript"
      LOCALNAME: ~
      MODIFYDATE: 2021-06-15T18:45:05+03:00
      MODULE: "EVENTS"
      MODULECODE: "148998334_1521203129 gdc_dlgAttrUserDefinedUSR_GDMN_REFERENCES"
      OBJECTNAME: "gdc_dlgAttrUserDefinedUSR_GDMN_REFERENCES"
      OWNERNAME: ~
      PUBLICFUNCTION: 1
      SHORTCUT: ~
      USEDEBUGINFO: 0
      EDITIONDATE: 2020-11-26T13:45:24+03:00
      DISPLAYSCRIPT: | 
        USRG_ACTDELETEPARAMSONEXECUTE
        
      ENTEREDPARAMS: !!binary > 
        U0xQUlBSU1QGAAAAU0VOREVSBgAAAFNFTkRFUgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABGTlNU
        RkxQUg==
      SCRIPT: | 
        Option Explicit
        Sub usrg_actDeleteParamsOnExecute(ByVal Sender)
        '*** Данный код необходим для вызова встроенного обработчика ***
        '*** В случае его удаления возможно нарушение работы системы ***
          Call   Inherited(Sender, "OnExecute", Array(Sender))
        '*** конец кода поддержки встроенного обработчика            ***
          Sender.OwnerForm.FindComponent("usrg_gdcParams").DeleteMultiple(Sender.OwnerForm.FindComponent("usrg_grParams").SelectedRows)
        End Sub
        
  - 
    Properties: 
      Class: "TgdcDelphiObject"
      RUID: 147173119_1545785791
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
      HeadObject: 147173120_1545785791
    Fields: 
      PARENT: "148998334_1521203129 gdc_dlgAttrUserDefinedUSR_GDMN_REFERENCES"
      NAME: "usrg_actDeleteParams"
      CLASSNAME: ""
      DESCRIPTION: ~
      MACROSGROUPKEY: ~
      OBJECTNAME: "usrg_actDeleteParams"
      OBJECTTYPE: 0
      REPORTGROUPKEY: ~
      SUBTYPE: ""
      EDITIONDATE: 2020-11-26T13:45:24+03:00
  - 
    Properties: 
      Class: "TgdcEvent"
      RUID: 147173120_1545785791
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
    Fields: 
      DISABLE: 0
      EVENTNAME: "ONEXECUTE"
      FUNCTIONKEY: "147173122_1545785791 usrg_actDeleteParamsOnExecute"
      OBJECTKEY: "147173119_1545785791 gdc_dlgAttrUserDefinedUSR_GDMN_REFERENCES\\usrg_actDeleteParams"
      OBJECTNAME: "usrg_actDeleteParams"
      PARENTNAME: "gdc_dlgAttrUserDefinedUSR_GDMN_REFERENCES"
      EDITIONDATE: 2020-11-26T13:45:24+03:00
  - 
    Properties: 
      Class: "TgdcFunction"
      RUID: 147173546_1545785791
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
      HeadObject: 147173544_1545785791
    Fields: 
      NAME: "usrg_actCreateParamsOnExecute"
      COMMENT: ~
      EVENT: "ONEXECUTE"
      FUNCTIONTYPE: ~
      GROUPNAME: ~
      INHERITEDRULE: 0
      LANGUAGE: "VBScript"
      LOCALNAME: ~
      MODIFYDATE: 2021-06-15T18:45:05+03:00
      MODULE: "EVENTS"
      MODULECODE: "148998334_1521203129 gdc_dlgAttrUserDefinedUSR_GDMN_REFERENCES"
      OBJECTNAME: "gdc_dlgAttrUserDefinedUSR_GDMN_REFERENCES"
      OWNERNAME: ~
      PUBLICFUNCTION: 1
      SHORTCUT: ~
      USEDEBUGINFO: 0
      EDITIONDATE: 2020-11-26T17:00:28+03:00
      DISPLAYSCRIPT: | 
        USRG_ACTCREATEPARAMSONEXECUTE
        
      ENTEREDPARAMS: !!binary > 
        U0xQUlBSU1QGAAAAU0VOREVSBgAAAFNFTkRFUgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABGTlNU
        RkxQUg==
      SCRIPT: | 
        Option Explicit
        Sub usrg_actCreateParamsOnExecute(ByVal Sender)
        '*** Данный код необходим для вызова встроенного обработчика ***
        '*** В случае его удаления возможно нарушение работы системы ***
          Call   Inherited(Sender, "OnExecute", Array(Sender))
        '*** конец кода поддержки встроенного обработчика            ***
        '  dim Creator, ibsql
        '  set Creator = New TCreator
        '  set ibsql = Creator.GetObject(nil, "TIBSQL", "")
        '  ibsql.Transaction = gdcBaseManager.ReadTransaction
        '  ibsql.SQL.Text = "SELECT USR$SQLQUERY FROM USR$GDMN_REFERENCES WHERE ID = :ID "
        '  ibsql.ParamByName("ID").AsInteger = Sender.OwnerForm.Owner.gdcObject.ID
        '  ibsql.ExecQuery
        End Sub
        
  - 
    Properties: 
      Class: "TgdcDelphiObject"
      RUID: 147173543_1545785791
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
      HeadObject: 147173544_1545785791
    Fields: 
      PARENT: "148998334_1521203129 gdc_dlgAttrUserDefinedUSR_GDMN_REFERENCES"
      NAME: "usrg_actCreateParams"
      CLASSNAME: ""
      DESCRIPTION: ~
      MACROSGROUPKEY: ~
      OBJECTNAME: "usrg_actCreateParams"
      OBJECTTYPE: 0
      REPORTGROUPKEY: ~
      SUBTYPE: ""
      EDITIONDATE: 2020-11-26T15:29:05+03:00
  - 
    Properties: 
      Class: "TgdcEvent"
      RUID: 147173544_1545785791
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
    Fields: 
      DISABLE: 0
      EVENTNAME: "ONEXECUTE"
      FUNCTIONKEY: "147173546_1545785791 usrg_actCreateParamsOnExecute"
      OBJECTKEY: "147173543_1545785791 gdc_dlgAttrUserDefinedUSR_GDMN_REFERENCES\\usrg_actCreateParams"
      OBJECTNAME: "usrg_actCreateParams"
      PARENTNAME: "gdc_dlgAttrUserDefinedUSR_GDMN_REFERENCES"
      EDITIONDATE: 2020-11-26T17:00:28+03:00
  - 
    Properties: 
      Class: "TgdcFunction"
      RUID: 147173298_1545785791
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
      HeadObject: 147173124_1545785791
    Fields: 
      NAME: "usrg_actAddParamsLineOnExecute"
      COMMENT: ~
      EVENT: "ONEXECUTE"
      FUNCTIONTYPE: ~
      GROUPNAME: ~
      INHERITEDRULE: 0
      LANGUAGE: "VBScript"
      LOCALNAME: ~
      MODIFYDATE: 2021-06-15T18:45:05+03:00
      MODULE: "EVENTS"
      MODULECODE: "148998334_1521203129 gdc_dlgAttrUserDefinedUSR_GDMN_REFERENCES"
      OBJECTNAME: "gdc_dlgAttrUserDefinedUSR_GDMN_REFERENCES"
      OWNERNAME: ~
      PUBLICFUNCTION: 1
      SHORTCUT: ~
      USEDEBUGINFO: 0
      EDITIONDATE: 2020-11-26T13:45:26+03:00
      DISPLAYSCRIPT: | 
        USRG_ACTADDPARAMSLINEONEXECUTE
        
      ENTEREDPARAMS: !!binary > 
        U0xQUlBSU1QGAAAAU0VOREVSBgAAAFNFTkRFUgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABGTlNU
        RkxQUg==
      SCRIPT: | 
        Option Explicit
        Sub usrg_actAddParamsLineOnExecute(ByVal Sender)
        '*** Данный код необходим для вызова встроенного обработчика ***
        '*** В случае его удаления возможно нарушение работы системы ***
          Call   Inherited(Sender, "OnExecute", Array(Sender))
        '*** конец кода поддержки встроенного обработчика            ***
          call Sender.OwnerForm.GetComponent("usrg_gdcParamsLine").CreateDialog("")
        End Sub
        
  - 
    Properties: 
      Class: "TgdcDelphiObject"
      RUID: 147173123_1545785791
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
      HeadObject: 147173124_1545785791
    Fields: 
      PARENT: "148998334_1521203129 gdc_dlgAttrUserDefinedUSR_GDMN_REFERENCES"
      NAME: "usrg_actAddParamsLine"
      CLASSNAME: ""
      DESCRIPTION: ~
      MACROSGROUPKEY: ~
      OBJECTNAME: "usrg_actAddParamsLine"
      OBJECTTYPE: 0
      REPORTGROUPKEY: ~
      SUBTYPE: ""
      EDITIONDATE: 2020-11-26T13:45:26+03:00
  - 
    Properties: 
      Class: "TgdcEvent"
      RUID: 147173124_1545785791
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
    Fields: 
      DISABLE: 0
      EVENTNAME: "ONEXECUTE"
      FUNCTIONKEY: "147173298_1545785791 usrg_actAddParamsLineOnExecute"
      OBJECTKEY: "147173123_1545785791 gdc_dlgAttrUserDefinedUSR_GDMN_REFERENCES\\usrg_actAddParamsLine"
      OBJECTNAME: "usrg_actAddParamsLine"
      PARENTNAME: "gdc_dlgAttrUserDefinedUSR_GDMN_REFERENCES"
      EDITIONDATE: 2020-11-26T13:45:26+03:00
  - 
    Properties: 
      Class: "TgdcFunction"
      RUID: 147173114_1545785791
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
      HeadObject: 147173112_1545785791
    Fields: 
      NAME: "usrg_actAddParamsOnExecute"
      COMMENT: ~
      EVENT: "ONEXECUTE"
      FUNCTIONTYPE: ~
      GROUPNAME: ~
      INHERITEDRULE: 0
      LANGUAGE: "VBScript"
      LOCALNAME: ~
      MODIFYDATE: 2021-06-15T18:45:05+03:00
      MODULE: "EVENTS"
      MODULECODE: "148998334_1521203129 gdc_dlgAttrUserDefinedUSR_GDMN_REFERENCES"
      OBJECTNAME: "gdc_dlgAttrUserDefinedUSR_GDMN_REFERENCES"
      OWNERNAME: ~
      PUBLICFUNCTION: 1
      SHORTCUT: ~
      USEDEBUGINFO: 0
      EDITIONDATE: 2020-11-26T14:41:59+03:00
      DISPLAYSCRIPT: | 
        USRG_ACTADDPARAMSONEXECUTE
        
      ENTEREDPARAMS: !!binary > 
        U0xQUlBSU1QGAAAAU0VOREVSBgAAAFNFTkRFUgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABGTlNU
        RkxQUg==
      SCRIPT: | 
        Option Explicit
        Sub usrg_actAddParamsOnExecute(ByVal Sender)
        '*** Данный код необходим для вызова встроенного обработчика ***
        '*** В случае его удаления возможно нарушение работы системы ***
          Call   Inherited(Sender, "OnExecute", Array(Sender))
        '*** конец кода поддержки встроенного обработчика            ***
          dim gdcParams, systemKey
          set gdcParams = Sender.OwnerForm.GetComponent("usrg_gdcParams")
          systemKey = Sender.OwnerForm.gdcObject.FieldByName("USR$SYSTEMKEY").AsInteger
          if systemKey > 0  then
            gdcParams.Insert
            gdcParams.FieldByName("USR$SYSTEMKEY").AsInteger = systemKey
            call gdcParams.CreateDialog("")
          end if
        End Sub
        
  - 
    Properties: 
      Class: "TgdcDelphiObject"
      RUID: 147173111_1545785791
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
      HeadObject: 147173112_1545785791
    Fields: 
      PARENT: "148998334_1521203129 gdc_dlgAttrUserDefinedUSR_GDMN_REFERENCES"
      NAME: "usrg_actAddParams"
      CLASSNAME: ""
      DESCRIPTION: ~
      MACROSGROUPKEY: ~
      OBJECTNAME: "usrg_actAddParams"
      OBJECTTYPE: 0
      REPORTGROUPKEY: ~
      SUBTYPE: ""
      EDITIONDATE: 2020-11-26T13:45:04+03:00
  - 
    Properties: 
      Class: "TgdcEvent"
      RUID: 147173112_1545785791
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
    Fields: 
      DISABLE: 0
      EVENTNAME: "ONEXECUTE"
      FUNCTIONKEY: "147173114_1545785791 usrg_actAddParamsOnExecute"
      OBJECTKEY: "147173111_1545785791 gdc_dlgAttrUserDefinedUSR_GDMN_REFERENCES\\usrg_actAddParams"
      OBJECTNAME: "usrg_actAddParams"
      PARENTNAME: "gdc_dlgAttrUserDefinedUSR_GDMN_REFERENCES"
      EDITIONDATE: 2020-11-26T14:41:59+03:00
  - 
    Properties: 
      Class: "TgdcFunction"
      RUID: 147173203_1545785791
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
      HeadObject: 147173201_1545785791
    Fields: 
      NAME: "gdc_dlgAttrUserDefinedUSR_GDMN_PARAMSLINEOnSyncField"
      COMMENT: ~
      EVENT: "ONSYNCFIELD"
      FUNCTIONTYPE: ~
      GROUPNAME: ~
      INHERITEDRULE: 0
      LANGUAGE: "VBScript"
      LOCALNAME: ~
      MODIFYDATE: 2021-06-15T18:45:05+03:00
      MODULE: "EVENTS"
      MODULECODE: "147171362_1545785791 gdc_dlgAttrUserDefinedUSR_GDMN_PARAMSLINE"
      OBJECTNAME: "gdc_dlgAttrUserDefinedUSR_GDMN_PARAMSLINE"
      OWNERNAME: ~
      PUBLICFUNCTION: 1
      SHORTCUT: ~
      USEDEBUGINFO: 0
      EDITIONDATE: 2020-11-26T09:42:06+03:00
      DISPLAYSCRIPT: | 
        GDC_DLGATTRUSERDEFINEDUSR_GDMN_PARAMSLINEONSYNCFIELD
        
      ENTEREDPARAMS: !!binary > 
        U0xQUlBSU1QGAAAAU0VOREVSBgAAAFNFTkRFUgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABGTlNU
        UFJTVAUAAABGSUVMRAUAAABGSUVMRAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABGTlNUUFJTVAgA
        AABTWU5DTElTVAgAAABTWU5DTElTVAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABGTlNURkxQUg==
      SCRIPT: | 
        Option Explicit
        Sub gdc_dlgAttrUserDefinedUSR_GDMN_PARAMSLINEOnSyncField(ByVal Sender, ByVal Field, ByVal SyncList)
        '*** Данный код необходим для вызова встроенного обработчика ***
        '*** В случае его удаления возможно нарушение работы системы ***
          Call   Inherited(Sender, "OnSyncField", Array(Sender, Field, SyncList))
        '*** конец кода поддержки встроенного обработчика            ***
          if Field.FieldName = "USR$CLASSNAME" then
            dim cmRelationName
            set cmRelationName = Sender.GetComponent("usrg_cmRelationName")
            cmRelationName.Text = ""
            if Field.AsString <> "" then
              cmRelationName.Condition = "UPPER(CLASSNAME) = UPPER('" & Field.AsString & "')"
            else
              cmRelationName.Condition = ""
            end if
          end if
        End Sub
        
  - 
    Properties: 
      Class: "TgdcEvent"
      RUID: 147173201_1545785791
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
    Fields: 
      DISABLE: 0
      EVENTNAME: "ONSYNCFIELD"
      FUNCTIONKEY: "147173203_1545785791 gdc_dlgAttrUserDefinedUSR_GDMN_PARAMSLINEOnSyncField"
      OBJECTKEY: "147171362_1545785791 gdc_dlgAttrUserDefinedUSR_GDMN_PARAMSLINE"
      OBJECTNAME: "gdc_dlgAttrUserDefinedUSR_GDMN_PARAMSLINE"
      PARENTNAME: ~
      EDITIONDATE: 2020-11-26T09:42:06+03:00
  - 
    Properties: 
      Class: "TgdcFunction"
      RUID: 147173157_1545785791
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
      HeadObject: 147173155_1545785791
    Fields: 
      NAME: "usrg_actSelectValueOnExecute"
      COMMENT: ~
      EVENT: "ONEXECUTE"
      FUNCTIONTYPE: ~
      GROUPNAME: ~
      INHERITEDRULE: 0
      LANGUAGE: "VBScript"
      LOCALNAME: ~
      MODIFYDATE: 2021-06-15T18:45:05+03:00
      MODULE: "EVENTS"
      MODULECODE: "147171362_1545785791 gdc_dlgAttrUserDefinedUSR_GDMN_PARAMSLINE"
      OBJECTNAME: "gdc_dlgAttrUserDefinedUSR_GDMN_PARAMSLINE"
      OWNERNAME: ~
      PUBLICFUNCTION: 1
      SHORTCUT: ~
      USEDEBUGINFO: 0
      EDITIONDATE: 2020-11-26T11:12:25+03:00
      DISPLAYSCRIPT: | 
        USRG_ACTSELECTVALUEONEXECUTE
        
      ENTEREDPARAMS: !!binary > 
        U0xQUlBSU1QGAAAAU0VOREVSBgAAAFNFTkRFUgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABGTlNU
        RkxQUg==
      SCRIPT: | 
        Option Explicit
        Sub usrg_actSelectValueOnExecute(ByVal Sender)
        '*** Данный код необходим для вызова встроенного обработчика ***
        '*** В случае его удаления возможно нарушение работы системы ***
          Call   Inherited(Sender, "OnExecute", Array(Sender))
        '*** конец кода поддержки встроенного обработчика            ***
          dim relationName, className, gdcObject
          set gdcObject = Sender.OwnerForm.gdcObject
          className = Trim(gdcObject.FieldByName("USR$CLASSNAME").AsString)
          relationName = Trim(gdcObject.FieldByName("USR$RELATIONNAME").AsString)
          
          if (className = "TgdcAttrUserDefined" or className = "TgdcAttrUserDefinedLBRBTree") then
            if relationName = "" then
              call Application.MessageBox("Выберите подтип!", "Внимание!", vbInformation + vbOkOnly + vbApplicationModal)
              exit sub
            end if
          else
            gdcObject.FieldByName("USR$RELATIONNAME").AsString = ""
            relationName = ""
          end if
        
          if className = "" then
            call Application.MessageBox("Выберите класс!", "Внимание!", vbInformation + vbOkOnly + vbApplicationModal)
            exit sub
          end if
        
          dim gdcSel, Creator
          set Creator = new TCreator
          set gdcSel = Creator.GetObject(nil, className, "")
          gdcSel.SubType = relationName
          gdcSel.SubSet = "All"
          if gdcSel.ChooseItemsSelf(false, "", "") then
            gdcObject.FieldByName("USR$VALUE").AsString = gdcObject.FieldByName("USR$VALUE").AsString & " " & gdcSel.SelectedID.CommaText
          end if
        
        End Sub
        
  - 
    Properties: 
      Class: "TgdcDelphiObject"
      RUID: 147173154_1545785791
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
      HeadObject: 147173155_1545785791
    Fields: 
      PARENT: "147171362_1545785791 gdc_dlgAttrUserDefinedUSR_GDMN_PARAMSLINE"
      NAME: "usrg_actSelectValue"
      CLASSNAME: ""
      DESCRIPTION: ~
      MACROSGROUPKEY: ~
      OBJECTNAME: "usrg_actSelectValue"
      OBJECTTYPE: 0
      REPORTGROUPKEY: ~
      SUBTYPE: ""
      EDITIONDATE: 2020-11-25T17:18:36+03:00
  - 
    Properties: 
      Class: "TgdcEvent"
      RUID: 147173155_1545785791
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
    Fields: 
      DISABLE: 0
      EVENTNAME: "ONEXECUTE"
      FUNCTIONKEY: "147173157_1545785791 usrg_actSelectValueOnExecute"
      OBJECTKEY: "147173154_1545785791 gdc_dlgAttrUserDefinedUSR_GDMN_PARAMSLINE\\usrg_actSelectValue"
      OBJECTNAME: "usrg_actSelectValue"
      PARENTNAME: "gdc_dlgAttrUserDefinedUSR_GDMN_PARAMSLINE"
      EDITIONDATE: 2020-11-26T11:12:25+03:00
  - 
    Properties: 
      Class: "TgdcFunction"
      RUID: 1210388423_1548332366
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
    Fields: 
      NAME: "GetRefDataFun"
      COMMENT: ~
      EVENT: ~
      FUNCTIONTYPE: ~
      GROUPNAME: ~
      INHERITEDRULE: 0
      LANGUAGE: "VBScript"
      LOCALNAME: ~
      MODIFYDATE: 2021-06-15T18:45:05+03:00
      MODULE: "UNKNOWN"
      MODULECODE: "1010001_17 APPLICATION"
      OBJECTNAME: "APPLICATION"
      OWNERNAME: ~
      PUBLICFUNCTION: 1
      SHORTCUT: ~
      USEDEBUGINFO: ~
      EDITIONDATE: 2021-02-16T16:04:41+03:00
      DISPLAYSCRIPT: | 
        GETREFDATAFUN
        CUR_REPLACE12
        FORMATDATE12
        JSONSTRING12
        
      ENTEREDPARAMS: !!binary > 
        U0xQUlBSU1QKAAAAQ09OVEFDVEtFWQoAAABDT05UQUNUS0VZAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAEZOU1RQUlNUCAAAAENPTlNVTUVSCAAAAENPTlNVTUVSAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAEZOU1RQUlNUCwAAAENPTVBBTllOQU1FCwAAAENPTVBBTllOQU1FAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAEZOU1RQUlNUDQAAAEFQUFNZU1RFTU5BTUUNAAAAQVBQU1lTVEVNTkFNRQAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAABGTlNUUFJTVAwAAABBUFBTWVNURU1LRVkMAAAAQVBQU1lTVEVN
        S0VZAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEZOU1RQUlNUCAAAAEhBU0VSUk9SCAAAAEhBU0VS
        Uk9SAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEZOU1RQUlNUBgAAAEFFUlJPUgYAAABBRVJST1IA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAARk5TVEZMUFI=
      SCRIPT: | 
        Option Explicit
        Function GetRefDataFun(contactkey, consumer, CompanyName, AppSystemName, AppSystemkey, byRef hasError, byRef AError)
            GetRefDataFun = false
            hasError = false
            AError = ""
            dim Json, Creator
            set Creator = new TCreator
            set Json = Creator.GetObject(nil, "TStringList", "")
            'Подготавливаем json файл, в котором будет содержаться массив справочников
            dim oRoot
            Json.Text =  _
              "{""head"":{" & _
              """id"":""" & contactkey & ""","  & _
              """companyId"":""" & CompanyName & """," & _
              """consumer"":""" & consumer & """," & _
              """producer"":""gdmn"","  & _
              """sedingTime"":""" & formatDate12(Date()) & ""","  & _
              """appSystem"":""" & AppSystemName & """}, " & _
              """body"":{" & _
              """type"":""data""," & _
              """payload"":["
        
            dim qSelRefs
            dim i, oData, isFirst, refType, arrFields, arr
            dim arr2, deptkey, remains
        
            'Запрос выбора данных по каждому справочнику из таблицы Настройки справочников
            set qSelRefs = Creator.GetObject(nil, "TIBSQL", "")
            qSelRefs.Transaction = gdcBaseManager.ReadTransaction
            qSelRefs.SQL.Text = _
              "SELECT " & _
              "  R.ID, " & _
              "  R.USR$SQLQUERY, " & _
              "  R.USR$LIST_JSON, " & _
              "  R.USR$NAME, " & _
              "  R.USR$MOBILENAME " & _
              "FROM " & _
              "  USR$GDMN_REFERENCES R " & _
              "WHERE " & _
              "  R.USR$SYSTEMKEY = :SYSTEMKEY "
            qSelRefs.ParamByName("systemkey").AsInteger = AppSystemkey
            qSelRefs.ExecQuery
        
            dim qSelParams
            set qSelParams = Creator.GetObject(nil, "TIBSQL", "")
            qSelParams.Transaction = gdcBaseManager.ReadTransaction
            qSelParams.SQL.Text = _
              "SELECT " & _
              "  PLINE.USR$PARAMCODE, PLINE.USR$VALUE " & _
              "FROM " & _
              "  USR$GDMN_USERS u " & _
              "  LEFT JOIN USR$GDMN_PARAMS P ON P.ID = U.USR$PARAMSKEY " & _
              "  LEFT JOIN USR$GDMN_PARAMSLINE PLINE ON PLINE.USR$MASTERKEY = P.ID " & _
              "WHERE " & _
              "  U.USR$MOBILEID = :CONSUMER " & _
              "  AND P.USR$SYSTEMKEY = :SYSTEMKEY "
            qSelParams.ParamByName("systemkey").AsInteger = AppSystemkey
            qSelParams.ParamByName("consumer").AsString = consumer
        
            dim qSel, sqlQuery
            set qSel = Creator.GetObject(nil, "TIBSQL", "")
            qSel.Transaction = gdcBaseManager.ReadTransaction
        
            'Цикл по справочникам
            while not qSelRefs.eof
              'Тип справочника
              refType = qSelRefs.FieldByName("USR$MOBILENAME").AsString
              'Список полей справочника
              arrFields = Split(qSelRefs.FieldByName("USR$LIST_JSON").AsVariant, ",")
        
              sqlQuery = qSelRefs.FieldByName("USR$SQLQUERY").AsString
        
              qSelParams.Close
              qSelParams.ExecQuery
        
              while not qSelParams.eof
                sqlQuery = Replace(sqlQuery, "%" & UCASE(qSelParams.FieldByName("USR$PARAMCODE").AsString) & "%", " " & " AND " & qSelParams.FieldByName("USR$VALUE").AsString)
                qSelParams.Next
              wend
        
              'Вытягиваем данные из справочника
              qSel.Close
              qSel.SQL.Text = sqlQuery
              if InStr(LCase(sqlQuery), ":contactkey") > 0 then
                qSel.ParamByName("contactkey").AsInteger = contactkey
              end if
              on error resume next
              qSel.ExecQuery
              if err.Number <> 0 then
                 hasError = true
                 AError = "Ошибка в запросе! " & err.Description
                exit function
              end if
              on error goto 0
        
              Json.Add ( _
                "{""id"":""" & qSelRefs.FieldByName("id").AsString & """," & _
                """name"":""" & qSelRefs.FieldByName("USR$NAME").AsString & """," & _
                """type"":""" & refType & """," & """data"":[")
        
              deptkey = ""
              remains = false
              isFirst = true
        
              while not qSel.eof
                if refType = "remains" then
                  'Если остатки, то выгружаем в структуру в разрезе подразделений и даты
                  'data: [ {contact: 123, date: '2020.10.10', data: [{goodId: 123, price: 1.55, q: 5}, {goodId: 567, price: 1.66, q: 6}]} ]
                  remains = true
                  oData = "{"
                  for i = LBound(arrFields) to UBound(arrFields)
                    arr = Split(trim(arrFields(i)), "=")
        
                    if IsNumeric(qSel.FieldByName(trim(arr(1))).AsString) then
                      arr2 = trim(qSel.FieldByName(trim(arr(1))).AsString)
                      arr2 = JSonString12(cur_replace12(arr2))
                    else
                      arr2 = JSonString12(trim(qSel.FieldByName(trim(arr(1))).AsString))
                    end if
        
                    if arr(1) = "DEPTKEY" then
                      if deptkey <> qSel.FieldByName(trim(arr(1))).AsString then
                        if not isFirst then
                          oData = "]}," & oData
                        end if
                        oData = oData & """" &  trim(arr(0)) & """:" & arr2  & _
                        ",""date"":""" & formatDate12(Date()) & """" & _
                        ",""data"":[{"
                        deptkey = qSel.FieldByName(trim(arr(1))).AsString
                      end if
                    else
                      oData = oData & """" &  trim(arr(0)) & """:" & arr2
                      if (i <> UBound(arrFields)) then
                        oData = oData & ","
                      end if
                    end if
                  next
                else
                  'Справочники кроме Остатков
                  oData = "{"
                  for i = LBound(arrFields) to UBound(arrFields)
                    arr = Split(trim(arrFields(i)), "=")
                    if IsNumeric(qSel.FieldByName(trim(arr(1))).AsString) then
                      arr2 = trim(qSel.FieldByName(trim(arr(1))).AsString)
                      arr2 = JSonString12(cur_replace12(arr2))
                    else
                      arr2 = JSonString12(trim(qSel.FieldByName(trim(arr(1))).AsString))
                    end if
                    oData = oData + """" &  trim(arr(0)) & """:" & arr2
                    if (i <> UBound(arrFields)) then
                      oData = oData + ","
                    end if
                  next
                end if
                qSel.Next
                oData = oData & "}"
        
                if not qSel.eof then
                  if remains then
                    if deptkey = qSel.FieldByName("deptkey").AsString then
                      oData = oData & ","
                    end if
                  else
                    oData = oData & ","
                  end if
                end if
        
                Json.Add(oData)
                isFirst = false
              wend
        
              if Json.Count > 0 then Json.Strings(Json.Count - 1) = Json.Strings(Json.Count - 1) & "]}"
        
              if remains then
                if Json.Count > 0 then Json.Strings(Json.Count - 1) = Json.Strings(Json.Count - 1) & "]}"
                remains = false
              end if
        
              qSelRefs.Next
              if not qSelRefs.eof then
                if Json.Count > 0 then Json.Strings(Json.Count - 1) = Json.Strings(Json.Count - 1) & ","
              end if
            wend
            if Json.Count > 0 then Json.Strings(Json.Count - 1) = Json.Strings(Json.Count - 1) & "]}," & _
              """id"":""" & contactkey & """}"
            GetRefDataFun = Json.Text
            Json.Clear
            if Assigned(Json) then
              Creator.DestroyObject(Json)
            end if
          end function
          
          function cur_replace12(num)
            cur_replace12 =  Replace(num, ",", ".")
          end function
        
          function formatDate12(pDate)
            formatDate12 = Year(pDate) & "-" & Right("0" & Month(pDate), 2) & "-" & Right("0" & Day(pDate), 2)
          end function
        
          Function JSonString12(Value)
            dim i, c, Res
            Res = """"
        
            dim b, f, r, n, t
            b = ChrW(8)
            f = vbFormFeed
            r = vbCr
            n = vbLf
            t = vbTab
            For i = 1 To Len(Value)
              c = Mid(Value, i, 1)
              Select Case c
                Case """" Res = Res & "\"""
                Case "\"  Res = Res & "\\"
                Case "/"  Res = Res & "/"
                Case b    Res = Res & "\b"
                Case f    Res = Res & "\f"
                Case r    Res = Res & "\r"
                Case n    Res = Res & "\n"
                Case t    Res = Res & "\t"
                Case Else
                  If AscW(c) >= 0 And AscW(c) <= 31 Then
                    c = Right("0" & Hex(AscW(c)), 2)
                    Res = Res & "\u00" & c
                  Else
                    Res = Res & c
                  End If
              End Select
            Next
            JSonString12 = Res & """"
          End Function
        
  - 
    Properties: 
      Class: "TgdcFunction"
      RUID: 147023736_1677413867
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
    Fields: 
      NAME: "gdmn_const"
      COMMENT: ~
      EVENT: ~
      FUNCTIONTYPE: ~
      GROUPNAME: ~
      INHERITEDRULE: 0
      LANGUAGE: "VBScript"
      LOCALNAME: ~
      MODIFYDATE: 2021-06-15T18:45:05+03:00
      MODULE: "CONST"
      MODULECODE: "1010001_17 APPLICATION"
      OBJECTNAME: "APPLICATION"
      OWNERNAME: ~
      PUBLICFUNCTION: 1
      SHORTCUT: ~
      USEDEBUGINFO: 0
      EDITIONDATE: 2021-06-10T15:19:09+03:00
      DISPLAYSCRIPT: ~
      ENTEREDPARAMS: ~
      SCRIPT: | 
        Option Explicit
        'Константы и переменные
          public const SQL_TEXT = 452
          public const SQL_VARYING = 448
          public const SQL_SHORT = 500
          public const SQL_LONG = 496
          public const SQL_FLOAT = 482
          public const SQL_DOUBLE = 480
          public const SQL_TIMESTAMP = 510
          public const SQL_BLOB = 520
          public const SQL_TYPE_TIME = 560
          public const SQL_TYPE_DATE = 570
          public const SQL_INT64 = 580
          public const SQL_BOOLEAN = 32764
          public const SQL_NULL = 32766
        
  - 
    Properties: 
      Class: "TgdcFunction"
      RUID: 147023322_1677413867
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
      HeadObject: 147023320_1677413867
    Fields: 
      NAME: "usrg_actEditFieldOnExecute"
      COMMENT: ~
      EVENT: "ONEXECUTE"
      FUNCTIONTYPE: ~
      GROUPNAME: ~
      INHERITEDRULE: 0
      LANGUAGE: "VBScript"
      LOCALNAME: ~
      MODIFYDATE: 2021-06-15T18:45:05+03:00
      MODULE: "EVENTS"
      MODULECODE: "148998334_1521203129 gdc_dlgAttrUserDefinedUSR_GDMN_REFERENCES"
      OBJECTNAME: "gdc_dlgAttrUserDefinedUSR_GDMN_REFERENCES"
      OWNERNAME: ~
      PUBLICFUNCTION: 1
      SHORTCUT: ~
      USEDEBUGINFO: 0
      EDITIONDATE: 2021-06-09T18:13:46+03:00
      DISPLAYSCRIPT: | 
        USRG_ACTEDITFIELDONEXECUTE
        
      ENTEREDPARAMS: !!binary > 
        U0xQUlBSU1QGAAAAU0VOREVSBgAAAFNFTkRFUgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABGTlNU
        RkxQUg==
      SCRIPT: | 
        Option Explicit
        Sub usrg_actEditFieldOnExecute(ByVal Sender)
        '*** Данный код необходим для вызова встроенного обработчика ***
        '*** В случае его удаления возможно нарушение работы системы ***
          Call   Inherited(Sender, "OnExecute", Array(Sender))
        '*** конец кода поддержки встроенного обработчика            ***
        call Sender.OwnerForm.GetComponent("usrg_gdcQueryFields").EditDialog("")
        End Sub
        
  - 
    Properties: 
      Class: "TgdcDelphiObject"
      RUID: 147023319_1677413867
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
      HeadObject: 147023320_1677413867
    Fields: 
      PARENT: "148998334_1521203129 gdc_dlgAttrUserDefinedUSR_GDMN_REFERENCES"
      NAME: "usrg_actEditField"
      CLASSNAME: ""
      DESCRIPTION: ~
      MACROSGROUPKEY: ~
      OBJECTNAME: "usrg_actEditField"
      OBJECTTYPE: 0
      REPORTGROUPKEY: ~
      SUBTYPE: ""
      EDITIONDATE: 2021-06-09T18:13:46+03:00
  - 
    Properties: 
      Class: "TgdcEvent"
      RUID: 147023320_1677413867
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
    Fields: 
      DISABLE: 0
      EVENTNAME: "ONEXECUTE"
      FUNCTIONKEY: "147023322_1677413867 usrg_actEditFieldOnExecute"
      OBJECTKEY: "147023319_1677413867 gdc_dlgAttrUserDefinedUSR_GDMN_REFERENCES\\usrg_actEditField"
      OBJECTNAME: "usrg_actEditField"
      PARENTNAME: "gdc_dlgAttrUserDefinedUSR_GDMN_REFERENCES"
      EDITIONDATE: 2021-06-09T18:13:46+03:00
  - 
    Properties: 
      Class: "TgdcFunction"
      RUID: 147023326_1677413867
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
      HeadObject: 147023324_1677413867
    Fields: 
      NAME: "usrg_ActDeleteFieldOnExecute"
      COMMENT: ~
      EVENT: "ONEXECUTE"
      FUNCTIONTYPE: ~
      GROUPNAME: ~
      INHERITEDRULE: 0
      LANGUAGE: "VBScript"
      LOCALNAME: ~
      MODIFYDATE: 2021-06-15T18:45:05+03:00
      MODULE: "EVENTS"
      MODULECODE: "148998334_1521203129 gdc_dlgAttrUserDefinedUSR_GDMN_REFERENCES"
      OBJECTNAME: "gdc_dlgAttrUserDefinedUSR_GDMN_REFERENCES"
      OWNERNAME: ~
      PUBLICFUNCTION: 1
      SHORTCUT: ~
      USEDEBUGINFO: 0
      EDITIONDATE: 2021-06-09T18:50:53+03:00
      DISPLAYSCRIPT: | 
        USRG_ACTDELETEFIELDONEXECUTE
        
      ENTEREDPARAMS: !!binary > 
        U0xQUlBSU1QGAAAAU0VOREVSBgAAAFNFTkRFUgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABGTlNU
        RkxQUg==
      SCRIPT: | 
        Option Explicit
        Sub usrg_ActDeleteFieldOnExecute(ByVal Sender)
        '*** Данный код необходим для вызова встроенного обработчика ***
        '*** В случае его удаления возможно нарушение работы системы ***
          Call   Inherited(Sender, "OnExecute", Array(Sender))
        '*** конец кода поддержки встроенного обработчика            ***
          Sender.OwnerForm.FindComponent("usrg_gdcQueryFields").DeleteMultiple(Sender.OwnerForm.FindComponent("usrg_grQueryFields").SelectedRows)
        End Sub
        
  - 
    Properties: 
      Class: "TgdcDelphiObject"
      RUID: 147023323_1677413867
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
      HeadObject: 147023324_1677413867
    Fields: 
      PARENT: "148998334_1521203129 gdc_dlgAttrUserDefinedUSR_GDMN_REFERENCES"
      NAME: "usrg_ActDeleteField"
      CLASSNAME: ""
      DESCRIPTION: ~
      MACROSGROUPKEY: ~
      OBJECTNAME: "usrg_ActDeleteField"
      OBJECTTYPE: 0
      REPORTGROUPKEY: ~
      SUBTYPE: ""
      EDITIONDATE: 2021-06-09T18:13:50+03:00
  - 
    Properties: 
      Class: "TgdcEvent"
      RUID: 147023324_1677413867
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
    Fields: 
      DISABLE: 0
      EVENTNAME: "ONEXECUTE"
      FUNCTIONKEY: "147023326_1677413867 usrg_ActDeleteFieldOnExecute"
      OBJECTKEY: "147023323_1677413867 gdc_dlgAttrUserDefinedUSR_GDMN_REFERENCES\\usrg_ActDeleteField"
      OBJECTNAME: "usrg_ActDeleteField"
      PARENTNAME: "gdc_dlgAttrUserDefinedUSR_GDMN_REFERENCES"
      EDITIONDATE: 2021-06-09T18:50:53+03:00
  - 
    Properties: 
      Class: "TgdcFunction"
      RUID: 147023443_1677413867
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
      HeadObject: 147023441_1677413867
    Fields: 
      NAME: "usrg_actAddFromQueryOnExecute"
      COMMENT: ~
      EVENT: "ONEXECUTE"
      FUNCTIONTYPE: ~
      GROUPNAME: ~
      INHERITEDRULE: 0
      LANGUAGE: "VBScript"
      LOCALNAME: ~
      MODIFYDATE: 2021-06-15T18:45:05+03:00
      MODULE: "EVENTS"
      MODULECODE: "148998334_1521203129 gdc_dlgAttrUserDefinedUSR_GDMN_REFERENCES"
      OBJECTNAME: "gdc_dlgAttrUserDefinedUSR_GDMN_REFERENCES"
      OWNERNAME: ~
      PUBLICFUNCTION: 1
      SHORTCUT: ~
      USEDEBUGINFO: 0
      EDITIONDATE: 2021-08-26T18:47:09+03:00
      DISPLAYSCRIPT: | 
        USRG_ACTADDFROMQUERYONEXECUTE
        
      ENTEREDPARAMS: !!binary > 
        U0xQUlBSU1QGAAAAU0VOREVSBgAAAFNFTkRFUgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABGTlNU
        RkxQUg==
      SCRIPT: | 
        Option Explicit
        Sub usrg_actAddFromQueryOnExecute(ByVal Sender)
        '*** Данный код необходим для вызова встроенного обработчика ***
        '*** В случае его удаления возможно нарушение работы системы ***
          Call   Inherited(Sender, "OnExecute", Array(Sender))
        '*** конец кода поддержки встроенного обработчика            ***
           'Запрос выбора данных по каждому справочнику из таблицы Настройки справочников
          dim Creator, ibsql, qSelRefs, refKey, sqlQuery, systemkey, _
            contactkey, gdcQueryFields, i
          set Creator = new TCreator
          set gdcQueryFields = Sender.OwnerForm.GetComponent("usrg_gdcQueryFields")
          systemKey = Sender.OwnerForm.gdcObject.FieldByName("USR$SYSTEMKEY").AsInteger
          refKey = Sender.OwnerForm.gdcObject.FieldByName("id").AsInteger
          set ibsql = Creator.GetObject(nil, "TIBSQL", "")
          ibsql.Transaction = gdcBaseManager.ReadTransaction
          ibsql.Close
          ibsql.SQL.Text = _
             "select first 1 " & _
             "  u.USR$CONTACTKEY " & _
             "from  USR$GDMN_USERS u " & _
             "where u.USR$SYSTEMKEY = :systemkey "
          ibsql.ParamByName("systemkey").AsInteger = systemkey
          ibsql.ExecQuery
          contactkey = ibsql.FieldByName("USR$CONTACTKEY").AsInteger
          set qSelRefs = Creator.GetObject(nil, "TIBSQL", "")
          qSelRefs.Transaction = gdcBaseManager.ReadTransaction
          qSelRefs.SQL.Text = _
            "SELECT " & _
            "  R.USR$SQLQUERY " & _
            "FROM " & _
            "  USR$GDMN_REFERENCES R " & _
            "WHERE " & _
            "  R.id = :id "
          qSelRefs.ParamByName("id").AsInteger = refKey
          qSelRefs.ExecQuery
          sqlQuery = qSelRefs.FieldByName("USR$SQLQUERY").AsString
          dim qSelParams
          set qSelParams = Creator.GetObject(nil, "TIBSQL", "")
          qSelParams.Transaction = gdcBaseManager.ReadTransaction
          qSelParams.SQL.Text = _
            "SELECT  DISTINCT " & _
            "  PLINE.USR$PARAMCODE, PLINE.USR$VALUE " & _
            "FROM " & _
            "  USR$GDMN_USERS u " & _
            "  LEFT JOIN USR$GDMN_PARAMS P ON P.ID = U.USR$PARAMSKEY " & _
            "  LEFT JOIN USR$GDMN_PARAMSLINE PLINE ON PLINE.USR$MASTERKEY = P.ID " & _
            "WHERE " & _
            "   P.USR$SYSTEMKEY = :SYSTEMKEY "
          qSelParams.ParamByName("systemkey").AsInteger = systemkey
          qSelParams.Close
          qSelParams.ExecQuery
          while not qSelParams.eof
            sqlQuery = Replace(sqlQuery, "%" & UCASE(qSelParams.FieldByName("USR$PARAMCODE").AsString) & "%", " " & " AND " & qSelParams.FieldByName("USR$VALUE").AsString)
            qSelParams.Next
          wend
        
          'Вытягиваем данные из справочника
          ibsql.Close
          ibsql.SQL.Text = sqlQuery
          if InStr(LCase(sqlQuery), ":contactkey") > 0 then
            ibsql.ParamByName("contactkey").AsInteger = contactkey
          end if
          ibsql.Prepare
          i = 0
          while i < ibsql.Current.Count
            gdcQueryFields.Insert
            gdcQueryFields.FieldByName("USR$NAME").AsString = ibsql.Fields(i).name
            gdcQueryFields.FieldByName("USR$REFERENCELINE").AsInteger = refKey
        
            if ibsql.Fields(i).SqlType = SQL_LONG then
              'bigint
              gdcQueryFields.FieldByName("USR$TYPEFIELD").AsInteger = gdcBaseManager.GetIDByRUIDString("147023725_1677413867")
            else
              if ibsql.Fields(i).SqlType = SQL_SHORT or _
                ibsql.Fields(i).SqlType = SQL_INT64 or _
                ibsql.Fields(i).SqlType = SQL_FLOAT or _
                ibsql.Fields(i).SqlType = SQL_DOUBLE then
                if  ibsql.Fields(i).SqlType = SQL_SHORT then
                  'integer
                  gdcQueryFields.FieldByName("USR$TYPEFIELD").AsInteger = gdcBaseManager.GetIDByRUIDString("147023303_1677413867")
                else
                  'float
                  gdcQueryFields.FieldByName("USR$TYPEFIELD").AsInteger = gdcBaseManager.GetIDByRUIDString("147023757_1677413867")
                end if
              else
                if ibsql.Fields(i).SqlType = SQL_TYPE_DATE  then
                  gdcQueryFields.FieldByName("USR$TYPEFIELD").AsInteger = gdcBaseManager.GetIDByRUIDString("147023726_1677413867")
                else
                  if  ibsql.Fields(i).SqlType = SQL_TYPE_TIME  then
                    gdcQueryFields.FieldByName("USR$TYPEFIELD").AsInteger = gdcBaseManager.GetIDByRUIDString("147023727_1677413867")
                  else
                    gdcQueryFields.FieldByName("USR$TYPEFIELD").AsInteger = gdcBaseManager.GetIDByRUIDString("147023302_1677413867")
                  end if
                end if
              end if
            end if
            gdcQueryFields.Post
            i = i + 1
          wend
        End Sub
        
        
  - 
    Properties: 
      Class: "TgdcDelphiObject"
      RUID: 147023440_1677413867
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
      HeadObject: 147023441_1677413867
    Fields: 
      PARENT: "148998334_1521203129 gdc_dlgAttrUserDefinedUSR_GDMN_REFERENCES"
      NAME: "usrg_actAddFromQuery"
      CLASSNAME: ""
      DESCRIPTION: ~
      MACROSGROUPKEY: ~
      OBJECTNAME: "usrg_actAddFromQuery"
      OBJECTTYPE: 0
      REPORTGROUPKEY: ~
      SUBTYPE: ""
      EDITIONDATE: 2021-06-10T11:54:39+03:00
  - 
    Properties: 
      Class: "TgdcEvent"
      RUID: 147023441_1677413867
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
    Fields: 
      DISABLE: 0
      EVENTNAME: "ONEXECUTE"
      FUNCTIONKEY: "147023443_1677413867 usrg_actAddFromQueryOnExecute"
      OBJECTKEY: "147023440_1677413867 gdc_dlgAttrUserDefinedUSR_GDMN_REFERENCES\\usrg_actAddFromQuery"
      OBJECTNAME: "usrg_actAddFromQuery"
      PARENTNAME: "gdc_dlgAttrUserDefinedUSR_GDMN_REFERENCES"
      EDITIONDATE: 2021-08-26T18:47:09+03:00
  - 
    Properties: 
      Class: "TgdcFunction"
      RUID: 147023318_1677413867
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
      HeadObject: 147023316_1677413867
    Fields: 
      NAME: "usrg_actAddFieldOnExecute"
      COMMENT: ~
      EVENT: "ONEXECUTE"
      FUNCTIONTYPE: ~
      GROUPNAME: ~
      INHERITEDRULE: 0
      LANGUAGE: "VBScript"
      LOCALNAME: ~
      MODIFYDATE: 2021-06-15T18:45:05+03:00
      MODULE: "EVENTS"
      MODULECODE: "148998334_1521203129 gdc_dlgAttrUserDefinedUSR_GDMN_REFERENCES"
      OBJECTNAME: "gdc_dlgAttrUserDefinedUSR_GDMN_REFERENCES"
      OWNERNAME: ~
      PUBLICFUNCTION: 1
      SHORTCUT: ~
      USEDEBUGINFO: 0
      EDITIONDATE: 2021-06-09T18:38:21+03:00
      DISPLAYSCRIPT: | 
        USRG_ACTADDFIELDONEXECUTE
        
      ENTEREDPARAMS: !!binary > 
        U0xQUlBSU1QGAAAAU0VOREVSBgAAAFNFTkRFUgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABGTlNU
        RkxQUg==
      SCRIPT: | 
        Option Explicit
        Sub usrg_actAddFieldOnExecute(ByVal Sender)
        '*** Данный код необходим для вызова встроенного обработчика ***
        '*** В случае его удаления возможно нарушение работы системы ***
          Call   Inherited(Sender, "OnExecute", Array(Sender))
        '*** конец кода поддержки встроенного обработчика            ***
          dim gdcQueryFields, fieldKey
          set gdcQueryFields = Sender.OwnerForm.GetComponent("usrg_gdcQueryFields")
          fieldKey = Sender.OwnerForm.gdcObject.FieldByName("id").AsInteger
          if fieldKey > 0  then
            gdcQueryFields.Insert
            gdcQueryFields.FieldByName("USR$REFERENCELINE").AsInteger = fieldKey
            call gdcQueryFields.CreateDialog("")
          end if
        End Sub
        
  - 
    Properties: 
      Class: "TgdcDelphiObject"
      RUID: 147023315_1677413867
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
      HeadObject: 147023316_1677413867
    Fields: 
      PARENT: "148998334_1521203129 gdc_dlgAttrUserDefinedUSR_GDMN_REFERENCES"
      NAME: "usrg_actAddField"
      CLASSNAME: ""
      DESCRIPTION: ~
      MACROSGROUPKEY: ~
      OBJECTNAME: "usrg_actAddField"
      OBJECTTYPE: 0
      REPORTGROUPKEY: ~
      SUBTYPE: ""
      EDITIONDATE: 2021-06-09T18:13:39+03:00
  - 
    Properties: 
      Class: "TgdcEvent"
      RUID: 147023316_1677413867
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
    Fields: 
      DISABLE: 0
      EVENTNAME: "ONEXECUTE"
      FUNCTIONKEY: "147023318_1677413867 usrg_actAddFieldOnExecute"
      OBJECTKEY: "147023315_1677413867 gdc_dlgAttrUserDefinedUSR_GDMN_REFERENCES\\usrg_actAddField"
      OBJECTNAME: "usrg_actAddField"
      PARENTNAME: "gdc_dlgAttrUserDefinedUSR_GDMN_REFERENCES"
      EDITIONDATE: 2021-06-09T18:38:21+03:00
  - 
    Properties: 
      Class: "TgdcFunction"
      RUID: 147023293_1677413867
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
      HeadObject: 147023291_1677413867
    Fields: 
      NAME: "gdc_dlgAttrUserDefinedUSR_GDMN_QUERYFIELDSOnShow"
      COMMENT: ~
      EVENT: "ONSHOW"
      FUNCTIONTYPE: ~
      GROUPNAME: ~
      INHERITEDRULE: 0
      LANGUAGE: "VBScript"
      LOCALNAME: ~
      MODIFYDATE: 2021-06-15T18:45:05+03:00
      MODULE: "EVENTS"
      MODULECODE: "147023164_1677413867 gdc_dlgAttrUserDefinedUSR_GDMN_QUERYFIELDS"
      OBJECTNAME: "gdc_dlgAttrUserDefinedUSR_GDMN_QUERYFIELDS"
      OWNERNAME: ~
      PUBLICFUNCTION: 1
      SHORTCUT: ~
      USEDEBUGINFO: 0
      EDITIONDATE: 2021-06-10T16:35:51+03:00
      DISPLAYSCRIPT: | 
        GDC_DLGATTRUSERDEFINEDUSR_GDMN_QUERYFIELDSONSHOW
        
      ENTEREDPARAMS: !!binary > 
        U0xQUlBSU1QGAAAAU0VOREVSBgAAAFNFTkRFUgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABGTlNU
        RkxQUg==
      SCRIPT: | 
        Option Explicit
        Sub gdc_dlgAttrUserDefinedUSR_GDMN_QUERYFIELDSOnShow(ByVal Sender)
        '*** Данный код необходим для вызова встроенного обработчика ***
        '*** В случае его удаления возможно нарушение работы системы ***
          Call   Inherited(Sender, "OnShow", Array(Sender))
        '*** конец кода поддержки встроенного обработчика            ***
          dim relationField, relationName, typeField, ibsql, Creator, _
            relationFieldLabel, relationNameLabel
          set Creator = new TCreator
          set ibsql = Creator.GetObject(nil, "TIBSQL", "")
          ibsql.Transaction = gdcBaseManager.ReadTransaction
          set relationField = Sender.OwnerForm.GetComponent("usrat_gsIBLookupComboBox_USR_RELATIONFILED")
          set relationName = Sender.OwnerForm.GetComponent("usrat_gsIBLookupComboBox_USR_RELATIONNAME")
          set relationFieldLabel = Sender.OwnerForm.GetComponent("usrat_gsIBLookupComboBox_USR_RELATIONFILED_Label")
          set relationNameLabel = Sender.OwnerForm.GetComponent("usrat_gsIBLookupComboBox_USR_RELATIONNAME_Label")
          set typeField = Sender.OwnerForm.GetComponent("usrat_gsIBLookupComboBox_USR_TYPEFIELD")
          if typeField.CurrentKey = "" then
            relationName.Visible = false
            relationNameLabel.Visible = false
            relationField.Visible = false
            relationFieldLabel.Visible = false
            relationField.Condition = ""
          else
            ibsql.Close
            ibsql.SQL.Text = _
              " select coalesce(USR$NOTPRIMITIVE, 0) as notPrimitive from USR$JSON_TYPES where id = " &  typeField.CurrentKeyInt
            ibsql.ExecQuery
            if ibsql.FieldByName("notPrimitive").AsInteger = 1 then
              relationName.Visible = true
              relationNameLabel.Visible = true
              relationField.Visible = true
              relationFieldLabel.Visible = true
            else
              relationName.Visible = false
              relationNameLabel.Visible = false
              relationName.CurrentKeyInt = -1
              relationField.Visible = false
              relationFieldLabel.Visible = false
              relationField.CurrentKeyInt = -1
              relationField.Condition = ""
            end if
          end if
          if relationName.CurrentKey = "" then
            relationField.Condition = ""
          else
            relationField.Condition = " RELATIONKEY =  " & relationName.CurrentKeyInt
          end if
        End Sub
        
  - 
    Properties: 
      Class: "TgdcEvent"
      RUID: 147023291_1677413867
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
    Fields: 
      DISABLE: 0
      EVENTNAME: "ONSHOW"
      FUNCTIONKEY: "147023293_1677413867 gdc_dlgAttrUserDefinedUSR_GDMN_QUERYFIELDSOnShow"
      OBJECTKEY: "147023164_1677413867 gdc_dlgAttrUserDefinedUSR_GDMN_QUERYFIELDS"
      OBJECTNAME: "gdc_dlgAttrUserDefinedUSR_GDMN_QUERYFIELDS"
      PARENTNAME: ~
      EDITIONDATE: 2021-06-10T16:35:51+03:00
  - 
    Properties: 
      Class: "TgdcFunction"
      RUID: 147023296_1677413867
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
      HeadObject: 147023294_1677413867
    Fields: 
      NAME: "gdc_dlgAttrUserDefinedUSR_GDMN_QUERYFIELDSOnSyncField"
      COMMENT: ~
      EVENT: "ONSYNCFIELD"
      FUNCTIONTYPE: ~
      GROUPNAME: ~
      INHERITEDRULE: 0
      LANGUAGE: "VBScript"
      LOCALNAME: ~
      MODIFYDATE: 2021-06-15T18:45:05+03:00
      MODULE: "EVENTS"
      MODULECODE: "147023164_1677413867 gdc_dlgAttrUserDefinedUSR_GDMN_QUERYFIELDS"
      OBJECTNAME: "gdc_dlgAttrUserDefinedUSR_GDMN_QUERYFIELDS"
      OWNERNAME: ~
      PUBLICFUNCTION: 1
      SHORTCUT: ~
      USEDEBUGINFO: 0
      EDITIONDATE: 2021-06-10T16:35:40+03:00
      DISPLAYSCRIPT: | 
        GDC_DLGATTRUSERDEFINEDUSR_GDMN_QUERYFIELDSONSYNCFIELD
        
      ENTEREDPARAMS: !!binary > 
        U0xQUlBSU1QGAAAAU0VOREVSBgAAAFNFTkRFUgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABGTlNU
        UFJTVAUAAABGSUVMRAUAAABGSUVMRAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABGTlNUUFJTVAgA
        AABTWU5DTElTVAgAAABTWU5DTElTVAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABGTlNURkxQUg==
      SCRIPT: | 
        Option Explicit
        Sub gdc_dlgAttrUserDefinedUSR_GDMN_QUERYFIELDSOnSyncField(ByVal Sender, ByVal Field, ByVal SyncList)
        '*** Данный код необходим для вызова встроенного обработчика ***
        '*** В случае его удаления возможно нарушение работы системы ***
          Call   Inherited(Sender, "OnSyncField", Array(Sender, Field, SyncList))
        '*** конец кода поддержки встроенного обработчика            ***
          dim relationField, relationName, typeField, ibsql, Creator, _
            relationFieldLabel, relationNameLabel
          set Creator = new TCreator
          set ibsql = Creator.GetObject(nil, "TIBSQL", "")
          ibsql.Transaction = gdcBaseManager.ReadTransaction
          set relationField = Sender.OwnerForm.GetComponent("usrat_gsIBLookupComboBox_USR_RELATIONFILED")
          set relationName = Sender.OwnerForm.GetComponent("usrat_gsIBLookupComboBox_USR_RELATIONNAME")
          set relationFieldLabel = Sender.OwnerForm.GetComponent("usrat_gsIBLookupComboBox_USR_RELATIONFILED_Label")
          set relationNameLabel = Sender.OwnerForm.GetComponent("usrat_gsIBLookupComboBox_USR_RELATIONNAME_Label")
          set typeField = Sender.OwnerForm.GetComponent("usrat_gsIBLookupComboBox_USR_TYPEFIELD")
        
          if Field.FieldName = "USR$RELATIONNAME" then
            if relationName.CurrentKey = "" then
              relationField.Condition = ""
            else
              relationField.Condition = " RELATIONKEY =  " & relationName.CurrentKeyInt
            end if
          end if
          if Field.FieldName = "USR$TYPEFIELD" then
            if Field.AsInteger = -1 then
              relationName.Visible = false
              relationNameLabel.Visible = false
              relationField.Visible = false
              relationFieldLabel.Visible = false
              relationField.Condition = ""
            else
              ibsql.Close
              ibsql.SQL.Text = _
                " select coalesce(USR$NOTPRIMITIVE, 0) as notPrimitive from USR$JSON_TYPES where id = " &  Field.AsInteger
              ibsql.ExecQuery
              if ibsql.FieldByName("notPrimitive").AsInteger = 1 then
                relationName.Visible = true
                relationNameLabel.Visible = true
                relationField.Visible = true
                relationFieldLabel.Visible = true
              else
                relationName.Visible = false
                relationNameLabel.Visible = false
                relationName.CurrentKeyInt = -1
                relationField.Visible = false
                relationFieldLabel.Visible = false
                relationField.CurrentKeyInt = -1
                relationField.Condition = ""
              end if
            end if
          end if
        End Sub
        
  - 
    Properties: 
      Class: "TgdcEvent"
      RUID: 147023294_1677413867
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
    Fields: 
      DISABLE: 0
      EVENTNAME: "ONSYNCFIELD"
      FUNCTIONKEY: "147023296_1677413867 gdc_dlgAttrUserDefinedUSR_GDMN_QUERYFIELDSOnSyncField"
      OBJECTKEY: "147023164_1677413867 gdc_dlgAttrUserDefinedUSR_GDMN_QUERYFIELDS"
      OBJECTNAME: "gdc_dlgAttrUserDefinedUSR_GDMN_QUERYFIELDS"
      PARENTNAME: ~
      EDITIONDATE: 2021-06-10T16:35:40+03:00
  - 
    Properties: 
      Class: "TgdcFunction"
      RUID: 174582599_1693379973
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
      HeadObject: 174582597_1693379973
    Fields: 
      NAME: "Macros174582599_1693379973"
      COMMENT: ~
      EVENT: ~
      FUNCTIONTYPE: ~
      GROUPNAME: ~
      INHERITEDRULE: 0
      LANGUAGE: "VBScript"
      LOCALNAME: ~
      MODIFYDATE: ~
      MODULE: "MACROS"
      MODULECODE: "1176276983_1457844439 gdc_frmAttrUserDefinedUSR_GDMN_USERS"
      OBJECTNAME: "gdc_frmAttrUserDefinedUSR_GDMN_USERS"
      OWNERNAME: ~
      PUBLICFUNCTION: 1
      SHORTCUT: ~
      USEDEBUGINFO: 0
      EDITIONDATE: 2022-09-26T10:42:20+03:00
      DISPLAYSCRIPT: | 
        MACROS174582599_1693379973
        
      ENTEREDPARAMS: !!binary > 
        U0xQUlBSU1QJAAAAT1dORVJGT1JNCQAAAE9XTkVSRk9STQAAAAAAAAAAAAAAAAsAAAAAAAAAAAAA
        AABGTlNUUFJTVAkAAABTWVNURU1LRVkKAAAAz+7k8ejx8uXs4BAAAABVU1IkR0RNTl9TWVNURU1T
        CAAAAHVzciRuYW1lAgAAAGlkBwAAAAAAAAAAAgAAAF5SRk5TVEZMUFI=
      SCRIPT: | 
        Option Explicit
        Sub Macros174582599_1693379973(OwnerForm, SystemKey)
          dim web_service, version, gdcObject
          set gdcObject = OwnerForm.gdcObject
          set web_service = (New TVB_Web_Service)(SystemKey(0))
          version = web_service.AppSystemVersion
          if version = "v0" then
            call Application.MessageBox("Функциональность не поддерживается в данной версии системы !!! ", "Внимание!", vbInformation + vbOkOnly + vbApplicationModal)
            exit sub
          end if
            'Вход администратора компании
          call web_service.Login(web_service.AdminLogin, web_service.AdminPassw)
          If web_service.RequestStatus = 200 or web_service.RequestStatus = 403 Then
            'Получаем всех пользователей компании
            call web_service.GetUsers("")
            if web_service.RequestStatus = 200 and Assigned(web_service.RequestData) then
              dim usersObj, countResults, objResult, m, userID, userName, deviceID, userAlias
              set usersObj = web_service.RequestData
              countResults = usersObj.Value("data").ObjectItemsCount
              objResult = usersObj.SimpleValue("result", "")
              for m = 0 to countResults - 1
                set ObjResult = usersObj.Value("data").ObjectItem(m)
                userID = objResult.SimpleValue("id", "")
                userName = objResult.SimpleValue("name", "")
                userAlias = objResult.SimpleValue("alias", "")
                if not gdcObject.Locate("USR$MOBILEID", Array(userID), false) and _
                  LCase(userName) <> "admin" then
                  gdcObject.Append
                  gdcObject.FieldByName("USR$SYSTEMKEY").AsInteger = SystemKey(0)
                  gdcObject.FieldByName("USR$MOBILEID").AsString = userID
                  gdcObject.FieldByName("USR$MOBILELOGIN").AsString = userName
                  gdcObject.FieldByName("USR$MOBILEALIAS").AsString = userAlias
                  gdcObject.Post
                else
                  if (LCase(userName) <> "admin") then
                    gdcObject.Edit
                    gdcObject.FieldByName("USR$SYSTEMKEY").AsInteger = SystemKey(0)
                    gdcObject.FieldByName("USR$MOBILELOGIN").AsString = userName
                    gdcObject.FieldByName("USR$MOBILEALIAS").AsString = userAlias
                    gdcObject.Post
                  end if
                end if
              next
            end if
            ' Получаем связь с устройствами
            call web_service.getDeviceBindings()
            if web_service.RequestStatus = 200 and Assigned(web_service.RequestData) then
              set usersObj = web_service.RequestData
              countResults = usersObj.Value("data").ObjectItemsCount
              objResult = usersObj.SimpleValue("result", "")
              for m = 0 to countResults - 1
                set ObjResult = usersObj.Value("data").ObjectItem(m)
                userID = objResult.Value("user").SimpleValue("id", "")
                deviceID = objResult.Value("device").SimpleValue("id", "")
                dim deviceObj, count, deviceResult, deviceUid
                call web_service.getDevice(deviceId)
                if web_service.RequestStatus = 200 and Assigned(web_service.RequestData) then
                  set deviceObj = web_service.RequestData
                  set deviceResult = deviceObj.Value("data")
                  deviceUid = deviceResult.SimpleValue("uid", "")
                  if gdcObject.Locate("USR$MOBILEID", Array(userID), false) then
                    gdcObject.Edit
                    gdcObject.FieldByName("USR$DEVICEID").AsString = deviceUid
                    gdcObject.Post
                  end if
                end if
              next
            end if
             'Выход пользователя
            call web_service.Logout()
        
            if web_service.HasError then
              call Application.MessageBox("Импорт выполнен с ошибками!", "Внимание!", vbInformation + vbOkOnly + vbApplicationModal)
            else
              call Application.MessageBox("Импорт успешно выполнен!", "Внимание!", vbInformation + vbOkOnly + vbApplicationModal)
            end if
          else
            call Application.MessageBox(web_service.RequestError, "Внимание!", vbInformation + vbOkOnly + vbApplicationModal)
          end if
        End Sub
        
  - 
    Properties: 
      Class: "TgdcMacros"
      RUID: 174582597_1693379973
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
    Fields: 
      NAME: "Deprecated. Получить пользователей из WEB_ADMIN"
      DISPLAYINMENU: 0
      EXECUTEDATE: ~
      FUNCTIONKEY: "174582599_1693379973 Macros174582599_1693379973"
      ISLOCALEXECUTE: 0
      ISREBUILD: 0
      MACROSGROUPKEY: "1176277022_1457844439 Локальные макросы"
      OBJECTNAME: "gdc_frmAttrUserDefinedUSR_GDMN_USERS"
      SERVERKEY: ~
      SHORTCUT: 0
      EDITIONDATE: 2022-09-26T10:42:20+03:00
  - 
    Properties: 
      Class: "TgdcFunction"
      RUID: 174583123_1693379973
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
      HeadObject: 174583121_1693379973
    Fields: 
      NAME: "usrg_actGetCompanyCodeOnExecute"
      COMMENT: ~
      EVENT: "ONEXECUTE"
      FUNCTIONTYPE: ~
      GROUPNAME: ~
      INHERITEDRULE: 0
      LANGUAGE: "VBScript"
      LOCALNAME: ~
      MODIFYDATE: ~
      MODULE: "EVENTS"
      MODULECODE: "1176268402_1457844439 usrf_gdmn_config"
      OBJECTNAME: "usrf_gdmn_config"
      OWNERNAME: ~
      PUBLICFUNCTION: 1
      SHORTCUT: ~
      USEDEBUGINFO: 0
      EDITIONDATE: 2022-05-23T17:16:50+03:00
      DISPLAYSCRIPT: | 
        USRG_ACTGETCOMPANYCODEONEXECUTE
        
      ENTEREDPARAMS: !!binary > 
        U0xQUlBSU1QGAAAAU0VOREVSBgAAAFNFTkRFUgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABGTlNU
        RkxQUg==
      SCRIPT: | 
        Option Explicit
        Sub usrg_actGetCompanyCodeOnExecute(ByVal Sender)
        '*** Данный код необходим для вызова встроенного обработчика ***
        '*** В случае его удаления возможно нарушение работы системы ***
          Call   Inherited(Sender, "OnExecute", Array(Sender))
        '*** конец кода поддержки встроенного обработчика            ***
          dim web_service, version
          Set web_service = New TVB_Web_Service
          version = web_service.AppSystemVersion
          if version = "v0" then
            call Application.MessageBox("Функциональность не поддерживается в данной версии системы !!! ", "Внимание!", vbInformation + vbOkOnly + vbApplicationModal)
            exit sub
          end if
            'объект для работы с типами данных
          dim Enc
          set Enc = new TVB_xml_EncodingFunctions
          dim comaniesObj, countResults, objResult, m, companyID, utfName
           'Вход администратора компании
          call web_service.Login(web_service.adminLogin, web_service.AdminPassw)
          If web_service.RequestStatus = 200 or web_service.RequestStatus = 403 Then
            utfName = Enc.Win1251_ToUTF8(Sender.OwnerForm.GetComponent("usrg_edCompanyName").Text)
            call web_service.GetCompanyByName(utfName)
            if web_service.RequestStatus = 200 then
              set comaniesObj = web_service.RequestData
              objResult = comaniesObj.SimpleValue("result", "")
              dim data
              set data = comaniesObj.Value("data")
              countResults = comaniesObj.Value("data").ObjectItemsCount
              for m = 0 to countResults - 1
                set ObjResult = comaniesObj.Value("data").ObjectItem(m)
                companyID = objResult.SimpleValue("id", "")
                if companyID > "" then
                  Sender.OwnerForm.GetComponent("usrg_edCompanyKey").Text = companyID
                else
                  call Application.MessageBox("Код компании не найден!!!", "Внимание!", vbInformation + vbOkOnly + vbApplicationModal)
                end if
              next
            else
              call Application.MessageBox(web_service.RequestError, "Внимание!", vbInformation + vbOkOnly + vbApplicationModal)
            end if
          else
            call Application.MessageBox(web_service.RequestError, "Внимание!", vbInformation + vbOkOnly + vbApplicationModal)
          end if
        End Sub
        
  - 
    Properties: 
      Class: "TgdcDelphiObject"
      RUID: 174583120_1693379973
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
      HeadObject: 174583121_1693379973
    Fields: 
      PARENT: "1176268402_1457844439 usrf_gdmn_config"
      NAME: "usrg_actGetCompanyCode"
      CLASSNAME: ""
      DESCRIPTION: ~
      MACROSGROUPKEY: ~
      OBJECTNAME: "usrg_actGetCompanyCode"
      OBJECTTYPE: 0
      REPORTGROUPKEY: ~
      SUBTYPE: ""
      EDITIONDATE: 2021-08-11T18:21:07+03:00
  - 
    Properties: 
      Class: "TgdcEvent"
      RUID: 174583121_1693379973
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
    Fields: 
      DISABLE: 0
      EVENTNAME: "ONEXECUTE"
      FUNCTIONKEY: "174583123_1693379973 usrg_actGetCompanyCodeOnExecute"
      OBJECTKEY: "174583120_1693379973 usrf_gdmn_config\\usrg_actGetCompanyCode"
      OBJECTNAME: "usrg_actGetCompanyCode"
      PARENTNAME: "usrf_gdmn_config"
      EDITIONDATE: 2022-05-23T17:16:50+03:00
  - 
    Properties: 
      Class: "TgdcDelphiObject"
      RUID: 147039816_1730903579
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
      HeadObject: 147039817_1730903579
    Fields: 
      PARENT: "147275685_124484738 TgdcBase\\TgdcAttrUserDefined"
      NAME: "TgdcAttrUserDefinedUSR_GDMN_USERSETTINGS"
      CLASSNAME: "TgdcAttrUserDefined"
      DESCRIPTION: ~
      MACROSGROUPKEY: ~
      OBJECTNAME: ""
      OBJECTTYPE: 1
      REPORTGROUPKEY: ~
      SUBTYPE: "USR_GDMN_USERSETTINGS"
      EDITIONDATE: 2021-09-12T21:22:19+03:00
  - 
    Properties: 
      Class: "TgdcFunction"
      RUID: 147039819_1730903579
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
      HeadObject: 147039817_1730903579
    Fields: 
      NAME: "TgdcAttrUserDefinedUSR_GDMN_USERSETTINGSCreateFields"
      COMMENT: ~
      EVENT: ~
      FUNCTIONTYPE: ~
      GROUPNAME: ~
      INHERITEDRULE: 0
      LANGUAGE: "VBScript"
      LOCALNAME: ~
      MODIFYDATE: ~
      MODULE: "METHOD"
      MODULECODE: "147039816_1730903579 TgdcBase\\TgdcAttrUserDefined\\TgdcAttrUserDefinedUSR_GDMN_USERSETTINGS"
      OBJECTNAME: "TgdcAttrUserDefinedUSR_GDMN_USERSETTINGS"
      OWNERNAME: ~
      PUBLICFUNCTION: 1
      SHORTCUT: ~
      USEDEBUGINFO: 0
      EDITIONDATE: 2021-09-12T21:26:59+03:00
      DISPLAYSCRIPT: | 
        TGDCATTRUSERDEFINEDUSR_GDMN_USERSETTINGSCREATEFIELDS
        
      ENTEREDPARAMS: !!binary > 
        U0xQUlBSU1QEAAAAU0VMRgQAAABTRUxGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEZOU1RGTFBS
      SCRIPT: | 
        Option Explicit
        Sub TgdcAttrUserDefinedUSR_GDMN_USERSETTINGSCreateFields(Self)
        '*** Данный код необходим для вызова кода определенного в gdc-классе.***
        '*** При его удаления  возможно нарушение  правильной работы системы.***
          Call Inherited(Self, "CreateFields", Array(Self))
        '***               Конец кода поддержки gdc-класса.                  ***
          Self.FieldByName("USR$USERKEY").Required = true
        End Sub
        
  - 
    Properties: 
      Class: "TgdcEvent"
      RUID: 147039817_1730903579
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
    Fields: 
      DISABLE: 0
      EVENTNAME: "CREATEFIELDS"
      FUNCTIONKEY: "147039819_1730903579 TgdcAttrUserDefinedUSR_GDMN_USERSETTINGSCreateFields"
      OBJECTKEY: "147039816_1730903579 TgdcBase\\TgdcAttrUserDefined\\TgdcAttrUserDefinedUSR_GDMN_USERSETTINGS"
      OBJECTNAME: "TgdcAttrUserDefinedUSR_GDMN_USERSETTINGS"
      PARENTNAME: "TgdcAttrUserDefined"
      EDITIONDATE: 2021-09-12T21:26:59+03:00
  - 
    Properties: 
      Class: "TgdcReportGroup"
      RUID: 147039760_1730903579
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
      HeadObject: 147039857_1730903579
    Fields: 
      PARENT: ~
      NAME: "Отчеты(gdc_dlgAttrUserDefinedUSR_GDMN_USERSETTINGS)"
      DESCRIPTION: ~
      USERGROUPNAME: "147039760_1730903579"
      EDITIONDATE: 2021-09-10T19:09:12+03:00
  - 
    Properties: 
      Class: "TgdcMacrosGroup"
      RUID: 147039759_1730903579
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
      HeadObject: 147039857_1730903579
    Fields: 
      PARENT: ~
      NAME: "Локальные макросы"
      CLASSNAME: ""
      ISGLOBAL: 0
      OBJECTNAME: "gdc_dlgAttrUserDefinedUSR_GDMN_USERSETTINGS"
      OBJECTPARENT: ~
      SUBTYPE: ""
      EDITIONDATE: 2021-09-10T19:09:12+03:00
      DESCRIPTION: ~
  - 
    Properties: 
      Class: "TgdcDelphiObject"
      RUID: 147039748_1730903579
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
      HeadObject: 147039857_1730903579
    Fields: 
      PARENT: ~
      NAME: "gdc_dlgAttrUserDefinedUSR_GDMN_USERSETTINGS"
      CLASSNAME: ""
      DESCRIPTION: ~
      MACROSGROUPKEY: "147039759_1730903579 Локальные макросы"
      OBJECTNAME: "gdc_dlgAttrUserDefinedUSR_GDMN_USERSETTINGS"
      OBJECTTYPE: 0
      REPORTGROUPKEY: "147039760_1730903579 Отчеты(gdc_dlgAttrUserDefinedUSR_GDMN_USERSETTINGS)"
      SUBTYPE: ""
      EDITIONDATE: 2021-09-10T19:09:12+03:00
  - 
    Properties: 
      Class: "TgdcFunction"
      RUID: 147039859_1730903579
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
      HeadObject: 147039857_1730903579
    Fields: 
      NAME: "gdc_dlgAttrUserDefinedUSR_GDMN_USERSETTINGSOnSyncField"
      COMMENT: ~
      EVENT: "ONSYNCFIELD"
      FUNCTIONTYPE: ~
      GROUPNAME: ~
      INHERITEDRULE: 0
      LANGUAGE: "VBScript"
      LOCALNAME: ~
      MODIFYDATE: ~
      MODULE: "EVENTS"
      MODULECODE: "147039748_1730903579 gdc_dlgAttrUserDefinedUSR_GDMN_USERSETTINGS"
      OBJECTNAME: "gdc_dlgAttrUserDefinedUSR_GDMN_USERSETTINGS"
      OWNERNAME: ~
      PUBLICFUNCTION: 1
      SHORTCUT: ~
      USEDEBUGINFO: 0
      EDITIONDATE: 2021-09-12T21:36:06+03:00
      DISPLAYSCRIPT: | 
        GDC_DLGATTRUSERDEFINEDUSR_GDMN_USERSETTINGSONSYNCFIELD
        
      ENTEREDPARAMS: !!binary > 
        U0xQUlBSU1QGAAAAU0VOREVSBgAAAFNFTkRFUgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABGTlNU
        UFJTVAUAAABGSUVMRAUAAABGSUVMRAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABGTlNUUFJTVAgA
        AABTWU5DTElTVAgAAABTWU5DTElTVAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABGTlNURkxQUg==
      SCRIPT: | 
        Option Explicit
        Sub gdc_dlgAttrUserDefinedUSR_GDMN_USERSETTINGSOnSyncField(ByVal Sender, ByVal Field, ByVal SyncList)
        '*** Данный код необходим для вызова встроенного обработчика ***
        '*** В случае его удаления возможно нарушение работы системы ***
          Call   Inherited(Sender, "OnSyncField", Array(Sender, Field, SyncList))
        '*** конец кода поддержки встроенного обработчика            ***
           dim relationField, relationName
           set relationName = Sender.GetComponent("usrat_gsIBLookupComboBox_USR_RELATIONNAME")
           set relationField = Sender.GetComponent("usrat_gsIBLookupComboBox_USR_RELATIONFIELD")
           if Field.FieldName = "USR$RELATIONNAME" then
            if relationName.CurrentKey = "" then
              relationField.Condition = ""
            else
              relationField.Condition = " RELATIONKEY =  " & relationName.CurrentKeyInt
            end if
          end if
        End Sub
        
  - 
    Properties: 
      Class: "TgdcEvent"
      RUID: 147039857_1730903579
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
    Fields: 
      DISABLE: 0
      EVENTNAME: "ONSYNCFIELD"
      FUNCTIONKEY: "147039859_1730903579 gdc_dlgAttrUserDefinedUSR_GDMN_USERSETTINGSOnSyncField"
      OBJECTKEY: "147039748_1730903579 gdc_dlgAttrUserDefinedUSR_GDMN_USERSETTINGS"
      OBJECTNAME: "gdc_dlgAttrUserDefinedUSR_GDMN_USERSETTINGS"
      PARENTNAME: ~
      EDITIONDATE: 2021-09-12T21:36:06+03:00
  - 
    Properties: 
      Class: "TgdcFunction"
      RUID: 147039876_1730903579
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
      HeadObject: 147039874_1730903579
    Fields: 
      NAME: "usrg_actSelectValueOnExecute"
      COMMENT: ~
      EVENT: "ONEXECUTE"
      FUNCTIONTYPE: ~
      GROUPNAME: ~
      INHERITEDRULE: 0
      LANGUAGE: "VBScript"
      LOCALNAME: ~
      MODIFYDATE: ~
      MODULE: "EVENTS"
      MODULECODE: "147039748_1730903579 gdc_dlgAttrUserDefinedUSR_GDMN_USERSETTINGS"
      OBJECTNAME: "gdc_dlgAttrUserDefinedUSR_GDMN_USERSETTINGS"
      OWNERNAME: ~
      PUBLICFUNCTION: 1
      SHORTCUT: ~
      USEDEBUGINFO: 0
      EDITIONDATE: 2022-12-19T17:38:49+03:00
      DISPLAYSCRIPT: | 
        USRG_ACTSELECTVALUEONEXECUTE
        
      ENTEREDPARAMS: !!binary > 
        U0xQUlBSU1QGAAAAU0VOREVSBgAAAFNFTkRFUgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABGTlNU
        RkxQUg==
      SCRIPT: | 
        Option Explicit
        Sub usrg_actSelectValueOnExecute(ByVal Sender)
        '*** Данный код необходим для вызова встроенного обработчика ***
        '*** В случае его удаления возможно нарушение работы системы ***
          Call   Inherited(Sender, "OnExecute", Array(Sender))
        '*** конец кода поддержки встроенного обработчика            ***
          dim relationName, className, gdcObject, Creator, ibsql, gdcSel, relationKey, rdGroup
          set rdGroup = Sender.OwnerForm.GetComponent("usrg_rdGroup")
          dim contacttype
          contacttype = Array("TgdcBaseContact", "TgdcDepartment", "TgdcEmployee", "TgdcGood", "TgdcGoodGroup")
          relationName = Array("GD_CONTACT", "GD_CONTACT", "GD_CONTACT", "GD_GOOD", "GD_GOODGROUP")
          set gdcObject = Sender.OwnerForm.gdcObject
          set Creator = new TCreator
          className = contacttype(rdGroup.ItemIndex)
          set gdcSel = Creator.GetObject(nil, className, "")
          gdcSel.SubSet = "All"
          set ibsql = Creator.GetObject(nil, "TIBSQL", "")
          ibsql.Transaction = gdcBaseManager.ReadTransaction
        
          if gdcSel.ChooseItemsSelf(false, "", "") then
            if gdcSel.SelectedID.Count > 1 then
              call Application.MessageBox("Выберите только одно значение!", "Внимание!", vbInformation + vbOkOnly + vbApplicationModal)
              exit sub
            end if
            gdcObject.FieldByName("USR$PARAMVALUE").AsString = gdcSel.SelectedID.CommaText
            ibsql.Close
            ibsql.SQL.Text = _
              "select list(name) as name " & _
              "  from  " & relationName(rdGroup.ItemIndex) & _
              " where id = " & gdcObject.FieldByName("USR$PARAMVALUE").AsString
            ibsql.ExecQuery
            if ibsql.RecordCount > 0  then
              gdcObject.FieldByName("USR$NAMEOFVALUE").AsString = _
                ibsql.FieldByName("name").AsString
            end if
            
            ibsql.Close
            ibsql.SQL.Text = _
              "select   r.ID as relationkey, f.ID  as fieldkey " & vbCrLf & _
              "from AT_RELATIONS r " & vbCrLf & _
              "  left join AT_RELATION_FIELDS f on f.RELATIONKEY = r.id " & vbCrLf & _
              "where  r.RELATIONNAME = '" & relationName(rdGroup.ItemIndex) & "'" & vbCrLf & _
              "  and f.FIELDNAME = 'NAME' "
            ibsql.ExecQuery
            if ibsql.RecordCount > 0  then
              gdcObject.FieldByName("USR$RELATIONNAME").AsVariant = _
                ibsql.FieldByName("relationkey").AsVariant
              gdcObject.FieldByName("USR$RELATIONFIELD").AsVariant = _
                ibsql.FieldByName("fieldkey").AsVariant
            end if
          end if
        
          
        '  if not gdcObject.FieldByName("USR$RELATIONNAME").IsNull then
        '    ibsql.Close
        '    ibsql.ParamByName("relationKey").AsString = relationKey
        '    ibsql.ExecQuery
        '    if ibsql.RecordCount > 0  then
        '      relationName = ibsql.FieldByName("relationName").AsString
        '      if relationName = "GD_CONTACT" then
        '        className = contacttype(rdGroup.ItemIndex)
        '      else
        '        className = Trim(ibsql.FieldByName("className").AsString)
        '      end if
        '      if className > "" then
        '        set gdcSel = Creator.GetObject(nil, className, "")
        '        if (className = "TgdcAttrUserDefined" or className = "TgdcAttrUserDefinedLBRBTree") then
        '          gdcSel.SubType = relationName
        '        end if
        '        gdcSel.SubSet = "All"
        '        if gdcSel.ChooseItemsSelf(false, "", "") then
        '          if gdcSel.SelectedID.Count > 1 then
        '            call Application.MessageBox("Выберите только одно значение!", "Внимание!", vbInformation + vbOkOnly + vbApplicationModal)
        '            exit sub
        '          end if
        '          gdcObject.FieldByName("USR$PARAMVALUE").AsString = gdcSel.SelectedID.CommaText
        '        end if
        '      end if
        '    end if
        '  end if
        End Sub
        
  - 
    Properties: 
      Class: "TgdcDelphiObject"
      RUID: 147039873_1730903579
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
      HeadObject: 147039874_1730903579
    Fields: 
      PARENT: "147039748_1730903579 gdc_dlgAttrUserDefinedUSR_GDMN_USERSETTINGS"
      NAME: "usrg_actSelectValue"
      CLASSNAME: ""
      DESCRIPTION: ~
      MACROSGROUPKEY: ~
      OBJECTNAME: "usrg_actSelectValue"
      OBJECTTYPE: 0
      REPORTGROUPKEY: ~
      SUBTYPE: ""
      EDITIONDATE: 2021-09-12T21:38:44+03:00
  - 
    Properties: 
      Class: "TgdcEvent"
      RUID: 147039874_1730903579
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
    Fields: 
      DISABLE: 0
      EVENTNAME: "ONEXECUTE"
      FUNCTIONKEY: "147039876_1730903579 usrg_actSelectValueOnExecute"
      OBJECTKEY: "147039873_1730903579 gdc_dlgAttrUserDefinedUSR_GDMN_USERSETTINGS\\usrg_actSelectValue"
      OBJECTNAME: "usrg_actSelectValue"
      PARENTNAME: "gdc_dlgAttrUserDefinedUSR_GDMN_USERSETTINGS"
      EDITIONDATE: 2022-12-16T18:18:07+03:00
  - 
    Properties: 
      Class: "TgdcFunction"
      RUID: 147039995_1730903579
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
      HeadObject: 147039952_1730903579
    Fields: 
      NAME: "gdc_dlgAttrUserDefinedUSR_GDMN_USERSETTINGSOnSetupDialog"
      COMMENT: ~
      EVENT: "ONSETUPDIALOG"
      FUNCTIONTYPE: ~
      GROUPNAME: ~
      INHERITEDRULE: 0
      LANGUAGE: "VBScript"
      LOCALNAME: ~
      MODIFYDATE: ~
      MODULE: "EVENTS"
      MODULECODE: "147039748_1730903579 gdc_dlgAttrUserDefinedUSR_GDMN_USERSETTINGS"
      OBJECTNAME: "gdc_dlgAttrUserDefinedUSR_GDMN_USERSETTINGS"
      OWNERNAME: ~
      PUBLICFUNCTION: 1
      SHORTCUT: ~
      USEDEBUGINFO: 0
      EDITIONDATE: 2022-10-31T15:33:32+03:00
      DISPLAYSCRIPT: | 
        GDC_DLGATTRUSERDEFINEDUSR_GDMN_USERSETTINGSONSETUPDIALOG
        
      ENTEREDPARAMS: !!binary > 
        U0xQUlBSU1QGAAAAU0VOREVSBgAAAFNFTkRFUgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABGTlNU
        RkxQUg==
      SCRIPT: | 
        Option Explicit
        Sub gdc_dlgAttrUserDefinedUSR_GDMN_USERSETTINGSOnSetupDialog(ByVal Sender)
        '*** Данный код необходим для вызова встроенного обработчика ***
        '*** В случае его удаления возможно нарушение работы системы ***
          Call   Inherited(Sender, "OnSetupDialog", Array(Sender))
        '*** конец кода поддержки встроенного обработчика            ***
          dim rdGroup
          set rdGroup = Sender.OwnerForm.GetComponent("usrg_rdGroup")
          rdGroup.ItemIndex = 0
          dim Creator, ibsql, gdcObject
          set gdcObject = Sender.OwnerForm.gdcObject
          set Creator = new TCreator
          set ibsql = Creator.GetObject(nil, "TIBSQL", "")
          ibsql.Transaction = gdcBaseManager.ReadTransaction
          if gdcObject.FieldByName("USR$NAMEOFVALUE").IsNull and _
            not gdcObject.FieldByName("USR$PARAMVALUE").IsNull then
            ibsql.Close
            ibsql.SQL.Text = _
              "select name " & _
              "  from gd_contact " & _
              " where id = " & gdcObject.FieldByName("USR$PARAMVALUE").AsString
            ibsql.ExecQuery
            if ibsql.RecordCount > 0  then
              gdcObject.FieldByName("USR$NAMEOFVALUE").AsString = _
                ibsql.FieldByName("name").AsString
            end if
          end if
        End Sub
        
  - 
    Properties: 
      Class: "TgdcEvent"
      RUID: 147039952_1730903579
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
    Fields: 
      DISABLE: 0
      EVENTNAME: "ONSETUPDIALOG"
      FUNCTIONKEY: "147039995_1730903579 gdc_dlgAttrUserDefinedUSR_GDMN_USERSETTINGSOnSetupDialog"
      OBJECTKEY: "147039748_1730903579 gdc_dlgAttrUserDefinedUSR_GDMN_USERSETTINGS"
      OBJECTNAME: "gdc_dlgAttrUserDefinedUSR_GDMN_USERSETTINGS"
      PARENTNAME: ~
      EDITIONDATE: 2022-10-31T15:33:32+03:00
  - 
    Properties: 
      Class: "TgdcReportGroup"
      RUID: 147040022_1730903579
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
      HeadObject: 147040028_1730903579
    Fields: 
      PARENT: ~
      NAME: "Отчеты(gdc_dlgAttrUserDefinedUSR_GDMN_USERS)"
      DESCRIPTION: ~
      USERGROUPNAME: "147040022_1730903579"
      EDITIONDATE: 2021-09-13T11:55:33+03:00
  - 
    Properties: 
      Class: "TgdcMacrosGroup"
      RUID: 147040021_1730903579
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
      HeadObject: 147040028_1730903579
    Fields: 
      PARENT: ~
      NAME: "Локальные макросы"
      CLASSNAME: ""
      ISGLOBAL: 0
      OBJECTNAME: "gdc_dlgAttrUserDefinedUSR_GDMN_USERS"
      OBJECTPARENT: ~
      SUBTYPE: ""
      EDITIONDATE: 2021-09-13T11:55:33+03:00
      DESCRIPTION: ~
  - 
    Properties: 
      Class: "TgdcDelphiObject"
      RUID: 147027156_1730903579
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
      HeadObject: 147040028_1730903579
    Fields: 
      PARENT: ~
      NAME: "gdc_dlgAttrUserDefinedUSR_GDMN_USERS"
      CLASSNAME: ""
      DESCRIPTION: ~
      MACROSGROUPKEY: "147040021_1730903579 Локальные макросы"
      OBJECTNAME: "gdc_dlgAttrUserDefinedUSR_GDMN_USERS"
      OBJECTTYPE: 0
      REPORTGROUPKEY: "147040022_1730903579 Отчеты(gdc_dlgAttrUserDefinedUSR_GDMN_USERS)"
      SUBTYPE: ""
      EDITIONDATE: 2021-09-13T11:55:33+03:00
  - 
    Properties: 
      Class: "TgdcFunction"
      RUID: 147040030_1730903579
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
      HeadObject: 147040028_1730903579
    Fields: 
      NAME: "gdc_dlgAttrUserDefinedUSR_GDMN_USERSOnShow"
      COMMENT: ~
      EVENT: "ONSHOW"
      FUNCTIONTYPE: ~
      GROUPNAME: ~
      INHERITEDRULE: 0
      LANGUAGE: "VBScript"
      LOCALNAME: ~
      MODIFYDATE: ~
      MODULE: "EVENTS"
      MODULECODE: "147027156_1730903579 gdc_dlgAttrUserDefinedUSR_GDMN_USERS"
      OBJECTNAME: "gdc_dlgAttrUserDefinedUSR_GDMN_USERS"
      OWNERNAME: ~
      PUBLICFUNCTION: 1
      SHORTCUT: ~
      USEDEBUGINFO: 0
      EDITIONDATE: 2022-10-07T13:30:11+03:00
      DISPLAYSCRIPT: | 
        GDC_DLGATTRUSERDEFINEDUSR_GDMN_USERSONSHOW
        
      ENTEREDPARAMS: !!binary > 
        U0xQUlBSU1QGAAAAU0VOREVSBgAAAFNFTkRFUgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABGTlNU
        RkxQUg==
      SCRIPT: | 
        Option Explicit
        Sub gdc_dlgAttrUserDefinedUSR_GDMN_USERSOnShow(ByVal Sender)
        '*** Данный код необходим для вызова встроенного обработчика ***
        '*** В случае его удаления возможно нарушение работы системы ***
          Call   Inherited(Sender, "OnShow", Array(Sender))
        '*** конец кода поддержки встроенного обработчика            ***
          dim gdcParams, gdcDevices
          set gdcParams = Sender.OwnerForm.GetComponent("usrg_dSetUserSettings")
          gdcParams.ExtraConditions.Clear
          gdcParams.ExtraConditions.Add("z.USR$USERKEY = " & Sender.gdcObject.FieldByName("USR$CONTACTKEY").AsInteger)
          gdcParams.Open
          
          set gdcDevices = Sender.OwnerForm.GetComponent("usrg_dSetUserDevices")
          gdcDevices.ExtraConditions.Clear
          gdcDevices.ExtraConditions.Add("z.USR$GDMN_USER = " & Sender.gdcObject.FieldByName("ID").AsInteger)
          gdcDevices.Open
        End Sub
        
  - 
    Properties: 
      Class: "TgdcEvent"
      RUID: 147040028_1730903579
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
    Fields: 
      DISABLE: 0
      EVENTNAME: "ONSHOW"
      FUNCTIONKEY: "147040030_1730903579 gdc_dlgAttrUserDefinedUSR_GDMN_USERSOnShow"
      OBJECTKEY: "147027156_1730903579 gdc_dlgAttrUserDefinedUSR_GDMN_USERS"
      OBJECTNAME: "gdc_dlgAttrUserDefinedUSR_GDMN_USERS"
      PARENTNAME: ~
      EDITIONDATE: 2022-10-07T13:30:11+03:00
  - 
    Properties: 
      Class: "TgdcFunction"
      RUID: 147040056_1730903579
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
      HeadObject: 147040054_1730903579
    Fields: 
      NAME: "gdc_dlgAttrUserDefinedUSR_GDMN_USERSOnSaveSettings"
      COMMENT: ~
      EVENT: "ONSAVESETTINGS"
      FUNCTIONTYPE: ~
      GROUPNAME: ~
      INHERITEDRULE: 0
      LANGUAGE: "VBScript"
      LOCALNAME: ~
      MODIFYDATE: ~
      MODULE: "EVENTS"
      MODULECODE: "147027156_1730903579 gdc_dlgAttrUserDefinedUSR_GDMN_USERS"
      OBJECTNAME: "gdc_dlgAttrUserDefinedUSR_GDMN_USERS"
      OWNERNAME: ~
      PUBLICFUNCTION: 1
      SHORTCUT: ~
      USEDEBUGINFO: 0
      EDITIONDATE: 2022-10-07T13:28:22+03:00
      DISPLAYSCRIPT: | 
        GDC_DLGATTRUSERDEFINEDUSR_GDMN_USERSONSAVESETTINGS
        
      ENTEREDPARAMS: !!binary > 
        U0xQUlBSU1QGAAAAU0VOREVSBgAAAFNFTkRFUgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABGTlNU
        RkxQUg==
      SCRIPT: | 
        Option Explicit
        Sub gdc_dlgAttrUserDefinedUSR_GDMN_USERSOnSaveSettings(ByVal Sender)
        '*** Данный код необходим для вызова встроенного обработчика ***
        '*** В случае его удаления возможно нарушение работы системы ***
          Call   Inherited(Sender, "OnSaveSettings", Array(Sender))
        '*** конец кода поддержки встроенного обработчика            ***
           Sender.SaveGrid(Sender.GetComponent("usrg_grUserSettings"))
           Sender.SaveGrid(Sender.GetComponent("usrg_grUserDevices"))
        End Sub
        
  - 
    Properties: 
      Class: "TgdcEvent"
      RUID: 147040054_1730903579
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
    Fields: 
      DISABLE: 0
      EVENTNAME: "ONSAVESETTINGS"
      FUNCTIONKEY: "147040056_1730903579 gdc_dlgAttrUserDefinedUSR_GDMN_USERSOnSaveSettings"
      OBJECTKEY: "147027156_1730903579 gdc_dlgAttrUserDefinedUSR_GDMN_USERS"
      OBJECTNAME: "gdc_dlgAttrUserDefinedUSR_GDMN_USERS"
      PARENTNAME: ~
      EDITIONDATE: 2022-10-07T13:28:22+03:00
  - 
    Properties: 
      Class: "TgdcFunction"
      RUID: 147040053_1730903579
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
      HeadObject: 147040051_1730903579
    Fields: 
      NAME: "gdc_dlgAttrUserDefinedUSR_GDMN_USERSOnLoadSettingsAfterCreate"
      COMMENT: ~
      EVENT: "ONLOADSETTINGSAFTERCREATE"
      FUNCTIONTYPE: ~
      GROUPNAME: ~
      INHERITEDRULE: 0
      LANGUAGE: "VBScript"
      LOCALNAME: ~
      MODIFYDATE: ~
      MODULE: "EVENTS"
      MODULECODE: "147027156_1730903579 gdc_dlgAttrUserDefinedUSR_GDMN_USERS"
      OBJECTNAME: "gdc_dlgAttrUserDefinedUSR_GDMN_USERS"
      OWNERNAME: ~
      PUBLICFUNCTION: 1
      SHORTCUT: ~
      USEDEBUGINFO: 0
      EDITIONDATE: 2022-10-31T15:37:32+03:00
      DISPLAYSCRIPT: | 
        GDC_DLGATTRUSERDEFINEDUSR_GDMN_USERSONLOADSETTINGSAFTERCREATE
        
      ENTEREDPARAMS: !!binary > 
        U0xQUlBSU1QGAAAAU0VOREVSBgAAAFNFTkRFUgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABGTlNU
        RkxQUg==
      SCRIPT: | 
        Option Explicit
        Sub gdc_dlgAttrUserDefinedUSR_GDMN_USERSOnLoadSettingsAfterCreate(ByVal Sender)
        '*** Данный код необходим для вызова встроенного обработчика ***
        '*** В случае его удаления возможно нарушение работы системы ***
          Call   Inherited(Sender, "OnLoadSettingsAfterCreate", Array(Sender))
        '*** конец кода поддержки встроенного обработчика            ***
          Sender.LoadGrid(Sender.FindComponent("usrg_grUserDevices"))
          Sender.LoadGrid(Sender.GetComponent("usrg_grUserSettings"))
        End Sub
        
  - 
    Properties: 
      Class: "TgdcEvent"
      RUID: 147040051_1730903579
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
    Fields: 
      DISABLE: 0
      EVENTNAME: "ONLOADSETTINGSAFTERCREATE"
      FUNCTIONKEY: "147040053_1730903579 gdc_dlgAttrUserDefinedUSR_GDMN_USERSOnLoadSettingsAfterCreate"
      OBJECTKEY: "147027156_1730903579 gdc_dlgAttrUserDefinedUSR_GDMN_USERS"
      OBJECTNAME: "gdc_dlgAttrUserDefinedUSR_GDMN_USERS"
      PARENTNAME: ~
      EDITIONDATE: 2022-10-31T15:37:32+03:00
  - 
    Properties: 
      Class: "TgdcFunction"
      RUID: 147040171_1730903579
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
      HeadObject: 147040169_1730903579
    Fields: 
      NAME: "usrg_actAddSettingOnExecute"
      COMMENT: ~
      EVENT: "ONEXECUTE"
      FUNCTIONTYPE: ~
      GROUPNAME: ~
      INHERITEDRULE: 0
      LANGUAGE: "VBScript"
      LOCALNAME: ~
      MODIFYDATE: ~
      MODULE: "EVENTS"
      MODULECODE: "147027156_1730903579 gdc_dlgAttrUserDefinedUSR_GDMN_USERS"
      OBJECTNAME: "gdc_dlgAttrUserDefinedUSR_GDMN_USERS"
      OWNERNAME: ~
      PUBLICFUNCTION: 1
      SHORTCUT: ~
      USEDEBUGINFO: 0
      EDITIONDATE: 2021-09-13T14:26:14+03:00
      DISPLAYSCRIPT: | 
        USRG_ACTADDSETTINGONEXECUTE
        
      ENTEREDPARAMS: !!binary > 
        U0xQUlBSU1QGAAAAU0VOREVSBgAAAFNFTkRFUgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABGTlNU
        RkxQUg==
      SCRIPT: | 
        Option Explicit
        Sub usrg_actAddSettingOnExecute(ByVal Sender)
        '*** Данный код необходим для вызова встроенного обработчика ***
        '*** В случае его удаления возможно нарушение работы системы ***
          Call   Inherited(Sender, "OnExecute", Array(Sender))
        '*** конец кода поддержки встроенного обработчика            ***
          dim gdcParams, userKey
          set gdcParams = Sender.OwnerForm.GetComponent("usrg_dSetUserSettings")
          userKey = Sender.OwnerForm.gdcObject.FieldByName("USR$CONTACTKEY").AsInteger
          if userKey > 0  then
            gdcParams.Insert
            gdcParams.FieldByName("USR$USERKEY").AsInteger = userKey
            call gdcParams.CreateDialog("")
          end if
        End Sub
        
  - 
    Properties: 
      Class: "TgdcDelphiObject"
      RUID: 147040168_1730903579
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
      HeadObject: 147040169_1730903579
    Fields: 
      PARENT: "147027156_1730903579 gdc_dlgAttrUserDefinedUSR_GDMN_USERS"
      NAME: "usrg_actAddSetting"
      CLASSNAME: ""
      DESCRIPTION: ~
      MACROSGROUPKEY: ~
      OBJECTNAME: "usrg_actAddSetting"
      OBJECTTYPE: 0
      REPORTGROUPKEY: ~
      SUBTYPE: ""
      EDITIONDATE: 2021-09-13T14:23:58+03:00
  - 
    Properties: 
      Class: "TgdcEvent"
      RUID: 147040169_1730903579
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
    Fields: 
      DISABLE: 0
      EVENTNAME: "ONEXECUTE"
      FUNCTIONKEY: "147040171_1730903579 usrg_actAddSettingOnExecute"
      OBJECTKEY: "147040168_1730903579 gdc_dlgAttrUserDefinedUSR_GDMN_USERS\\usrg_actAddSetting"
      OBJECTNAME: "usrg_actAddSetting"
      PARENTNAME: "gdc_dlgAttrUserDefinedUSR_GDMN_USERS"
      EDITIONDATE: 2021-09-13T14:26:14+03:00
  - 
    Properties: 
      Class: "TgdcFunction"
      RUID: 147040179_1730903579
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
      HeadObject: 147040177_1730903579
    Fields: 
      NAME: "usrg_actDeleteSettingOnExecute"
      COMMENT: ~
      EVENT: "ONEXECUTE"
      FUNCTIONTYPE: ~
      GROUPNAME: ~
      INHERITEDRULE: 0
      LANGUAGE: "VBScript"
      LOCALNAME: ~
      MODIFYDATE: ~
      MODULE: "EVENTS"
      MODULECODE: "147027156_1730903579 gdc_dlgAttrUserDefinedUSR_GDMN_USERS"
      OBJECTNAME: "gdc_dlgAttrUserDefinedUSR_GDMN_USERS"
      OWNERNAME: ~
      PUBLICFUNCTION: 1
      SHORTCUT: ~
      USEDEBUGINFO: 0
      EDITIONDATE: 2021-09-13T14:27:31+03:00
      DISPLAYSCRIPT: | 
        USRG_ACTDELETESETTINGONEXECUTE
        
      ENTEREDPARAMS: !!binary > 
        U0xQUlBSU1QGAAAAU0VOREVSBgAAAFNFTkRFUgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABGTlNU
        RkxQUg==
      SCRIPT: | 
        Option Explicit
        Sub usrg_actDeleteSettingOnExecute(ByVal Sender)
        '*** Данный код необходим для вызова встроенного обработчика ***
        '*** В случае его удаления возможно нарушение работы системы ***
          Call   Inherited(Sender, "OnExecute", Array(Sender))
        '*** конец кода поддержки встроенного обработчика            ***
          Sender.OwnerForm.FindComponent("usrg_dSetUserSettings").DeleteMultiple(Sender.OwnerForm.FindComponent("usrg_grUserSettings").SelectedRows)
        End Sub
        
  - 
    Properties: 
      Class: "TgdcDelphiObject"
      RUID: 147040176_1730903579
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
      HeadObject: 147040177_1730903579
    Fields: 
      PARENT: "147027156_1730903579 gdc_dlgAttrUserDefinedUSR_GDMN_USERS"
      NAME: "usrg_actDeleteSetting"
      CLASSNAME: ""
      DESCRIPTION: ~
      MACROSGROUPKEY: ~
      OBJECTNAME: "usrg_actDeleteSetting"
      OBJECTTYPE: 0
      REPORTGROUPKEY: ~
      SUBTYPE: ""
      EDITIONDATE: 2021-09-13T14:24:14+03:00
  - 
    Properties: 
      Class: "TgdcEvent"
      RUID: 147040177_1730903579
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
    Fields: 
      DISABLE: 0
      EVENTNAME: "ONEXECUTE"
      FUNCTIONKEY: "147040179_1730903579 usrg_actDeleteSettingOnExecute"
      OBJECTKEY: "147040176_1730903579 gdc_dlgAttrUserDefinedUSR_GDMN_USERS\\usrg_actDeleteSetting"
      OBJECTNAME: "usrg_actDeleteSetting"
      PARENTNAME: "gdc_dlgAttrUserDefinedUSR_GDMN_USERS"
      EDITIONDATE: 2021-09-13T14:27:31+03:00
  - 
    Properties: 
      Class: "TgdcFunction"
      RUID: 147040175_1730903579
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
      HeadObject: 147040173_1730903579
    Fields: 
      NAME: "usrg_actEditSettingOnExecute"
      COMMENT: ~
      EVENT: "ONEXECUTE"
      FUNCTIONTYPE: ~
      GROUPNAME: ~
      INHERITEDRULE: 0
      LANGUAGE: "VBScript"
      LOCALNAME: ~
      MODIFYDATE: ~
      MODULE: "EVENTS"
      MODULECODE: "147027156_1730903579 gdc_dlgAttrUserDefinedUSR_GDMN_USERS"
      OBJECTNAME: "gdc_dlgAttrUserDefinedUSR_GDMN_USERS"
      OWNERNAME: ~
      PUBLICFUNCTION: 1
      SHORTCUT: ~
      USEDEBUGINFO: 0
      EDITIONDATE: 2021-09-13T14:27:11+03:00
      DISPLAYSCRIPT: | 
        USRG_ACTEDITSETTINGONEXECUTE
        
      ENTEREDPARAMS: !!binary > 
        U0xQUlBSU1QGAAAAU0VOREVSBgAAAFNFTkRFUgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABGTlNU
        RkxQUg==
      SCRIPT: | 
        Option Explicit
        Sub usrg_actEditSettingOnExecute(ByVal Sender)
        '*** Данный код необходим для вызова встроенного обработчика ***
        '*** В случае его удаления возможно нарушение работы системы ***
          Call   Inherited(Sender, "OnExecute", Array(Sender))
        '*** конец кода поддержки встроенного обработчика            ***
          call Sender.OwnerForm.GetComponent("usrg_dSetUserSettings").EditDialog("")
        End Sub
        
  - 
    Properties: 
      Class: "TgdcDelphiObject"
      RUID: 147040172_1730903579
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
      HeadObject: 147040173_1730903579
    Fields: 
      PARENT: "147027156_1730903579 gdc_dlgAttrUserDefinedUSR_GDMN_USERS"
      NAME: "usrg_actEditSetting"
      CLASSNAME: ""
      DESCRIPTION: ~
      MACROSGROUPKEY: ~
      OBJECTNAME: "usrg_actEditSetting"
      OBJECTTYPE: 0
      REPORTGROUPKEY: ~
      SUBTYPE: ""
      EDITIONDATE: 2021-09-13T14:24:11+03:00
  - 
    Properties: 
      Class: "TgdcEvent"
      RUID: 147040173_1730903579
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
    Fields: 
      DISABLE: 0
      EVENTNAME: "ONEXECUTE"
      FUNCTIONKEY: "147040175_1730903579 usrg_actEditSettingOnExecute"
      OBJECTKEY: "147040172_1730903579 gdc_dlgAttrUserDefinedUSR_GDMN_USERS\\usrg_actEditSetting"
      OBJECTNAME: "usrg_actEditSetting"
      PARENTNAME: "gdc_dlgAttrUserDefinedUSR_GDMN_USERS"
      EDITIONDATE: 2021-09-13T14:27:11+03:00
  - 
    Properties: 
      Class: "TgdcFunction"
      RUID: 147040220_1730903579
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
    Fields: 
      NAME: "web_formatDate"
      COMMENT: ~
      EVENT: ~
      FUNCTIONTYPE: ~
      GROUPNAME: ~
      INHERITEDRULE: 0
      LANGUAGE: "VBScript"
      LOCALNAME: ~
      MODIFYDATE: ~
      MODULE: "UNKNOWN"
      MODULECODE: "1010001_17 APPLICATION"
      OBJECTNAME: "APPLICATION"
      OWNERNAME: ~
      PUBLICFUNCTION: 1
      SHORTCUT: ~
      USEDEBUGINFO: 0
      EDITIONDATE: 2021-09-14T13:13:17+03:00
      DISPLAYSCRIPT: | 
        WEB_FORMATDATE
        
      ENTEREDPARAMS: !!binary > 
        U0xQUlBSU1QFAAAAUERBVEUFAAAAUERBVEUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAARk5TVEZM
        UFI=
      SCRIPT: | 
        Option Explicit
        Function web_formatDate(pDate)
          web_formatDate = Year(pDate) & "-" & Right("0" & Month(pDate), 2) & "-" & Right("0" & Day(pDate), 2)
        End Function
        
  - 
    Properties: 
      Class: "TgdcFunction"
      RUID: 174582564_1693379973
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
    Fields: 
      NAME: "web_post_documents1_0_0"
      COMMENT: ~
      EVENT: ~
      FUNCTIONTYPE: ~
      GROUPNAME: ~
      INHERITEDRULE: 0
      LANGUAGE: "VBScript"
      LOCALNAME: ~
      MODIFYDATE: ~
      MODULE: "UNKNOWN"
      MODULECODE: "1010001_17 APPLICATION"
      OBJECTNAME: "APPLICATION"
      OWNERNAME: ~
      PUBLICFUNCTION: 1
      SHORTCUT: ~
      USEDEBUGINFO: 0
      EDITIONDATE: 2022-01-25T15:17:46+03:00
      DISPLAYSCRIPT: | 
        WEB_POST_DOCUMENTS1_0_0
        
      ENTEREDPARAMS: !!binary > 
        U0xQUlBSU1QFAAAATVNHSUQFAAAATVNHSUQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAARk5TVFBS
        U1QIAAAAQ09OU1VNRVIIAAAAQ09OU1VNRVIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAARk5TVFBS
        U1QLAAAAQ09OU1VNRVJLRVkLAAAAQ09OU1VNRVJLRVkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        Rk5TVFBSU1QIAAAAUFJPRFVDRVIIAAAAUFJPRFVDRVIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        Rk5TVFBSU1QLAAAAUFJPRFVDRVJLRVkLAAAAUFJPRFVDRVJLRVkAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAARk5TVFBSU1QHAAAAQ09NUEFOWQcAAABDT01QQU5ZAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAEZOU1RQUlNUCgAAAENPTVBBTllLRVkKAAAAQ09NUEFOWUtFWQAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAABGTlNUUFJTVAkAAABBUFBTWVNURU0JAAAAQVBQU1lTVEVNAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAEZOU1RQUlNUDAAAAEFQUFNZU1RFTUtFWQwAAABBUFBTWVNURU1LRVkAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAARk5TVFBSU1QHAAAAUEFZTE9BRAcAAABQQVlMT0FEAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAEZOU1RQUlNUBwAAAFZFUlNJT04HAAAAVkVSU0lPTgAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAABGTlNURkxQUg==
      SCRIPT: | 
        '#include web_formatDate
        Option Explicit
        Function web_post_documents1_0_0(msgID, consumer, consumerkey, producer, producerkey, Company, Companykey, AppSystem, AppSystemkey, payload, version)
          web_post_documents1_0_0 = ""
          dim web_service, a()
          set web_service = (New TVB_Web_Service)(AppSystemkey)
          dim countParams,  i, documentkey,  functionkey, FuncParamArray, r, documenttypeAlias, status
          dim ibsql, systemkey, msgParams, documenttypeKey, documenttypeName, number, DocumentDate, spread
          countParams = payload.ObjectItemsCount
          dim Creator, ibsqlUser, rOther
          set Creator = new TCreator
          set ibsql = Creator.GetObject(nil, "TIBSQL", "")
          ibsql.Transaction = gdcBaseManager.ReadTransaction
          set ibsqlUser = Creator.GetObject(nil, "TIBSQL", "")
          ibsqlUser.Transaction = gdcBaseManager.ReadTransaction
          ' Проверяем, ответ по созданным/измененным документам пересылать только
          ' консуммеру или всем пользователям
          ibsql.Close
          ibsql.SQL.Text = _
            "SELECT " & _
            "  coalesce(b.USR$SPREAD, 0) as spread " & _
            "FROM " & _
            "  USR$GDMN_SYSTEMS b " & _
            "WHERE b.ID = :systemkey "
          ibsql.ParamByName("systemkey").AsInteger = AppSystemkey
          ibsql.ExecQuery
          spread = ibsql.FieldByName("spread").AsInteger
        
          ibsqlUser.Close
          ibsqlUser.SQL.Text = _
            "SELECT " & _
            "  u.USR$CONTACTKEY, " & _
            "  u.USR$MOBILEID, " & _
            "  u.USR$MOBILELOGIN " & _
            "FROM " & _
            "  USR$GDMN_USERS u " & _
            "WHERE u.USR$SYSTEMKEY = :systemkey " & _
            "  and coalesce(u.USR$NOTACTIVE, 0) = 0 "
          if spread = 0 then
            ibsqlUser.SQL.Text = ibsqlUser.SQL.Text + _
              "  and u.USR$MOBILEID = :userkey "
            ibsqlUser.ParamByName("userkey").AsString = consumerkey
          end if
          ibsqlUser.ParamByName("systemkey").AsInteger = AppSystemkey
          ibsqlUser.ExecQuery
        
          dim tempConsumer, tempConsumerkey
        
         'Подготавливаем json файл, в котором будет содержаться массив ответов о статусе созданных документов,
         ' если в параметрах документа включен параметр "С возвратом состояния"
        
          dim oRoot, response, withResponse, cancelReason
          set oRoot  = Creator.GetObject(nil, "TStringList", "")
          dim rUser, rCommon, rCommonOther
        
          dim applStatus, specApprove, specCancel
          countParams = payload.ObjectItemsCount
          rCommon = ""
          rCommonOther = ""
          for i = 0 to countParams - 1
            set msgParams = payload.ObjectItem(i)
            documentkey = msgParams.SimpleValue("id", "")
            documenttypeKey = msgParams.Value("documentType").SimpleValue("id", "")
            documenttypeName = web_service.JSonString(msgParams.Value("documentType").SimpleValue("name", ""))
            documenttypeAlias = web_service.JSonString(msgParams.Value("documentType").SimpleValue("description", ""))
            number = web_service.JSonString(msgParams.SimpleValue("number", ""))
            documentdate = msgParams.SimpleValue("documentDate", "")
            ibsql.Close
            ibsql.SQL.Text = _
              "SELECT  b.USR$FUNCTIONKEY, coalesce(b.USR$WITHRESPONSE, 0) as USR$WITHRESPONSE " & _
              "FROM USR$GDMN_DOCUMENTS b " & _
              "  JOIN gd_function f ON f.ID = b.USR$FUNCTIONKEY " & _
              "WHERE b.USR$SYSTEMKEY = :systemkey " & _
              "  AND  ( b.USR$DOCUMENTTYPE = :documenttype " & _
              "   OR b.USR$TABLEKEY  = :documenttype) " & _
              "  AND coalesce(b.USR$VERSION, 1) = :ver "
            ibsql.ParamByName("systemkey").AsInteger = AppSystemkey
            ibsql.ParamByName("documenttype").AsInteger = documenttypeKey
            ibsql.ParamByName("ver").AsInteger = version
            ibsql.ExecQuery
            dim n
            n = 0
            if not ibsql.EOF  then
              functionkey = ibsql.FieldByName("USR$FUNCTIONKEY").AsInteger
              if functionkey > 0  then
                withResponse = ibsql.FieldByName("USR$WITHRESPONSE").AsInteger
                response = ""
               ' FuncParamArray = Array(documentkey, applStatus, specApprove, specCancel, cancelReason)
                dim typeError, otherHead
                otherHead = ""
                typeError = 0
                FuncParamArray = Array(msgParams, consumerkey)
                response = System.ExecuteScriptFunction(functionkey, FuncParamArray)
                 ' response представляет собой массив
                 ' response(0) - это ответ на создание-редактирование документа
                 ' response(1) - это тип ошибки typeError
                 ' response(2) - это  otherHead - заголовок для редактируемых документов,
                 ' который мы рассылаем все пользователям ( только если птичка
                 ' Синхронизировать всех пользователей в настройках системы включена
                otherHead = response(2)
                typeError = response(1)
              end if
              if withResponse > 0 then
                 r = _
                   "{" & _
                   """id"":""" & documentkey & ""","  & _
                   """number"":" & number & "," & _
                   """documentDate"":""" & documentdate & """," & _
                   """documentType"":" & _
                   "{""id"":""" & documenttypeKey & """," & _
                   """name"":" & documenttypeName & "," & _
                   """description"":" & documenttypeAlias & "},"
                 rOther = r
                 if response(0) > "" then
                   if typeError = 2 then
                     r = r &  """status"":""PROCESSED_DEADLOCK"
                   else
                     r = r &  """status"":""PROCESSED_INCORRECT"
                   end if
                   r = r & """," &  """errorMessage"":""" & response(0) & """"
                   rOther = ""
                 else
                   r = r &  """status"":""PROCESSED"
                   if otherHead <> "" then
                     r = r &  """, "
                   else
                     r = r &  """"
                   end if
                   r = r & otherHead
        
                  ' r = r &  """} "
                   rOther = rOther &   """status"":""ARCHIVE"
                   rOther = rOther &  """, "
                   rOther = rOther & otherHead
                 end if
              end if
            end if
            if  (i < countParams - 1) then
              r = r  & "},"
              if rOther <> "" then
                rOther = rOther  & "},"
              end if
            end if
            'oRoot.Add(r)
            rCommon = rCommon  & r
            rCommonOther = rCommonOther  & rOther
          next
          while not ibsqlUser.EOF
            tempConsumerkey = ibsqlUser.FieldByName("USR$MOBILEID").AsString
            tempConsumer = ibsqlUser.FieldByName("USR$MOBILELOGIN").AsString
            if  tempConsumer =  Consumer then
              rUser =  _
                "{""id"":""" & msgID & ""","  & _
                """status"": ""READY""," & _
                """head"":{" & _
                """appSystem"":""" & AppSystem & """, " & _
                """company"":{" & _
                """id"":""" & Companykey & """, " & _
                """name"":""" & Company & """}," & _
                """producer"":{" & _
                """id"":""" & producerkey & """, " & _
                """name"":""" & producer & """}," & _
                """consumer"":{" & _
                """id"":""" & tempConsumerkey & """, " & _
                """name"":""" & tempConsumer & """}," & _
                """dateTime"":""" & web_formatDate(Date()) & """"  & _
                "}, " & _
                """body"":{" & _
                """type"":""DOCS""," & _
                """version"":""" & version & """, " & _
                """payload"":["
              rUser = rUser & rCommon & "} ]} } "
            else
              if  rCommonOther <> "" then
                 rUser =  _
                  "{""id"":""" & ibsqlUser.FieldByName("USR$CONTACTKEY").AsString & ""","  & _
                  """status"": ""READY""," & _
                  """head"":{" & _
                  """appSystem"":""" & AppSystem & """, " & _
                  """company"":{" & _
                  """id"":""" & Companykey & """, " & _
                  """name"":""" & Company & """}," & _
                  """producer"":{" & _
                  """id"":""" & producerkey & """, " & _
                  """name"":""" & producer & """}," & _
                  """consumer"":{" & _
                  """id"":""" & tempConsumerkey & """, " & _
                  """name"":""" & tempConsumer & """}," & _
                  """dateTime"":""" & web_formatDate(Date()) & """"  & _
                  "}, " & _
                  """body"":{" & _
                  """type"":""DOCS""," & _
                  """version"":""" & version & """, " & _
                  """payload"":["
                rUser = rUser  &  rCommonOther & "} ]} } "
              end if
            end if
            if rUser <> "" then
              oRoot.Add(rUser)
              ReDim Preserve a(n)
              a(n) = rUser
              n = n + 1
            end if
            ibsqlUser.Next
          wend
         ' oRoot.Add (" ]}")
        '  oRoot.Add (" }")
        
          if withResponse then
           ' web_post_documents1_0_0 = oRoot.Text
           web_post_documents1_0_0 = a
          end if
        
        End Function
        
    Set: 
      - 
        Table: "RP_ADDITIONALFUNCTION"
        Items: 
          - 
            ADDFUNCTIONKEY: "147040220_1730903579 web_formatDate"
  - 
    Properties: 
      Class: "TgdcFunction"
      RUID: 147040221_1730903579
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
    Fields: 
      NAME: "web_JSonString"
      COMMENT: ~
      EVENT: ~
      FUNCTIONTYPE: ~
      GROUPNAME: ~
      INHERITEDRULE: 0
      LANGUAGE: "VBScript"
      LOCALNAME: ~
      MODIFYDATE: ~
      MODULE: "UNKNOWN"
      MODULECODE: "1010001_17 APPLICATION"
      OBJECTNAME: "APPLICATION"
      OWNERNAME: ~
      PUBLICFUNCTION: 1
      SHORTCUT: ~
      USEDEBUGINFO: 0
      EDITIONDATE: 2021-09-14T13:15:19+03:00
      DISPLAYSCRIPT: | 
        WEB_JSONSTRING
        
      ENTEREDPARAMS: !!binary > 
        U0xQUlBSU1QFAAAAVkFMVUUFAAAAVkFMVUUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAARk5TVEZM
        UFI=
      SCRIPT: | 
        Option Explicit
        Function web_JSonString(Value)
            dim i, c, Res
            Res = """"
        
            dim b, f, r, n, t
            b = ChrW(8)
            f = vbFormFeed
            r = vbCr
            n = vbLf
            t = vbTab
            For i = 1 To Len(Value)
              c = Mid(Value, i, 1)
              Select Case c
                Case """" Res = Res & "\"""
                Case "\"  Res = Res & "\\"
                Case "/"  Res = Res & "/"
                Case b    Res = Res & "\b"
                Case f    Res = Res & "\f"
                Case r    Res = Res & "\r"
                Case n    Res = Res & "\n"
                Case t    Res = Res & "\t"
                Case Else
                  If AscW(c) >= 0 And AscW(c) <= 31 Then
                    c = Right("0" & Hex(AscW(c)), 2)
                    Res = Res & "\u00" & c
                  Else
                    Res = Res & c
                  End If
              End Select
            Next
            web_JSonString = Res & """"
        End Function
        
  - 
    Properties: 
      Class: "TgdcFunction"
      RUID: 174582325_1693379973
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
    Fields: 
      NAME: "web_getDocuments1_0_0"
      COMMENT: ~
      EVENT: ~
      FUNCTIONTYPE: ~
      GROUPNAME: ~
      INHERITEDRULE: 0
      LANGUAGE: "VBScript"
      LOCALNAME: ~
      MODIFYDATE: ~
      MODULE: "UNKNOWN"
      MODULECODE: "1010001_17 APPLICATION"
      OBJECTNAME: "APPLICATION"
      OWNERNAME: ~
      PUBLICFUNCTION: 1
      SHORTCUT: ~
      USEDEBUGINFO: 0
      EDITIONDATE: 2022-04-13T12:11:58+03:00
      DISPLAYSCRIPT: | 
        WEB_GETDOCUMENTS1_0_0
        
      ENTEREDPARAMS: !!binary > 
        U0xQUlBSU1QFAAAATVNHSUQFAAAATVNHSUQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAARk5TVFBS
        U1QIAAAAQ09OU1VNRVIIAAAAQ09OU1VNRVIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAARk5TVFBS
        U1QLAAAAQ09OU1VNRVJLRVkLAAAAQ09OU1VNRVJLRVkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        Rk5TVFBSU1QIAAAAUFJPRFVDRVIIAAAAUFJPRFVDRVIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        Rk5TVFBSU1QLAAAAUFJPRFVDRVJLRVkLAAAAUFJPRFVDRVJLRVkAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAARk5TVFBSU1QHAAAAQ09NUEFOWQcAAABDT01QQU5ZAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAEZOU1RQUlNUCgAAAENPTVBBTllLRVkKAAAAQ09NUEFOWUtFWQAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAABGTlNUUFJTVAkAAABBUFBTWVNURU0JAAAAQVBQU1lTVEVNAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAEZOU1RQUlNUDAAAAEFQUFNZU1RFTUtFWQwAAABBUFBTWVNURU1LRVkAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAARk5TVFBSU1QJAAAAT0JKUEFSQU1TCQAAAE9CSlBBUkFNUwAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAABGTlNUUFJTVAcAAABWRVJTSU9OBwAAAFZFUlNJT04AAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAARk5TVFBSU1QKAAAAQ09OVEFDVEtFWQoAAABDT05UQUNUS0VZAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAEZOU1RGTFBS
      SCRIPT: | 
        '#include web_formatDate
        '#include web_JSonString
        Option Explicit
        Function web_getDocuments1_0_0(msgID, consumer, consumerkey, producer, producerkey, Company, Companykey, AppSystem, AppSystemkey, objParams, version, contactkey)
           web_getDocuments1_0_0 = false
        
           dim Json, Creator, ibsql, k
           set Creator = new TCreator
           set ibsql = Creator.GetObject(nil, "TIBSQL", "")
           ibsql.Transaction = gdcBaseManager.ReadTransaction
           'объект для работы с типами данных
           dim Enc
           set Enc = new TVB_xml_EncodingFunctions
           'подготавливаем json файл, в котором будет содержаться массив запрашиваемых документов
           set Json = Creator.GetObject(nil, "TStringList", "")
           Json.Text =  _
             "{""id"":""" & msgID & ""","  & _
             """status"": ""READY""," & _
             """head"":{" & _
             """appSystem"":""" & AppSystem & """, " & _
             """company"":{" & _
             """id"":""" & Companykey & """, " & _
             """name"":" & web_JSonString(Company) & "}," & _
             """producer"":{" & _
             """id"":""" & producerkey & """, " & _
             """name"":""" & producer & """}," & _
             """consumer"":{" & _
             """id"":""" & consumerkey & """, " & _
             """name"":""" & consumer & """}," & _
             """dateTime"":""" & web_formatDate(Date()) & """"  & _
             "}, " & _
             """body"":{" & _
             """type"":""DOCS""," & _
             """version"":""" & version & """, " & _
             """payload"":["
        
          dim FuncParamArray, countParams, n, DateBegin, DateEnd,  _
            oData, msgParams, functionkey
          if not IsNull(objParams) then
            countParams = objParams.ObjectItemsCount
            reDim  datePar(countParams - 1, 1)
            'Если в массиве параметров несколько периодов, за которые нужны документы
            for n = 0 to countParams - 1
              set msgParams = objParams.ObjectItem(n)
              datePar(n, 0) = Enc.DecodeDate(msgParams.SimpleValue("dateBegin", ""))
              datePar(n, 1) = Enc.DecodeDate(msgParams.SimpleValue("dateEnd", ""))
            next
          end if
          ibsql.Close
          ibsql.SQL.Text = _
            "SELECT  b.USR$SENDFUNCTION, coalesce(b.USR$COUNTDAYS, 0) as COUNTDAYS " & _
            "FROM USR$GDMN_DOCUMENTS b " & _
            "  JOIN gd_function f ON f.ID = b.USR$SENDFUNCTION " & _
            "WHERE b.USR$SYSTEMKEY = :systemkey " & _
            "  AND NOT b.USR$SENDFUNCTION IS NUll "  & _
            "  AND coalesce(b.USR$VERSION, 1) = :ver "
          ibsql.ParamByName("systemkey").AsInteger = AppSystemkey
          ibsql.ParamByName("ver").AsInteger = version
          ibsql.ExecQuery
          while not ibsql.EOF
            if countParams = 0 then
              reDim  datePar(0, 1)
              datePar(0, 0) = date - ibsql.FieldByName("COUNTDAYS").AsInteger
              datePar(0, 1) = date
            end if
            functionkey = ibsql.FieldByName("USR$SENDFUNCTION").AsInteger
            if functionkey > 0  then
              for k = LBound(datePar) to UBound(datePar)
                FuncParamArray = Array(datePar(k, 0), datePar(k, 1), version, contactkey)
                oData = System.ExecuteScriptFunction(functionkey, FuncParamArray)
                if k < UBound(datePar) then
                  oData = oData & ", "
                end if
                Json.Add(oData)
              next
            end if
            ibsql.Next
          wend
          Json.Add (" ]}")
          Json.Add (" }")
          web_getDocuments1_0_0 = Json.Text
          Json.Clear
          if Assigned(Json) then
            Creator.DestroyObject(Json)
          end if
        End Function
        
    Set: 
      - 
        Table: "RP_ADDITIONALFUNCTION"
        Items: 
          - 
            ADDFUNCTIONKEY: "147040220_1730903579 web_formatDate"
          - 
            ADDFUNCTIONKEY: "147040221_1730903579 web_JSonString"
  - 
    Properties: 
      Class: "TgdcFunction"
      RUID: 147040222_1730903579
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
    Fields: 
      NAME: "web_cur_replace"
      COMMENT: ~
      EVENT: ~
      FUNCTIONTYPE: ~
      GROUPNAME: ~
      INHERITEDRULE: 0
      LANGUAGE: "VBScript"
      LOCALNAME: ~
      MODIFYDATE: ~
      MODULE: "UNKNOWN"
      MODULECODE: "1010001_17 APPLICATION"
      OBJECTNAME: "APPLICATION"
      OWNERNAME: ~
      PUBLICFUNCTION: 1
      SHORTCUT: ~
      USEDEBUGINFO: 0
      EDITIONDATE: 2021-09-14T13:28:11+03:00
      DISPLAYSCRIPT: | 
        WEB_CUR_REPLACE
        
      ENTEREDPARAMS: !!binary > 
        U0xQUlBSU1QDAAAATlVNAwAAAE5VTQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABGTlNURkxQUg==
      SCRIPT: | 
        Option Explicit
        Function web_cur_replace(num)
          web_cur_replace =  Replace(num, ",", ".")
        End Function
        
  - 
    Properties: 
      Class: "TgdcFunction"
      RUID: 147023048_1677413867
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
    Fields: 
      NAME: "GetRefDataRepo"
      COMMENT: ~
      EVENT: ~
      FUNCTIONTYPE: ~
      GROUPNAME: ~
      INHERITEDRULE: 0
      LANGUAGE: "VBScript"
      LOCALNAME: ~
      MODIFYDATE: 2021-06-21T11:02:21+03:00
      MODULE: "UNKNOWN"
      MODULECODE: "1010001_17 APPLICATION"
      OBJECTNAME: "APPLICATION"
      OWNERNAME: ~
      PUBLICFUNCTION: 1
      SHORTCUT: ~
      USEDEBUGINFO: 0
      EDITIONDATE: 2022-02-18T14:46:34+03:00
      DISPLAYSCRIPT: | 
        GETREFDATAREPO
        
      ENTEREDPARAMS: !!binary > 
        U0xQUlBSU1QKAAAAQ09OVEFDVEtFWQoAAABDT05UQUNUS0VZAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAEZOU1RQUlNUCAAAAENPTlNVTUVSCAAAAENPTlNVTUVSAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAEZOU1RQUlNUCwAAAENPTVBBTllOQU1FCwAAAENPTVBBTllOQU1FAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAEZOU1RQUlNUDQAAAEFQUFNZU1RFTU5BTUUNAAAAQVBQU1lTVEVNTkFNRQAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAABGTlNUUFJTVAwAAABBUFBTWVNURU1LRVkMAAAAQVBQU1lTVEVN
        S0VZAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEZOU1RQUlNUCAAAAEhBU0VSUk9SCAAAAEhBU0VS
        Uk9SAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEZOU1RQUlNUBgAAAEFFUlJPUgYAAABBRVJST1IA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAARk5TVEZMUFI=
      SCRIPT: | 
        '#include WEB_FORMATDATE
        '#include WEB_CUR_REPLACE
        '#include WEB_JSONSTRING
        Option Explicit
        Function GetRefDataRepo(contactkey, consumer, CompanyName, AppSystemName, AppSystemkey, byRef hasError, byRef AError)
          GetRefDataRepo = false
          hasError = false
          AError = ""
          dim Json, Creator
          set Creator = new TCreator
          set Json = Creator.GetObject(nil, "TStringList", "")
          'Подготавливаем json файл, в котором будет содержаться массив справочников
          dim oRoot
          Json.Text =  _
            "{""head"":{" & _
            """id"":""" & contactkey & ""","  & _
            """companyId"":""" & CompanyName & """," & _
            """consumer"":""" & consumer & """," & _
            """producer"":""gdmn"","  & _
            """sedingTime"":""" & web_formatDate(Date()) & ""","  & _
            """appSystem"":""" & AppSystemName & """}, " & _
            """body"":{" & _
            """type"":""data""," & _
            """payload"":["
        
          dim qSelRefs
          dim i, oData, isFirst, refType, arrFields, arr
          dim arr2, arr0, arr1, deptkey, remains
        
          'Запрос выбора данных по каждому справочнику из таблицы Настройки справочников
          set qSelRefs = Creator.GetObject(nil, "TIBSQL", "")
          qSelRefs.Transaction = gdcBaseManager.ReadTransaction
          qSelRefs.SQL.Text = _
            "SELECT " & _
            "  R.ID, " & _
            "  R.USR$SQLQUERY, " & _
            "  R.USR$LIST_JSON, " & _
            "  R.USR$NAME, " & _
            "  R.USR$MOBILENAME " & _
            "FROM " & _
            "  USR$GDMN_REFERENCES R " & _
            "WHERE " & _
            "  R.USR$SYSTEMKEY = :SYSTEMKEY "
          qSelRefs.ParamByName("systemkey").AsInteger = AppSystemkey
          qSelRefs.ExecQuery
        
          dim qSelFields
          set qSelFields = Creator.GetObject(nil, "TIBSQL", "")
          qSelFields.Transaction = gdcBaseManager.ReadTransaction
          qSelFields.SQL.Text = _
            "SELECT " & _
            "  b.USR$NAME, " & _
            "  b.USR$MOBILEMANE, " & _
            "  coalesce(t.USR$NOTPRIMITIVE, 0) as notprimitive, " & _
            "  r.RELATIONNAME, " & _
            "  f.FIELDNAME, " & _
            "  t.id as type " & _
            "FROM " & _
            "  USR$GDMN_QUERYFIELDS b " & _
            "  left join USR$JSON_TYPES t on t.ID = b.USR$TYPEFIELD " & _
            "  left join at_relations r on r.ID = b.USR$RELATIONNAME " & _
            "  left join at_relation_fields f on f.ID = b.USR$RELATIONFILED " & _
            "WHERE " & _
            "  b.USR$REFERENCELINE = :refLine "
            
          dim qObjectField
          set qObjectField = Creator.GetObject(nil, "TIBSQL", "")
          qObjectField.Transaction = gdcBaseManager.ReadTransaction
          
          dim qSelParams
          set qSelParams = Creator.GetObject(nil, "TIBSQL", "")
          qSelParams.Transaction = gdcBaseManager.ReadTransaction
          if consumer = "gdmn" then
            qSelParams.SQL.Text = _
              "SELECT " & _
              "  PLINE.USR$PARAMCODE, PLINE.USR$VALUE " & _
              "FROM " & _
              "  USR$GDMN_USERS u " & _
              "  LEFT JOIN USR$GDMN_PARAMS P ON P.ID = U.USR$PARAMSKEY " & _
              "  LEFT JOIN USR$GDMN_PARAMSLINE PLINE ON PLINE.USR$MASTERKEY = P.ID " & _
              "WHERE " & _
              " P.USR$SYSTEMKEY = :SYSTEMKEY "
          else
            qSelParams.SQL.Text = _
              "SELECT " & _
              "  PLINE.USR$PARAMCODE, PLINE.USR$VALUE " & _
              "FROM " & _
              "  USR$GDMN_USERS u " & _
              "  LEFT JOIN USR$GDMN_PARAMS P ON P.ID = U.USR$PARAMSKEY " & _
              "  LEFT JOIN USR$GDMN_PARAMSLINE PLINE ON PLINE.USR$MASTERKEY = P.ID " & _
              "WHERE " & _
              "  U.USR$MOBILEID = :CONSUMER " & _
              "  AND P.USR$SYSTEMKEY = :SYSTEMKEY "
            qSelParams.ParamByName("consumer").AsString = consumer
          end if
          qSelParams.ParamByName("systemkey").AsInteger = AppSystemkey
          
          dim qSel, sqlQuery
          set qSel = Creator.GetObject(nil, "TIBSQL", "")
          qSel.Transaction = gdcBaseManager.ReadTransaction
        
          'Цикл по справочникам
          while not qSelRefs.eof
            'Тип справочника
            refType = qSelRefs.FieldByName("USR$MOBILENAME").AsString
            'Список полей справочника
            if qSelRefs.FieldByName("USR$LIST_JSON").AsVariant > "" then
              arrFields = Split(qSelRefs.FieldByName("USR$LIST_JSON").AsVariant, ",")
            end if
        
            sqlQuery = qSelRefs.FieldByName("USR$SQLQUERY").AsString
            'Вытягиваем данные из соответсвия полей
            dim refID
            refID = qSelRefs.FieldByName("id").AsInteger
            qSelParams.Close
            qSelParams.ExecQuery
        
            while not qSelParams.eof
              sqlQuery = Replace(sqlQuery, "%" & UCASE(qSelParams.FieldByName("USR$PARAMCODE").AsString) & "%", " " & " AND " & qSelParams.FieldByName("USR$VALUE").AsString)
              qSelParams.Next
            wend
        
            'Вытягиваем данные из справочника
            qSel.Close
            qSel.SQL.Text = sqlQuery
            if InStr(LCase(sqlQuery), ":contactkey") > 0 then
              qSel.ParamByName("contactkey").AsInteger = contactkey
            end if
            on error resume next
            qSel.ExecQuery
            if err.Number <> 0 then
               hasError = true
               AError = "Ошибка в запросе! " & err.Description
              exit function
            end if
            on error goto 0
        
            Json.Add ( _
              "{""id"":""" & qSelRefs.FieldByName("id").AsString & """," & _
              """name"":""" & qSelRefs.FieldByName("USR$NAME").AsString & """," & _
              """type"":""" & refType & """," & """data"":[")
        
            deptkey = ""
            remains = false
            isFirst = true
        
            while not qSel.eof
              if refType = "remains" then
                'Если остатки, то выгружаем в структуру в разрезе подразделений и даты
                'data: [ {contact: 123, date: '2020.10.10', data: [{goodId: 123, price: 1.55, q: 5}, {goodId: 567, price: 1.66, q: 6}]} ]
                remains = true
                oData = "{"
                for i = LBound(arrFields) to UBound(arrFields)
                  arr = Split(trim(arrFields(i)), "=")
        
                  if IsNumeric(qSel.FieldByName(trim(arr(1))).AsString) then
                    arr2 = trim(qSel.FieldByName(trim(arr(1))).AsString)
                    arr2 = web_JSonString(web_cur_replace(arr2))
                  else
                    arr2 = web_JSonString(trim(qSel.FieldByName(trim(arr(1))).AsString))
                  end if
        
                  if arr(1) = "DEPTKEY" then
                    if deptkey <> qSel.FieldByName(trim(arr(1))).AsString then
                      if not isFirst then
                        oData = "]}," & oData
                      end if
                      oData = oData & """" &  trim(arr(0)) & """:" & arr2  & _
                      ",""date"":""" & web_formatDate(Date()) & """" & _
                      ",""data"":[{"
                      deptkey = qSel.FieldByName(trim(arr(1))).AsString
                    end if
                  else
                    oData = oData & """" &  trim(arr(0)) & """:" & arr2
                    if (i <> UBound(arrFields)) then
                      oData = oData & ","
                    end if
                  end if
                next
              else
                'Справочники кроме Остатков
                oData = "{"
               ' for i = LBound(arrFields) to UBound(arrFields)
        '            arr = Split(trim(arrFields(i)), "=")
        '            if IsNumeric(qSel.FieldByName(trim(arr(1))).AsString) then
        '              arr2 = trim(qSel.FieldByName(trim(arr(1))).AsString)
        '              arr2 = web_JSonString(web_cur_replace(arr2))
        '            else
        '              arr2 = web_JSonString(trim(qSel.FieldByName(trim(arr(1))).AsString))
        '            end if
        '            oData = oData + """" &  trim(arr(0)) & """:" & arr2
        '            if (i <> UBound(arrFields)) then
        '              oData = oData + ","
        '            end if
        '          next
                if refType = "goods" then
                  oData = oData & """" &  "id" & """:" & web_JSonString(trim(qSel.FieldByName("ID").AsString)) & "," & _
                    """" &  "name" & """:" & web_JSonString(trim(qSel.FieldByName("NAME").AsString)) & "," & _
                    """" &  "alias" & """:" & web_JSonString(trim(qSel.FieldByName("ALIAS").AsString)) & "," & _
                    """" &  "barcode" & """:" & web_JSonString(trim(qSel.FieldByName("BARCODE").AsString)) & "," & _
                    """" &  "value" & """:" & web_JSonString(trim(qSel.FieldByName("VALUENAME").AsString)) & "," & _
                    """" &  "isFrac" & """:" & web_JSonString(trim(qSel.FieldByName("ISFRAC").AsString)) & "," & _
                    """" &  "weightCode" & """:" & web_JSonString(trim(qSel.FieldByName("WEIGHTCODE").AsString))
                elseif refType = "goodgroups" then
                  oData = oData & """" &  "id" & """:" & web_JSonString(trim(qSel.FieldByName("ID").AsString)) & "," & _
                    """" &  "name" & """:" & web_JSonString(trim(qSel.FieldByName("NAME").AsString))
                else
                  qSelFields.Close
                  qSelFields.ParamByName("refline").AsInteger = refID
                  qSelFields.ExecQuery
                  while not qSelFields.EOF
                    arr0 = qSelFields.FieldByName("USR$MOBILEMANE").AsString
                    arr1 = qSelFields.FieldByName("USR$NAME").AsString
                    dim relationName, fieldName, viewName
                    relationName = qSelFields.FieldByName("RELATIONNAME").AsString
                    fieldName = qSelFields.FieldByName("FIELDNAME").AsString
                    if (relationName = "" or fieldName = "") then
                      if IsNumeric(qSel.FieldByName(trim(arr1)).AsString) then
                        arr2 = trim(qSel.FieldByName(trim(arr1)).AsString)
                        if qSelFields.FieldByName("notPrimitive").AsInteger = 0 then
                          arr2 = web_cur_replace(arr2)
                          'Если строка
                          if qSelFields.FieldByName("TYPE").AsInteger = _
                             gdcBaseManager.GetIDByRUIDString("147023302_1677413867") then
                            arr2 = web_JSonString(arr2)
                          end if
                        else
                          arr2 = web_JSonString(arr2)
                        end if
                      else
                        if  qSelFields.FieldByName("TYPE").AsInteger = _
                             gdcBaseManager.GetIDByRUIDString("147023726_1677413867") then
                          arr2 = web_JSonString(web_formatDate(qSel.FieldByName(trim(arr1)).AsString))
                        else
                          arr2 = web_JSonString(trim(qSel.FieldByName(trim(arr1)).AsString))
                        end if
                      end if
                      oData = oData + """" &  trim(arr0) & """:" & arr2
                    else
                      arr2 = trim(qSel.FieldByName(trim(arr1)).AsString)
                      if arr2 > "" then
                        qObjectField.Close
                        qObjectField.SQL.Text  = _
                          "select " & fieldName & " from " & relationName & " where id = " & arr2
                        qObjectField.ExecQuery
                        viewName = web_JSonString(trim(qObjectField.FieldByName(fieldName).AsString))
                        oData = oData + """" &  trim(arr0) & """:" & _
                        "{""id"":""" & arr2 & """," & _
                        """name"":" & viewName & "}"
                      else
                         oData = oData + """" &  trim(arr0) & """:"""""
                      end if
                    end if
                    qSelFields.Next
                    if not qSelFields.EOF then
                      oData = oData + ","
                    end if
                  wend
                end if
              end if
              qSel.Next
              oData = oData & "}"
        
              if not qSel.eof then
                if remains then
                  if deptkey = qSel.FieldByName("deptkey").AsString then
                    oData = oData & ","
                  end if
                else
                  oData = oData & ","
                end if
              end if
        
              Json.Add(oData)
              isFirst = false
            wend
        
            if Json.Count > 0 then Json.Add("]}")
        
            if remains then
              if Json.Count > 0 then Json.Add("]}")
              remains = false
            end if
        
            qSelRefs.Next
            if not qSelRefs.eof then
              if Json.Count > 0 then Json.Add(",")
            end if
          wend
          if Json.Count > 0 then Json.Add("]}," & _
            """id"":""" & contactkey & """}")
          GetRefDataRepo = Json.Text
          Json.Clear
          if Assigned(Json) then
            Creator.DestroyObject(Json)
          end if
        end function
        
    Set: 
      - 
        Table: "RP_ADDITIONALFUNCTION"
        Items: 
          - 
            ADDFUNCTIONKEY: "147040220_1730903579 web_formatDate"
          - 
            ADDFUNCTIONKEY: "147040222_1730903579 web_cur_replace"
          - 
            ADDFUNCTIONKEY: "147040221_1730903579 web_JSonString"
  - 
    Properties: 
      Class: "TgdcFunction"
      RUID: 1176277028_1457844439
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
      HeadObject: 1176277900_1457844439
    Fields: 
      NAME: "web_autoGetReferens"
      COMMENT: ~
      EVENT: ~
      FUNCTIONTYPE: ~
      GROUPNAME: ~
      INHERITEDRULE: 0
      LANGUAGE: "VBScript"
      LOCALNAME: ~
      MODIFYDATE: 2021-06-21T11:17:21+03:00
      MODULE: "UNKNOWN"
      MODULECODE: "1010001_17 APPLICATION"
      OBJECTNAME: "APPLICATION"
      OWNERNAME: ~
      PUBLICFUNCTION: 1
      SHORTCUT: ~
      USEDEBUGINFO: ~
      EDITIONDATE: 2022-04-29T13:30:35+03:00
      DISPLAYSCRIPT: | 
        WEB_AUTOGETREFERENS
        
      ENTEREDPARAMS: !!binary > 
        U0xQUlBSU1QMAAAASVNTSUxFTlRNT0RFDAAAAElTU0lMRU5UTU9ERQAAAAAAAAAAAAAAAAsAAAAA
        AAAAAAAAAABGTlNUUFJTVAkAAABTWVNURU1LRVkJAAAAU1lTVEVNS0VZAAAAAAAAAAAAAAAACwAA
        AAAAAAAAAAAAAEZOU1RQUlNUBgAAAElTTU9DSwYAAABJU01PQ0sAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAARk5TVFBSU1QDAAAARlVOAwAAAEZVTgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABGTlNU
        UFJTVAcAAABWRVJTSU9OBwAAAFZFUlNJT04AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAARk5TVEZM
        UFI=
      SCRIPT: | 
        '#include GETREFDATAFUN
        '#include GETREFDATAREPO
        Option Explicit
        Function web_autoGetReferens(isSilentMode, systemkey, isMock, fun, version)
          ' Если режим MOCK, просто формируем файл
          dim Creator, Company, AppSystem
          set Creator = new TCreator
          if isMock then
            set web_service = (New TVB_Web_Service)(systemkey)
            set ibsql = Creator.GetObject(nil, "TIBSQL", "")
            ibsql.Transaction = gdcBaseManager.ReadTransaction
            ibsql.Close
            ibsql.SQL.Text = _
               "select first 1 " & _
               "  u.USR$CONTACTKEY " & _
               "from  USR$GDMN_USERS u " & _
               "where u.USR$SYSTEMKEY = :systemkey "
            ibsql.ParamByName("systemkey").AsInteger = systemkey
            ibsql.ExecQuery
            if ibsql.RecordCount > 0 then
              contactkey = ibsql.FieldByName("USR$CONTACTKEY").AsInteger
              consumerId = "gdmn"
              Company = web_service.Company
              AppSystem = "AppSystem"
              hasError = false
              AError = ""
              exportData =  GetRefDataRepo(contactkey, consumerId, Company, AppSystem, systemkey, hasError, AError)
              Dim fs, f, LocalPath, JSONFileName
              LocalPath = web_service.LogPath
              JSONFileName = "messages.json"
              Set fs = CreateObject("Scripting.FileSystemObject")
              Set f = fs.CreateTextFile(LocalPath & JSONFileName, True)
              f.Write exportData
              f.Close
              call Application.MessageBox("Экспорт выполнен!" , "Внимание!", vbInformation + vbOkOnly + vbApplicationModal)
            else
              call Application.MessageBox("Экспорт не выполнен! Должен быть хотя бы один пользователь мобильного приложения!" , "Внимание!", vbInformation + vbOkOnly + vbApplicationModal)
            end if
          else
            dim web_service
            set web_service = (New TVB_Web_Service)(systemkey)
        
            dim P : set P = Creator.GetObject(nil, "TgdccProgress", "")
            'Вход пользователя для автозадачи
            call web_service.Login(web_service.TaskUserLogin, web_service.TaskUserPassw)
        
            if web_service.RequestStatus <> 200 then
              call Application.MessageBox("Экспорт не выполнен! Смотрите файл с ошибками!" , "Внимание!", vbInformation + vbOkOnly + vbApplicationModal)
              exit function
            else
              'Удаление всех сообщений
              call web_service.DeleteMessages()
              'Выход пользователя для автозадачи
              call web_service.Logout()
        
              dim ibsql, qUsers
              set ibsql = Creator.GetObject(nil, "TIBSQL", "")
              ibsql.Transaction = gdcBaseManager.ReadTransaction
              ibsql.Close
              ibsql.SQL.Text = _
                 "select " & _
                 "  count(u.ID) as n " & _
                 "from  USR$GDMN_USERS u " & _
                 "  join USR$GDMN_SYSTEMS s on s.ID = u.USR$SYSTEMKEY " & _
                 "  left join gd_contact c on c.ID = u.USR$CONTACTKEY " & _
                 "where u.USR$SYSTEMKEY = :systemkey " & _
                 "  and coalesce(u.USR$NOTACTIVE, 0) = 0 "
        
              ibsql.ParamByName("systemkey").AsInteger = systemkey
              ibsql.ExecQuery
              qUsers = ibsql.FieldByName("n").AsInteger
        
              if not isSilentMode then
                P.StartWork "GDMN", "Идет экспорт справочников на сервер. Пожалуйста, подождите...", qUsers, True, True
              end if
              '____________
              if qUsers > 0 then
                ibsql.Close
                ibsql.SQL.Text = _
                   "select " & _
                   "  c.NAME, " & _
                   "  u.USR$CONTACTKEY, " & _
                   "  u.USR$SYSTEMKEY, " & _
                   "  u.USR$MOBILEID " & _
                   "from  USR$GDMN_USERS u " & _
                   "  join USR$GDMN_SYSTEMS s on s.ID = u.USR$SYSTEMKEY " & _
                   "  left join gd_contact c on c.ID = u.USR$CONTACTKEY " & _
                   "where u.USR$SYSTEMKEY = :systemkey " & _
                   "  and coalesce(u.USR$NOTACTIVE, 0) = 0 AND COALESCE(u.USR$MOBILEID, '') <> '' "
                ibsql.ParamByName("systemkey").AsInteger = systemkey
                ibsql.ExecQuery
        
                ' По каждому пользователю создаем запись Json
                dim contactkey, consumerId, exportData
        
                while not ibsql.EOF
                  if not isSilentMode then
                    P.StartStep ibsql.FieldByName("NAME").AsString, 1
                  end if
                  'Вход пользователя для автозадачи
                  call web_service.Login(web_service.TaskUserLogin, web_service.TaskUserPassw)
        
                  if web_service.RequestStatus = 200 then
                    contactkey = ibsql.FieldByName("USR$CONTACTKEY").AsInteger
                    consumerId = trim(ibsql.FieldByName("USR$MOBILEID").AsString)
                   ' call web_service.GetRefDataSL(contactkey, consumerId)
                   ' exportData = web_service.RefData
                     
                     dim hasError, AError
                     hasError = false
                     AError = ""
                     exportData =  GetRefDataRepo(contactkey, consumerId, web_service.Company, web_service.AppSystem, systemkey, hasError, AError)
        
                     if hasError then
                       if  not isSilentMode then
                         call Application.MessageBox("Экспорт не выполнен! " & AError, "Внимание!", vbInformation + vbOkOnly + vbApplicationModal)
                       end if
                       exit function
                     end if
                    'отправлем сообщение с данными
                     call web_service.SendMessage(exportData)
                    'Выход пользователя для автозадачи
                    call web_service.Logout()
                  end if
                  ibsql.Next
                wend
              end if
              '____________
              if not isSilentMode then
                if web_service.HasError then
                  P.EndWork "Экспорт выполнен с ошибками! Смотрите файл с ошибками!", False
                else
                  P.EndWork "Экспорт успешно выполнен!", False
                end if
              end if
            end if
          end if
        End Function
        
    Set: 
      - 
        Table: "RP_ADDITIONALFUNCTION"
        Items: 
          - 
            ADDFUNCTIONKEY: "1210388423_1548332366 GetRefDataFun"
          - 
            ADDFUNCTIONKEY: "147023048_1677413867 GetRefDataRepo"
  - 
    Properties: 
      Class: "TgdcFunction"
      RUID: 147109513_1270221956
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
    Fields: 
      NAME: "web_getMessageFromServer"
      COMMENT: ~
      EVENT: ~
      FUNCTIONTYPE: ~
      GROUPNAME: ~
      INHERITEDRULE: 0
      LANGUAGE: "VBScript"
      LOCALNAME: ~
      MODIFYDATE: 2021-06-15T18:45:03+03:00
      MODULE: "UNKNOWN"
      MODULECODE: "1010001_17 APPLICATION"
      OBJECTNAME: "APPLICATION"
      OWNERNAME: ~
      PUBLICFUNCTION: 1
      SHORTCUT: ~
      USEDEBUGINFO: 0
      EDITIONDATE: 2022-04-08T17:17:41+03:00
      DISPLAYSCRIPT: | 
        WEB_GETMESSAGEFROMSERVER
        
      ENTEREDPARAMS: !!binary > 
        U0xQUlBSU1QMAAAASVNTSUxFTlRNT0RFDAAAAElTU0lMRU5UTU9ERQAAAAAAAAAAAAAAAAsAAAAA
        AAAAAAAAAABGTlNUUFJTVAkAAABBUFBTWVNURU0KAAAAz+7k8ejx8uXs4AAAAAAAAAAAAAAAAAsA
        AAAAAAAAAAAAAABGTlNURkxQUg==
      SCRIPT: | 
        '#include GETREFDATAFUN
        '#include GETREFDATAREPO
        '#include WEB_QUERYPOST
        '#include WEB_POST_DOCUMENTS
        '#include WEB_QUERYDELETE
        '#include WEB_GETREFERENCES
        '#include WEB_QUERYGET
        '#include web_getDocuments
        Option Explicit
        Function web_getMessageFromServer(isSilentMode, appSystem)
          web_getMessageFromServer = ""
          dim web_service
          set web_service = (New TVB_Web_Service)(appSystem)
        
          'Вход пользователя
          call web_service.Login(web_service.UserLogin, web_service.UserPassw)
        
          If web_service.RequestStatus = 200 or web_service.RequestStatus = 403 Then
            'получаем все json файлы для Гедымина
            call web_service.GetMessages()
            
            if web_service.RequestStatus = 200 and Assigned(web_service.RequestData) then
              dim obj, msgType, msgName, exportData, payload, objResult, m, msgId, msgConsumer, msgProducer
              set obj = web_service.RequestData
        
              dim countResults, isOk
              countResults = obj.Value("data").ObjectItemsCount
              objResult = obj.SimpleValue("result", "")
              dim cash, countRef, countSettings, countDocs, _
                cashRef(), cashSettings(), cashDocs()
              countRef = -1
              countSettings = -1
              countDocs = -1
        
              for m = 0 to countResults - 1
                set objResult = obj.Value("data").ObjectItem(m)
                msgID = objResult.Value("head").SimpleValue("id", "")
                msgType = objResult.Value("body").SimpleValue("type", "")
                msgConsumer = objResult.Value("head").SimpleValue("producer", "")
                msgProducer = objResult.Value("head").SimpleValue("consumer", "")
                cash = msgConsumer & "_" & msgProducer
        
                set payload = objResult.Value("body").Value("payload")
                
                select case msgType
                  'Если в json файле пришла команда, разбираем ее и отправляем ответ
                  case "cmd"
                    msgName = payload.SimpleValue("name", "")
                    select case msgName
                      'если пришел запрос на справочники
                      case "get_references"
                        'if web_service.GetRefDataSL(msgID, msgConsumer) then
         '                 exportData = web_service.RefData
                         if inStr(join(cashRef, ","), cash & "_" & "get_references") > 0 then
                            call web_service.DeleteMessage(msgID)
                         else
                           dim hasError, AError
                           hasError = false
                           AError = ""
                           'exportData = GetRefDataFun(msgID, msgConsumer, web_service.Company, web_service.AppSystem, appSystem, hasError, AError)
                           exportData = GetRefDataRepo(msgID, msgConsumer, web_service.Company, web_service.AppSystem, appSystem, hasError, AError)
        
                           if hasError then
                             if  not isSilentMode then
                               call Application.MessageBox("Экспорт не выполнен! " & AError, "Внимание!", vbInformation + vbOkOnly + vbApplicationModal)
                             end if
                             exit function
                           end if
                                  
                            'отправлем сообщение с данными
                            call web_service.SendMessage(exportData)
        
                            if web_service.RequestStatus = 201 then
                              'удаляем сообщение
                              call web_service.DeleteMessage(msgID)
                              countRef = countRef + 1
                              redim Preserve cashRef(countRef)
                              cashRef(countRef) = cash & "_" & "get_references"
                            end if
                          end if
                        'end if
                        
                      case "get_SellDocuments"
                        if  inStr(join(cashDocs, ","), cash & "_" & "GET_DOCUMENTS") > 0  then
                          call web_service.DeleteMessage(msgID)
                        else
                          exportData = web_getDocuments(web_service.company, objResult.Value("head"), objResult.Value("body"),  payload.Value("params"))
                          'отправлем сообщение с данными
                          call web_service.SendMessage(exportData)
                          if web_service.RequestStatus = 201 then
                            'удаляем сообщение
                            call web_service.DeleteMessage(msgID)
                            countDocs = countDocs + 1
                            redim Preserve cashDocs(countDocs)
                            cashDocs(countDocs) = cash & "_" & "get_SellDocuments"
                          end if
                        end if
                      end select
                      
                   case "data"
                     msgName = payload.SimpleValue("name", "")
                     select case msgName
                       'если пришел файл с данными, загружаем их на базу и удаляем сообщение
                      case "SellDocument"
                        dim respLine
                        if Assigned(payload.Value("params")) then
                          if web_post_documents(payload.Value("params"), web_service.appSystem, web_service.company, msgConsumer, msgID, respLine) then
                            'удаляем сообщение
                            call web_service.DeleteMessage(msgID)
                            if respLine <> "" then
                              'отправлем сообщение с данными
                              call web_service.SendMessage(respLine)
                            end if
                          end if
                        end if
                    end select
                end select
              next
            end if
            
            'Выход пользователя
            call web_service.Logout()
            
            if not isSilentMode then
              if web_service.HasError then
                call Application.MessageBox("Обработка запросов выполнена с ошибками! Смотрите файл с ошибками!", "Внимание!", vbInformation + vbOkOnly + vbApplicationModal)
              else
                call Application.MessageBox("Обработка запросов успешно выполнена!", "Внимание!", vbInformation + vbOkOnly + vbApplicationModal)
              end if
            end if
          else
            if not isSilentMode then
              call Application.MessageBox(web_service.RequestError, "Внимание!", vbInformation + vbOkOnly + vbApplicationModal)
            end if
          end if
        End Function
        
    Set: 
      - 
        Table: "RP_ADDITIONALFUNCTION"
        Items: 
          - 
            ADDFUNCTIONKEY: "1210388423_1548332366 GetRefDataFun"
          - 
            ADDFUNCTIONKEY: "147023048_1677413867 GetRefDataRepo"
          - 
            ADDFUNCTIONKEY: "157976589_1065213694 web_queryPost"
          - 
            ADDFUNCTIONKEY: "147055046_1364314795 web_post_documents"
          - 
            ADDFUNCTIONKEY: "147033096_1397672555 web_queryDelete"
          - 
            ADDFUNCTIONKEY: "147033095_1397672555 web_getReferences"
          - 
            ADDFUNCTIONKEY: "157976591_1065213694 web_queryGet"
          - 
            ADDFUNCTIONKEY: "170497736_1488307703 web_getDocuments"
  - 
    Properties: 
      Class: "TgdcFunction"
      RUID: 147040206_1730903579
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
    Fields: 
      NAME: "web_getUserSettings1_0_0"
      COMMENT: ~
      EVENT: ~
      FUNCTIONTYPE: ~
      GROUPNAME: ~
      INHERITEDRULE: 0
      LANGUAGE: "VBScript"
      LOCALNAME: ~
      MODIFYDATE: ~
      MODULE: "UNKNOWN"
      MODULECODE: "1010001_17 APPLICATION"
      OBJECTNAME: "APPLICATION"
      OWNERNAME: ~
      PUBLICFUNCTION: 1
      SHORTCUT: ~
      USEDEBUGINFO: 0
      EDITIONDATE: 2022-10-03T17:37:31+03:00
      DISPLAYSCRIPT: | 
        WEB_GETUSERSETTINGS1_0_0
        FINALIZATION_SETTING
        
      ENTEREDPARAMS: !!binary > 
        U0xQUlBSU1QFAAAATVNHSUQFAAAATVNHSUQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAARk5TVFBS
        U1QKAAAAQ09OVEFDVEtFWQoAAABDT05UQUNUS0VZAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEZO
        U1RQUlNUCAAAAENPTlNVTUVSCAAAAENPTlNVTUVSAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEZO
        U1RQUlNUCwAAAENPTlNVTUVSS0VZCwAAAENPTlNVTUVSS0VZAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAEZOU1RQUlNUCAAAAFBST0RVQ0VSCAAAAFBST0RVQ0VSAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAEZOU1RQUlNUCwAAAFBST0RVQ0VSS0VZCwAAAFBST0RVQ0VSS0VZAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAEZOU1RQUlNUBwAAAENPTVBBTlkHAAAAQ09NUEFOWQAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAABGTlNUUFJTVAoAAABDT01QQU5ZS0VZCgAAAENPTVBBTllLRVkAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAARk5TVFBSU1QJAAAAQVBQU1lTVEVNCQAAAEFQUFNZU1RFTQAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAABGTlNUUFJTVAsAAABBUFBTWVNURU1JRAsAAABBUFBTWVNURU1JRAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAABGTlNUUFJTVAwAAABBUFBTWVNURU1LRVkMAAAAQVBQU1lTVEVN
        S0VZAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEZOU1RQUlNUBwAAAFZFUlNJT04HAAAAVkVSU0lP
        TgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABGTlNUUFJTVAUAAABPUkRFUgUAAABPUkRFUgAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAABGTlNUUFJTVAgAAABERVZJQ0VJRAgAAABERVZJQ0VJRAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAABGTlNUUFJTVAsAAABTVEFUVVNFUlJPUgsAAABTVEFUVVNFUlJP
        UgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABGTlNURkxQUg==
      SCRIPT: | 
        '#include web_formatDate
        '#include web_cur_replace
        '#include web_JSonString
        Option Explicit
        Function web_getUserSettings1_0_0(msgID, contactkey, consumer, consumerkey, producer, producerkey, Company, Companykey,  AppSystem, AppSystemId, AppSystemkey, version, order, deviceId, statusError)
          web_getUserSettings1_0_0 = Array("", false)
          dim errorMessage
          errorMessage = ""
          on error resume next
          dim Json, Creator, oData
          set Creator = new TCreator
          set Json = Creator.GetObject(nil, "TStringList", "")
          'Подготавливаем json файл, в котором будет содержаться массив справочников
          dim oRoot
          if statusError > "" then
            Json.Text =  _
              "{""status"": ""PROCESSED_INCORRECT""," & _
               """errorMessage"":""" & statusError & """, " & _
              """head"":{" & _
              """appSystem"":{" & _
              """id"":""" & AppSystemId & """, " & _
              """name"":" & web_JSonString(AppSystem) & "}," & _
              """company"":{" & _
              """id"":""" & Companykey & """, " & _
              """name"":" & web_JSonString(Company) & "}," & _
              """producer"":{" & _
              """id"":""" & producerkey & """, " & _
              """name"":""" & producer & """}," & _
              """consumer"":{" & _
              """id"":""" & consumerkey & """, " & _
              """name"":""" & consumer & """}," & _
              """dateTime"":""" & web_formatDate(Date()) & """, "  & _
              """replyTo"":""" & msgID & """, "  & _
              """order"":" & order & ", "  & _
              """deviceId"":""" & deviceId & """"  & _
              "}, " & _
              """body"":{" & _
              """type"":""SETTINGS""," & _
              """version"":" & version & ", " & _
              """payload"": {} }} "
          else
            Json.Text =  _
              "{""status"": ""READY""," & _
              """head"":{" & _
              """appSystem"":{" & _
              """id"":""" & AppSystemId & """, " & _
              """name"":" & web_JSonString(AppSystem) & "}," & _
              """company"":{" & _
              """id"":""" & Companykey & """, " & _
              """name"":" & web_JSonString(Company) & "}," & _
              """producer"":{" & _
              """id"":""" & producerkey & """, " & _
              """name"":""" & producer & """}," & _
              """consumer"":{" & _
              """id"":""" & consumerkey & """, " & _
              """name"":""" & consumer & """}," & _
              """dateTime"":""" & web_formatDate(Date()) & """, "  & _
              """replyTo"":""" & msgID & """, "  & _
              """order"":" & order & ", "  & _
              """deviceId"":""" & deviceId & """"  & _
              "}, " & _
              """body"":{" & _
              """type"":""SETTINGS""," & _
              """version"":" & version & ", " & _
              """payload"": {"
        
            'Запрос выбора дополнительных настроек по пользователю
            dim qSelRefs, qSelPar
            set qSelPar = Creator.GetObject(nil, "TIBSQL", "")
            qSelPar.Transaction = gdcBaseManager.ReadTransaction
            set qSelRefs = Creator.GetObject(nil, "TIBSQL", "")
            qSelRefs.Transaction = gdcBaseManager.ReadTransaction
            qSelRefs.SQL.Text = _
              "SELECT " & _
              "  s.USR$PARAMCODE, " & _
              "  coalesce(s.USR$VISIBLE, 0) as USR$VISIBLE, " & _
              "  s.USR$PARAMNAME, " & _
              "  s.USR$PARAMVALUE, " & _
              "  r.RELATIONNAME, " & _
              "  f.FIELDNAME, " & _
              "  s.USR$RELATIONNAME, " & _
              "  s.USR$RELATIONFIELD " & _
              "FROM " & _
              "  USR$GDMN_USERSETTINGS S " & _
              "  LEFT JOIN AT_RELATIONS r ON r.ID = s.USR$RELATIONNAME " & _
              "  LEFT JOIN AT_RELATION_FIELDS f ON f.ID = s.USR$RELATIONFIELD " & _
              "WHERE " & _
              "  s.USR$USERKEY = :USERKEY " & _
              "  AND NOT s.USR$PARAMCODE IS NULL " & _
              "  AND NOT s.USR$PARAMVALUE IS NULL "
        
            qSelRefs.ParamByName("userkey").AsInteger = contactkey
            qSelRefs.ExecQuery
        
            dim visible, description
            while not qSelRefs.EOF
              oData = ""
              oData = oData + """" &  trim(qSelRefs.FieldByName("USR$PARAMCODE").AsString) & """: {"
              description = web_JSonString(qSelRefs.FieldByName("USR$PARAMNAME").AsString)
              oData = oData + _
                """description"":" & description  & ", "
              if qSelRefs.FieldByName("USR$VISIBLE").AsInteger = 1 then
                visible = """visible"": true, "
              else
                visible = """visible"": false, "
              end if
              oData = oData + visible
              oData = oData + """data"":"
              dim OTempData
              oTempData = ""
              if qSelRefs.FieldByName("USR$RELATIONNAME").AsInteger > 0 and _
                qSelRefs.FieldByName("USR$RELATIONFIELD").AsInteger > 0 and _
                qSelRefs.FieldByName("FIELDNAME").AsString > "" then
                qSelPar.Close
                qSelPar.SQL.Text = _
                  " select " & _
                     qSelRefs.FieldByName("FIELDNAME").AsString & " as name " & _
                  " from "  & _
                     qSelRefs.FieldByName("RELATIONNAME").AsString & _
                  " where id = " & qSelRefs.FieldByName("USR$PARAMVALUE").AsInteger
                qSelPar.ExecQuery
                if Err.Number = 0 then
                  if qSelPar.RecordCount > 0 then
                    oTempData = oTempData +  "{""id"":""" & qSelRefs.FieldByName("USR$PARAMVALUE").AsString & """," & _
                          """name"":" & web_JSonString(qSelPar.FieldByName("name").AsString) & "}"
                  end if
                end if
              else
                if not (qSelRefs.FieldByName("USR$RELATIONNAME").AsInteger = 0 and _
                  qSelRefs.FieldByName("USR$RELATIONFIELD").AsInteger = 0) then
                  errorMessage =  "Ошибки в дополнительных настройках пользователя " & consumer
                end if
              end if
              if oTempData = "" and errorMessage = "" then
                oTempData = web_cur_replace(trim(qSelRefs.FieldByName("USR$PARAMVALUE").AsString))
              end if
              oData = oData +  oTempData
              qSelRefs.Next
              oData = oData & "}"
              if not qSelRefs.EOF then
                oData = oData + ","
              end if
              if errorMessage = "" then
                Json.Add(oData)
              end if
            wend
        
            if Json.Count > 0 then Json.Strings(Json.Count - 1) = Json.Strings(Json.Count - 1) & "}}}"
          end if
          web_getUserSettings1_0_0 = finalization_setting(errorMessage, Json.Text)
          Json.Clear
          if Assigned(Json) then
            Creator.DestroyObject(Json)
          end if
        End Function
        function finalization_setting(errorMessage, json)
          dim a(1)
          a(0) = errorMessage
          a(1) = json
          finalization_setting = a
        end function
        
        
    Set: 
      - 
        Table: "RP_ADDITIONALFUNCTION"
        Items: 
          - 
            ADDFUNCTIONKEY: "147040220_1730903579 web_formatDate"
          - 
            ADDFUNCTIONKEY: "147040222_1730903579 web_cur_replace"
          - 
            ADDFUNCTIONKEY: "147040221_1730903579 web_JSonString"
  - 
    Properties: 
      Class: "TgdcFunction"
      RUID: 174582153_1693379973
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
      HeadObject: 174582152_1693379973
    Fields: 
      NAME: "GetRefDataRepo1_0_0"
      COMMENT: ~
      EVENT: ~
      FUNCTIONTYPE: ~
      GROUPNAME: ~
      INHERITEDRULE: 0
      LANGUAGE: "VBScript"
      LOCALNAME: ~
      MODIFYDATE: ~
      MODULE: "UNKNOWN"
      MODULECODE: "1010001_17 APPLICATION"
      OBJECTNAME: "APPLICATION"
      OWNERNAME: ~
      PUBLICFUNCTION: 1
      SHORTCUT: ~
      USEDEBUGINFO: 0
      EDITIONDATE: 2022-04-12T20:04:11+03:00
      DISPLAYSCRIPT: | 
        GETREFDATAREPO1_0_0
        
      ENTEREDPARAMS: !!binary > 
        U0xQUlBSU1QKAAAAQ09OVEFDVEtFWQoAAABDT05UQUNUS0VZAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAEZOU1RQUlNUCAAAAENPTlNVTUVSCAAAAENPTlNVTUVSAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAEZOU1RQUlNUCwAAAENPTlNVTUVSS0VZCwAAAENPTlNVTUVSS0VZAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAEZOU1RQUlNUCAAAAFBST0RVQ0VSCAAAAFBST0RVQ0VSAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAEZOU1RQUlNUCwAAAFBST0RVQ0VSS0VZCwAAAFBST0RVQ0VSS0VZAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAEZOU1RQUlNUBwAAAENPTVBBTlkHAAAAQ09NUEFOWQAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAABGTlNUUFJTVAoAAABDT01QQU5ZS0VZCgAAAENPTVBBTllLRVkAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAARk5TVFBSU1QJAAAAQVBQU1lTVEVNCQAAAEFQUFNZU1RFTQAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAABGTlNUUFJTVAwAAABBUFBTWVNURU1LRVkMAAAAQVBQU1lTVEVN
        S0VZAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEZOU1RQUlNUCAAAAEhBU0VSUk9SCAAAAEhBU0VS
        Uk9SAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEZOU1RQUlNUBgAAAEFFUlJPUgYAAABBRVJST1IA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAARk5TVFBSU1QHAAAAVkVSU0lPTgcAAABWRVJTSU9OAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAEZOU1RGTFBS
      SCRIPT: | 
        '#include web_formatDate
        '#include web_cur_replace
        '#include web_JSonString
        Option Explicit
        Function GetRefDataRepo1_0_0(contactkey, consumer, consumerkey, producer, producerkey, Company, Companykey, AppSystem, AppSystemkey, byRef hasError, byRef AError, version)
            GetRefDataRepo1_0_0 = false
            hasError = false
            AError = ""
            dim Json, Creator
            set Creator = new TCreator
            set Json = Creator.GetObject(nil, "TStringList", "")
            'Подготавливаем json файл, в котором будет содержаться массив справочников
            dim oRoot
            Json.Text =  _
              "{""id"":""" & contactkey & ""","  & _
              """status"": ""READY""," & _
              """head"":{" & _
              """appSystem"":""" & AppSystem & """, " & _
              """company"":{" & _
              """id"":""" & Companykey & """, " & _
              """name"":" & web_JSonString(Company) & "}," & _
              """producer"":{" & _
              """id"":""" & producerkey & """, " & _
              """name"":""" & producer & """}," & _
              """consumer"":{" & _
              """id"":""" & consumerkey & """, " & _
              """name"":""" & consumer & """}," & _
              """dateTime"":""" & web_formatDate(Date()) & """"  & _
              "}, " & _
              """body"":{" & _
              """type"":""REFS""," & _
              """version"":" & version & ", " & _
              """payload"": {"
        
            dim qSelRefs
            dim i, oData, isFirst, refType, arrFields, arr
            dim arr2, arr0, arr1, arr3, arr4, deptkey, remains
        
            'Запрос выбора данных по каждому справочнику из таблицы Настройки справочников
            set qSelRefs = Creator.GetObject(nil, "TIBSQL", "")
            qSelRefs.Transaction = gdcBaseManager.ReadTransaction
            qSelRefs.SQL.Text = _
              "SELECT " & _
              "  R.ID, " & _
              "  R.USR$SQLQUERY, " & _
              "  R.USR$LIST_JSON, " & _
              "  R.USR$NAME, " & _
              "  R.USR$MOBILENAME, " & _
              "  COALESCE(R.USR$ISCROSS, 0) AS ISCROSS " & _
              "FROM " & _
              "  USR$GDMN_REFERENCES R " & _
              "WHERE " & _
              "  R.USR$SYSTEMKEY = :SYSTEMKEY "
            qSelRefs.ParamByName("systemkey").AsInteger = AppSystemkey
            qSelRefs.ExecQuery
        
            dim qSelFields
            set qSelFields = Creator.GetObject(nil, "TIBSQL", "")
            qSelFields.Transaction = gdcBaseManager.ReadTransaction
            qSelFields.SQL.Text = _
              "SELECT " & _
              "  coalesce(b.USR$MAINFIELD, 0) as mainfield, " & _
              "  b.USR$NAME, " & _
              "  b.USR$MOBILEMANE, " & _
              "  coalesce(t.USR$NOTPRIMITIVE, 0) as notprimitive, " & _
              "  r.RELATIONNAME, " & _
              "  f.FIELDNAME, " & _
              "  t.id as type " & _
              "FROM " & _
              "  USR$GDMN_QUERYFIELDS b " & _
              "  left join USR$JSON_TYPES t on t.ID = b.USR$TYPEFIELD " & _
              "  left join at_relations r on r.ID = b.USR$RELATIONNAME " & _
              "  left join at_relation_fields f on f.ID = b.USR$RELATIONFILED " & _
              "WHERE " & _
              "  b.USR$REFERENCELINE = :refLine "
              
            dim qSelMetadata
            set qSelMetadata = Creator.GetObject(nil, "TIBSQL", "")
            qSelMetadata.Transaction = gdcBaseManager.ReadTransaction
            qSelMetadata.SQL.Text = _
              "SELECT " & _
              "  b.USR$MOBILEMANE, " & _
              "  b.USR$LOCALNAME, " & _
              "  b.USR$SORTORDER, " & _
              "  coalesce(b.USR$NOTVISIBLE, 0) as USR$NOTVISIBLE " & _
              "FROM " & _
              "  USR$GDMN_QUERYFIELDS b " & _
              "WHERE " & _
              "  b.USR$REFERENCELINE = :refLine " & _
              "  AND (coalesce(b.USR$NOTVISIBLE, 0) = 1 " & _
              "    OR NOT b.USR$SORTORDER IS NULL " & _
              "    OR NOT b.USR$LOCALNAME IS NULL) "
              
            dim qObjectField
            set qObjectField = Creator.GetObject(nil, "TIBSQL", "")
            qObjectField.Transaction = gdcBaseManager.ReadTransaction
            
            dim qSelParams
            set qSelParams = Creator.GetObject(nil, "TIBSQL", "")
            qSelParams.Transaction = gdcBaseManager.ReadTransaction
            if consumer = "gdmn" then
              qSelParams.SQL.Text = _
                "SELECT " & _
                "  PLINE.USR$PARAMCODE, PLINE.USR$VALUE " & _
                "FROM " & _
                "  USR$GDMN_USERS u " & _
                "  LEFT JOIN USR$GDMN_PARAMS P ON P.ID = U.USR$PARAMSKEY " & _
                "  LEFT JOIN USR$GDMN_PARAMSLINE PLINE ON PLINE.USR$MASTERKEY = P.ID " & _
                "WHERE " & _
                " P.USR$SYSTEMKEY = :SYSTEMKEY "
            else
              qSelParams.SQL.Text = _
                "SELECT " & _
                "  PLINE.USR$PARAMCODE, PLINE.USR$VALUE " & _
                "FROM " & _
                "  USR$GDMN_USERS u " & _
                "  LEFT JOIN USR$GDMN_PARAMS P ON P.ID = U.USR$PARAMSKEY " & _
                "  LEFT JOIN USR$GDMN_PARAMSLINE PLINE ON PLINE.USR$MASTERKEY = P.ID " & _
                "WHERE " & _
                "  U.USR$MOBILEID = :CONSUMER " & _
                "  AND P.USR$SYSTEMKEY = :SYSTEMKEY "
              qSelParams.ParamByName("consumer").AsString = consumerkey
            end if
            qSelParams.ParamByName("systemkey").AsInteger = AppSystemkey
            
            dim qSel, sqlQuery
            set qSel = Creator.GetObject(nil, "TIBSQL", "")
            qSel.Transaction = gdcBaseManager.ReadTransaction
        
            'Цикл по справочникам
            while not qSelRefs.eof
              'Тип справочника
              refType = qSelRefs.FieldByName("USR$MOBILENAME").AsString
              'Список полей справочника
              if qSelRefs.FieldByName("USR$LIST_JSON").AsVariant > "" then
                arrFields = Split(qSelRefs.FieldByName("USR$LIST_JSON").AsVariant, ",")
              end if
        
              sqlQuery = qSelRefs.FieldByName("USR$SQLQUERY").AsString
              'Вытягиваем данные из соответсвия полей
              dim refID
              refID = qSelRefs.FieldByName("id").AsInteger
              qSelParams.Close
              qSelParams.ExecQuery
        
              while not qSelParams.eof
                sqlQuery = Replace(sqlQuery, "%" & UCASE(qSelParams.FieldByName("USR$PARAMCODE").AsString) & "%", " " & " AND " & qSelParams.FieldByName("USR$VALUE").AsString)
                qSelParams.Next
              wend
        
              'Вытягиваем данные из справочника
              qSel.Close
              qSel.SQL.Text = sqlQuery
              if InStr(LCase(sqlQuery), ":contactkey") > 0 then
                qSel.ParamByName("contactkey").AsInteger = contactkey
              end if
              on error resume next
              qSel.ExecQuery
              if err.Number <> 0 then
                 hasError = true
                 AError = "Ошибка в запросе! " & err.Description
                exit function
              end if
              on error goto 0
        
              Json.Add ( _
                """" & refType & """: {" & _
                """id"":""" & qSelRefs.FieldByName("id").AsString & """," & _
                """name"":""" & refType & """," & _
                """visible"": true, " & _
                """description"":""" & qSelRefs.FieldByName("USR$NAME").AsString & """," )
                
              'Метаданные, если они есть
              qSelMetadata.Close
              qSelMetadata.ParamByName("refline").AsInteger = refID
              qSelMetadata.ExecQuery
              dim OMetadata
              if qSelMetadata.RecordCount > 0 then
                Json.Add ("""metadata"":{")
                OMetadata = ""
                while not qSelMetadata.EOF
                  arr0 = qSelMetadata.FieldByName("USR$MOBILEMANE").AsString
                  arr1 = qSelMetadata.FieldByName("USR$LOCALNAME").AsString
                  arr2 = qSelMetadata.FieldByName("USR$SORTORDER").AsInteger
                  arr3 = qSelMetadata.FieldByName("USR$NOTVISIBLE").AsInteger
                  OMetadata = OMetadata & """" &  trim(arr0) & """: {"
                  if not arr2 = "" then
                    OMetadata = OMetadata & """sortOrder"":" & arr2
                    if not (arr1 = "" and  arr3 = 0) then
                      OMetadata = OMetadata & ","
                    end if
                  end if
                  if not arr1 = "" then
                    OMetadata = OMetadata & """name"":" & web_JSonString(arr1)
                    if not (arr3 = 0) then
                      OMetadata = OMetadata & ","
                    end if
                  end if
                  if arr3 <> 0 then
                    OMetadata = OMetadata & """visible"": false "
                  end if
                  qSelMetadata.Next
                  if  qSelMetadata.EOF then
                    OMetadata = OMetadata & "}"
                  else
                    OMetadata = OMetadata & "},"
                  end if
                wend
                Json.Add(OMetadata)
                Json.Add ("},")
              end if
              
              'Данные
              Json.Add ("""data"":[")
              deptkey = ""
              remains = false
              isFirst = true
              dim mainFieldName: mainFieldName = ""
              while not qSel.eof
                qSelFields.Close
                qSelFields.ParamByName("refline").AsInteger = refID
                qSelFields.ExecQuery
                if (qSelRefs.FieldByName("ISCROSS").AsInteger > 0) and _
                  (qSelFields.FieldByName("mainfield").AsInteger > 0) then
                  mainFieldName = qSelFields.FieldByName("USR$NAME").AsString
                  'Если кросс-модель и есть поле, которое корневое, то выгружаем в структуру в разрезе корневого поля и даты
                  'data: [ {contact: 123, date: '2020.10.10', data: [{goodId: 123, price: 1.55, q: 5}, {goodId: 567, price: 1.66, q: 6}]} ]
                  remains = true
                end if
                
                oData = "{"
                while not qSelFields.EOF
                  arr0 = qSelFields.FieldByName("USR$MOBILEMANE").AsString
                  arr1 = qSelFields.FieldByName("USR$NAME").AsString
                  dim relationName, fieldName, viewName
                  relationName = qSelFields.FieldByName("RELATIONNAME").AsString
                  fieldName = qSelFields.FieldByName("FIELDNAME").AsString
                  if (relationName = "" or fieldName = "") then
                    if IsNumeric(qSel.FieldByName(trim(arr1)).AsString) then
                      arr2 = trim(qSel.FieldByName(trim(arr1)).AsString)
                      if qSelFields.FieldByName("notPrimitive").AsInteger = 0 then
                        arr2 = web_cur_replace(arr2)
                        'Если строка
                        if qSelFields.FieldByName("TYPE").AsInteger = _
                           gdcBaseManager.GetIDByRUIDString("147023302_1677413867") then
                          arr2 = web_JSonString(arr2)
                        end if
                      else
                        arr2 = web_JSonString(arr2)
                      end if
                    else
                      if  qSelFields.FieldByName("TYPE").AsInteger = _
                           gdcBaseManager.GetIDByRUIDString("147023726_1677413867") then
                        arr2 = web_JSonString(web_formatDate(qSel.FieldByName(trim(arr1)).AsString))
                      else
                        arr2 = web_JSonString(trim(qSel.FieldByName(trim(arr1)).AsString))
                      end if
                    end if
                    arr4 = arr2
                  else
                    arr2 = trim(qSel.FieldByName(trim(arr1)).AsString)
                    if arr2 > "" then
                      qObjectField.Close
                      qObjectField.SQL.Text  = _
                        "select " & fieldName & " from " & relationName & " where id = " & arr2
                      qObjectField.ExecQuery
                      viewName = web_JSonString(trim(qObjectField.FieldByName(fieldName).AsString))
                      arr4 =  "{""id"":""" & arr2 & """," & _
                      """name"":" & viewName & "}"
                    else
                      arr4 =  """"""
                    end if
                  end if
                '---------------------
                  if arr1 = mainFieldName then
                    if deptkey <> qSel.FieldByName(trim(arr1)).AsString then
                      if not isFirst then
                        oData = "]}," & oData
                      end if
                      oData = oData + """" &  trim(arr0) & """:" & arr4  & _
                      ",""onDate"":""" & web_formatDate(Date()) & """" & _
                      ",""data"":[{"
                      deptkey = qSel.FieldByName(trim(arr1)).AsString
                    end if
                  else
                    oData = oData + """" &  trim(arr0) & """:" & arr4
                  end if
                  '---------------------
                  qSelFields.Next
                  if not qSelFields.EOF then
                    if (arr1 <> mainFieldName) then
                      oData = oData + ","
                    end if
                  end if
                wend
                qSel.Next
                oData = oData & "}"
        
                if not qSel.eof then
                  if (mainFieldName > "") then
                    if deptkey = qSel.FieldByName(mainFieldName).AsString then
                      oData = oData & ","
                    end if
                  else
                    oData = oData & ","
                  end if
                end if
        
                Json.Add(oData)
                isFirst = false
              wend
        
              if Json.Count > 0 then Json.Strings(Json.Count - 1) = Json.Strings(Json.Count - 1) & "]}"
        
              if remains then
                if Json.Count > 0 then Json.Strings(Json.Count - 1) = Json.Strings(Json.Count - 1) & "]}"
                remains = false
              end if
        
              qSelRefs.Next
              if not qSelRefs.eof then
                if Json.Count > 0 then Json.Strings(Json.Count - 1) = Json.Strings(Json.Count - 1) & ","
              end if
            wend
            if Json.Count > 0 then Json.Strings(Json.Count - 1) = Json.Strings(Json.Count - 1) & "}}}"
            GetRefDataRepo1_0_0 = Json.Text
            Json.Clear
            if Assigned(Json) then
              Creator.DestroyObject(Json)
            end if
          end function
        
    Set: 
      - 
        Table: "RP_ADDITIONALFUNCTION"
        Items: 
          - 
            ADDFUNCTIONKEY: "147040220_1730903579 web_formatDate"
          - 
            ADDFUNCTIONKEY: "147040222_1730903579 web_cur_replace"
          - 
            ADDFUNCTIONKEY: "147040221_1730903579 web_JSonString"
  - 
    Properties: 
      Class: "TgdcFunction"
      RUID: 174582321_1693379973
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
    Fields: 
      NAME: "web_getMessageFromServer1_0_0"
      COMMENT: ~
      EVENT: ~
      FUNCTIONTYPE: ~
      GROUPNAME: ~
      INHERITEDRULE: 0
      LANGUAGE: "VBScript"
      LOCALNAME: ~
      MODIFYDATE: ~
      MODULE: "UNKNOWN"
      MODULECODE: "1010001_17 APPLICATION"
      OBJECTNAME: "APPLICATION"
      OWNERNAME: ~
      PUBLICFUNCTION: 1
      SHORTCUT: ~
      USEDEBUGINFO: 0
      EDITIONDATE: 2022-04-22T16:14:16+03:00
      DISPLAYSCRIPT: | 
        WEB_GETMESSAGEFROMSERVER1_0_0
        
      ENTEREDPARAMS: !!binary > 
        U0xQUlBSU1QMAAAASVNTSUxFTlRNT0RFDAAAAElTU0lMRU5UTU9ERQAAAAAAAAAAAAAAAAsAAAAA
        AAAAAAAAAABGTlNUUFJTVAkAAABBUFBTWVNURU0KAAAAz+7k8ejx8uXs4AAAAAAAAAAAAAAAAAsA
        AAAAAAAAAAAAAABGTlNURkxQUg==
      SCRIPT: | 
        '#include GETREFDATAREPO1_0_0
        '#include web_getDocuments1_0_0
        '#include web_post_documents1_0_0
        '#include web_getUserSettings1_0_0
        Option Explicit
        Function web_getMessageFromServer1_0_0(isSilentMode, appSystem)
          dim DataBasePath : DataBasePath = IBLogin.DatabaseName
          dim web_service
          set web_service = (New TVB_Web_Service)(appSystem)
          'Вход пользователя
          call web_service.Login(web_service.UserLogin, web_service.UserPassw)
        
          If web_service.RequestStatus = 200 or web_service.RequestStatus = 403 Then
              'получаем все json файлы для Гедымина
              call web_service.GetMessages()
        
              if web_service.RequestStatus = 200 and Assigned(web_service.RequestData) then
                dim obj, msgType, msgName, exportData, payload, objResult, m, msgId
                set obj = web_service.RequestData
                dim countResults, isOk, Companykey
                countResults = obj.Value("data").ObjectItemsCount
                objResult = obj.SimpleValue("result", "")
                dim hasError, AError, producer, producerkey, consumer, consumerkey, version, contactkey
                hasError = false
                AError = ""
                dim cash, countRef, countSettings, countDocs, _
                  cashRef(), cashSettings(), cashDocs()
                countRef = -1
                countSettings = -1
                countDocs = -1
               ' if (UCase(DataBasePath) <> UCase(web_service.BDPath)) or _
        '          web_service.BDPath = "" then
        '          hasError = true
        '          AError = "Вы работаете не с активной базой данных. " & vbCr & _
        '            "Обработка запросов запрещена!!!"
        '            web_service.SetError(AError)
        '        end if
        
                for m = 0 to countResults - 1
                  set objResult = obj.Value("data").ObjectItem(m)
                  msgID = objResult.SimpleValue("id", "")
                  msgType = objResult.Value("body").SimpleValue("type", "")
                  set payload = objResult.Value("body").Value("payload")
                  version = objResult.Value("body").SimpleValue("version", 1)
                  consumer =  objResult.Value("head").Value("producer").SimpleValue("name", "")
                  consumerkey = objResult.Value("head").Value("producer").SimpleValue("id", "")
                  producer =  objResult.Value("head").Value("consumer").SimpleValue("name", "")
                  producerkey = objResult.Value("head").Value("consumer").SimpleValue("id", "")
                  Companykey = web_service.CompanyKey
                  cash = consumerkey & "_" & producerkey
        
                  call gdcBaseManager.ExecSingleQueryResult(_
                    "select u.USR$CONTACTKEY from USR$GDMN_USERS u " & _
                    " where u.USR$MOBILEID = :mobileId", consumerkey, Res, _
                    gdcBaseManager.ReadTransaction)
        
                  if not isEmpty(Res) then
                    if not isNull(Res(0, 0)) then
                      contactkey = Res(0, 0)
                    end if
                  end if
                  if isEmpty(contactkey) then
                    hasError = true
                    AError = "Обновите пользователей из WEB_ADMIN. " & vbCr & _
                      "В справочнике пользователей отсутствует пользователь с ID из мобильного " & consumerkey
                      web_service.SetError(AError)
                  end if
        
                  select case msgType
                    'Если в json файле пришла команда, разбираем ее и отправляем ответ
                    case "CMD"
                      msgName = payload.SimpleValue("name", "")
                      select case msgName
                        'если пришел запрос на справочники
                        case "GET_REF"
                          dim res, res1, fun, FuncParamArray
                          if not hasError then
                            if inStr(join(cashRef, ","), cash & "_" & "GET_REF") > 0 then
                              call web_service.DeleteMessage(msgID)
                            else
                              call gdcBaseManager.ExecSingleQueryResult(_
                                "SELECT v.USR$FUNCTIONKEY " & _
                                "FROM USR$GDMN_DATA_VERSION v " & _
                                "WHERE  v.USR$VERSION = :ver ", version, Res1, _
                                gdcBaseManager.ReadTransaction)
                              if not isEmpty(Res1) then
                                if not isNull(Res1(0, 0)) then
                                  fun = Res1(0, 0)
                                end if
                              end if
                              if isEmpty(fun) then
                                fun = 0
                              end if
                              if fun = 0 then
                                exportData =  GetRefDataRepo1_0_0(contactkey, consumer, consumerkey,  _
                                  producer, producerkey, web_service.Company, Companykey, _
                                  web_service.AppSystem, appSystem, hasError, AError, version)
                              else
                                FuncParamArray = Array(contactkey, consumer, consumerkey,  _
                                  producer, producerkey, web_service.Company, Companykey, _
                                  web_service.AppSystem, appSystem, hasError, AError, version)
                                exportData = System.ExecuteScriptFunction(fun, FuncParamArray)
                              end if
                               'отправлем сообщение с данными
                              call web_service.SendMessage(exportData)
        
                              if web_service.RequestStatus = 201 then
                                'удаляем сообщение
                                call web_service.DeleteMessage(msgID)
                                countRef = countRef + 1
                                redim Preserve cashRef(countRef)
                                cashRef(countRef) = cash & "_" & "GET_REF"
                              end if
                            end if
                          end if
        
        
                        case "GET_DOCUMENTS"
                          dim params
                          if Assigned(payload.Value("params")) then
                            set params = payload.Value("params")
                          else
                            params = null
                          end if
                          if not hasError then
                            if  inStr(join(cashDocs, ","), cash & "_" & "GET_DOCUMENTS") > 0  then
                              call web_service.DeleteMessage(msgID)
                            else
                              exportData = web_getDocuments1_0_0(msgID, consumer, consumerkey,  _
                                  producer, producerkey, web_service.Company, Companykey, _
                                  web_service.AppSystem, appSystem, params, version, contactkey)
                              'отправлем сообщение с данными
                              call web_service.SendMessage(exportData)
                              if web_service.RequestStatus = 201 then
                                'удаляем сообщение
                                call web_service.DeleteMessage(msgID)
                                countDocs = countDocs + 1
                                redim Preserve cashDocs(countDocs)
                                cashDocs(countDocs) = cash & "_" & "GET_DOCUMENTS"
                              end if
                            end if
                          end if
        
                        'если пришел запрос на склад по юзеру
                        case "GET_USER_SETTINGS"
                          if not hasError then
                            if inStr(join(cashSettings, ","), cash & "_" & "GET_USER_SETTINGS") > 0 then
                              call web_service.DeleteMessage(msgID)
                            else
                              call gdcBaseManager.ExecSingleQueryResult(_
                                "SELECT " & _
                                "  v.USR$GETUSERSETTINGS " & _
                                "FROM " & _
                                "  USR$GDMN_SYSTEMS b " & _
                                "  LEFT JOIN USR$GDMN_VERSIONS v  ON v.ID = b.USR$GDMN_VERSION " & _
                                "WHERE b.ID = :systemkey ", appSystem, Res1, _
                                  gdcBaseManager.ReadTransaction)
                              if not isEmpty(Res1) then
                                if not isNull(Res1(0, 0)) then
                                  fun = Res1(0, 0)
                                end if
                              end if
                              if isEmpty(fun) then
                                fun = 0
                              end if
                              if fun = 0 then
                                exportData =  web_getUserSettings1_0_0(contactkey, consumer, consumerkey,  _
                                  producer, producerkey, web_service.Company, Companykey, _
                                  web_service.AppSystem, appSystem, version)
                              else
                                FuncParamArray = Array(contactkey, consumer, consumerkey,  _
                                  producer, producerkey, web_service.Company, Companykey, _
                                  web_service.AppSystem, appSystem, version)
                                exportData = System.ExecuteScriptFunction(fun, FuncParamArray)
                              end if
                              'отправлем сообщение с данными
                              call web_service.SendMessage(exportData)
        
                              if web_service.RequestStatus = 201 then
                                'удаляем сообщение
                                call web_service.DeleteMessage(msgID)
                                countSettings = countSettings + 1
                                redim Preserve cashSettings(countSettings)
                                cashSettings(countSettings) = cash & "_" & "GET_USER_SETTINGS"
                              end if
                            end if
                          end if
                       end select
                     case "DOCS"
                      dim respLine
                       if not hasError then
                         respLine =  web_post_documents1_0_0( msgID, consumer, consumerkey,  _
                            producer, producerkey, web_service.Company, Companykey, _
                            web_service.AppSystem, appSystem, payload, version)
                         dim k, flag
                         flag = 0
                         for k = LBound(respLine) to Ubound(respLine)
                           if respLine(k) <> "" then
                            'отправлем сообщение с данными
                             call web_service.SendMessage(respLine(k))
                             if web_service.RequestStatus = 201 and flag = 0 then
                               'удаляем сообщение
                               call web_service.DeleteMessage(msgID)
                               flag = 1
                             end if
                           end if
                         next
                       end if
                  end select
                next
              end if
        
            'Выход пользователя
            call web_service.Logout()
        
            if not isSilentMode then
              if web_service.HasError then
                call Application.MessageBox("Обработка запросов выполнена с ошибками! Смотрите файл с ошибками!", "Внимание!", vbInformation + vbOkOnly + vbApplicationModal)
                web_service.SetError(AError)
              else
                call Application.MessageBox("Обработка запросов успешно выполнена!", "Внимание!", vbInformation + vbOkOnly + vbApplicationModal)
              end if
            end if
          else
            if not isSilentMode then
              call Application.MessageBox(web_service.RequestError, "Внимание!", vbInformation + vbOkOnly + vbApplicationModal)
            end if
          end if
        End Function
        
    Set: 
      - 
        Table: "RP_ADDITIONALFUNCTION"
        Items: 
          - 
            ADDFUNCTIONKEY: "174582153_1693379973 GetRefDataRepo1_0_0"
          - 
            ADDFUNCTIONKEY: "174582325_1693379973 web_getDocuments1_0_0"
          - 
            ADDFUNCTIONKEY: "174582564_1693379973 web_post_documents1_0_0"
          - 
            ADDFUNCTIONKEY: "147040206_1730903579 web_getUserSettings1_0_0"
  - 
    Properties: 
      Class: "TgdcFunction"
      RUID: 174582152_1693379973
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
    Fields: 
      NAME: "web_autoGetReferens1_0_0"
      COMMENT: ~
      EVENT: ~
      FUNCTIONTYPE: ~
      GROUPNAME: ~
      INHERITEDRULE: 0
      LANGUAGE: "VBScript"
      LOCALNAME: ~
      MODIFYDATE: ~
      MODULE: "UNKNOWN"
      MODULECODE: "1010001_17 APPLICATION"
      OBJECTNAME: "APPLICATION"
      OWNERNAME: ~
      PUBLICFUNCTION: 1
      SHORTCUT: ~
      USEDEBUGINFO: 0
      EDITIONDATE: 2022-04-22T15:01:45+03:00
      DISPLAYSCRIPT: | 
        WEB_AUTOGETREFERENS1_0_0
        
      ENTEREDPARAMS: !!binary > 
        U0xQUlBSU1QMAAAASVNTSUxFTlRNT0RFDAAAAElTU0lMRU5UTU9ERQAAAAAAAAAAAAAAAAsAAAAA
        AAAAAAAAAABGTlNUUFJTVAkAAABTWVNURU1LRVkJAAAAU1lTVEVNS0VZAAAAAAAAAAAAAAAACwAA
        AAAAAAAAAAAAAEZOU1RQUlNUBgAAAElTTU9DSwYAAABJU01PQ0sAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAARk5TVFBSU1QDAAAARlVOAwAAAEZVTgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABGTlNU
        UFJTVAcAAABWRVJTSU9OBwAAAFZFUlNJT04AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAARk5TVEZM
        UFI=
      SCRIPT: | 
        '#include GETREFDATAREPO1_0_0
        Option Explicit
        Function web_autoGetReferens1_0_0(isSilentMode, systemkey, isMock, fun, version)
          ' Если режим MOCK, просто формируем файл
          dim Creator, Company, AppSystem, ibsql, web_service, _
            gdmn, gdmnId, consumer, consumerkey, producer, producerkey, companykey
          set Creator = new TCreator
          set web_service = (New TVB_Web_Service)(systemkey)
          dim DataBasePath : DataBasePath = IBLogin.DatabaseName
          'if (UCase(DataBasePath) <> UCase(web_service.BDPath)) or _
        '    web_service.BDPath = "" then
        '    hasError = true
        '    AError = "Вы работаете не с активной базой данных. " & vbCr & _
        '      "Обработка запросов запрещена!!!"
        '    web_service.SetError(AError)
        '    if  not isSilentMode then
        '      call Application.MessageBox("Экспорт не выполнен! " & AError, "Внимание!", vbInformation + vbOkOnly + vbApplicationModal)
        '    end if
        '    exit function
        '  end if
          set ibsql = Creator.GetObject(nil, "TIBSQL", "")
          ibsql.Transaction = gdcBaseManager.ReadTransaction
          ibsql.SQL.Text = _
            "select first 1 " & _
            "  u.USR$MOBILEID, " & _
            "  u.USR$MOBILELOGIN " & _
            "from  USR$GDMN_USERS u " & _
            "where u.USR$SYSTEMKEY = :systemkey " & _
            "  and u.USR$MOBILEALIAS = :systemname "
          ibsql.ParamByName("systemkey").AsInteger = systemkey
          ibsql.ParamByName("systemname").AsString = web_service.AppSystem
          ibsql.ExecQuery
          if ibsql.RecordCount > 0 then
            gdmnId = ibsql.FieldByName("USR$MOBILEID").AsString
            gdmn = ibsql.FieldByName("USR$MOBILELOGIN").AsString
          else
            ibsql.Close
            ibsql.SQL.Text = _
              "select first 1 " & _
              "  u.USR$MOBILEID " & _
              "from  USR$GDMN_USERS u " & _
              "  left join gd_contact c on c.id = u.USR$CONTACTKEY " & _
              "    and c.name = :gdmn " & _
              "where u.USR$SYSTEMKEY = :systemkey " & _
              "  and u.USR$PASSWORD = :gdmnpass "
            ibsql.ParamByName("systemkey").AsInteger = systemkey
            ibsql.ParamByName("gdmn").AsString = web_service.UserLogin
            ibsql.ParamByName("gdmnpass").AsString = web_service.UserPassw
            ibsql.ExecQuery
            if ibsql.FieldByName("USR$MOBILEID").AsString <> "" then
              gdmnId = ibsql.FieldByName("USR$MOBILEID").AsString
              gdmn = web_service.UserLogin
            else
              if isMock then
                gdmnId = web_service.UserLogin
                gdmn = web_service.UserLogin
              end if
            end if
          end if
          if isMock then
            ibsql.Close
            ibsql.SQL.Text = _
               "select first 1 " & _
               "  u.USR$CONTACTKEY " & _
               "from  USR$GDMN_USERS u " & _
               "where u.USR$SYSTEMKEY = :systemkey "
            ibsql.ParamByName("systemkey").AsInteger = systemkey
            ibsql.ExecQuery
            if ibsql.RecordCount > 0 then
              contactkey = ibsql.FieldByName("USR$CONTACTKEY").AsInteger
              consumer = gdmn
              consumerkey = gdmnId
              producer = gdmn
              producerkey = gdmnId
              Company = web_service.Company
              Companykey = web_service.CompanyKey
              AppSystem = "AppSystemName"
              hasError = false
              AError = ""
              if fun = 0 then
                exportData =  GetRefDataRepo1_0_0(contactkey,  consumer, consumerkey, _
                  producer, producerkey, Company,  Companykey, _
                  AppSystem, systemkey, hasError, AError, version)
              else
                FuncParamArray = Array(contactkey,  consumer, consumerkey, _
                  producer, producerkey, Company,  Companykey, _
                  AppSystem, systemkey, hasError, AError, version)
                exportData = System.ExecuteScriptFunction(fun, FuncParamArray)
              end if
        
              Dim fs, f, LocalPath, JSONFileName
              LocalPath = web_service.LogPath
              JSONFileName = "messagesMock.json"
              Set fs = CreateObject("Scripting.FileSystemObject")
              Set f = fs.CreateTextFile(LocalPath & JSONFileName, True)
              f.Write exportData
              f.Close
              call Application.MessageBox("Экспорт выполнен!" , "Внимание!", vbInformation + vbOkOnly + vbApplicationModal)
            else
              call Application.MessageBox("Экспорт не выполнен! Должен быть хотя бы один пользователь мобильного приложения!" , "Внимание!", vbInformation + vbOkOnly + vbApplicationModal)
            end if
          else
            if not isSilentMode then
              if not (Application.MessageBox("БУДУТ СТЕРТЫ ВСЕ ПРЕДЫДУЩИЕ НЕОБРАБОТАННЫЕ ДАННЫЕ !!!" & vbCr & _
                "Продолжить?" , "Внимание!", vbYesNo + vbQuestion + vbSystemModal) = vbYes) then
                exit function
              end if
            end if
            dim P : set P = Creator.GetObject(nil, "TgdccProgress", "")
            if gdmnId <> "" then
            else
              call Application.MessageBox("Экспорт не выполнен! Добавьте пользователя " & _
                web_service.UserLogin & " в справочник Пользователи мобильного приложения!" , "Внимание!", vbInformation + vbOkOnly + vbApplicationModal)
              exit function
            end if
            'Вход пользователя для автозадачи
            call web_service.Login(web_service.TaskUserLogin, web_service.TaskUserPassw)
        
            if web_service.RequestStatus <> 200 then
              call Application.MessageBox("Экспорт не выполнен! Смотрите файл с ошибками!" , "Внимание!", vbInformation + vbOkOnly + vbApplicationModal)
              exit function
            else
              'Удаление всех сообщений
              call web_service.DeleteMessages()
              'Выход пользователя для автозадачи
              call web_service.Logout()
        
              dim qUsers
              ibsql.Close
              ibsql.SQL.Text = _
                 "select " & _
                 "  count(u.ID) as n " & _
                 "from  USR$GDMN_USERS u " & _
                 "  join USR$GDMN_SYSTEMS s on s.ID = u.USR$SYSTEMKEY " & _
                 "  left join gd_contact c on c.ID = u.USR$CONTACTKEY " & _
                 "where u.USR$SYSTEMKEY = :systemkey " & _
                 "  and coalesce(u.USR$NOTACTIVE, 0) = 0 "
        
              ibsql.ParamByName("systemkey").AsInteger = systemkey
              ibsql.ExecQuery
              qUsers = ibsql.FieldByName("n").AsInteger
        
              if not isSilentMode then
                P.StartWork "GDMN", "Идет экспорт справочников на сервер. Пожалуйста, подождите...", qUsers, True, True
              end if
              '____________
              if qUsers > 0 then
                ibsql.Close
                ibsql.SQL.Text = _
                   "select " & _
                   "  c.NAME, " & _
                   "  u.USR$CONTACTKEY, " & _
                   "  u.USR$SYSTEMKEY, " & _
                   "  u.USR$MOBILEID " & _
                   "from  USR$GDMN_USERS u " & _
                   "  join USR$GDMN_SYSTEMS s on s.ID = u.USR$SYSTEMKEY " & _
                   "  left join gd_contact c on c.ID = u.USR$CONTACTKEY " & _
                   "where u.USR$SYSTEMKEY = :systemkey " & _
                   "  and coalesce(u.USR$NOTACTIVE, 0) = 0 AND COALESCE(u.USR$MOBILEID, '') <> '' "
                ibsql.ParamByName("systemkey").AsInteger = systemkey
                ibsql.ExecQuery
        
                ' По каждому пользователю создаем запись Json
                dim contactkey, exportData
        
                while not ibsql.EOF
                  if not isSilentMode then
                    P.StartStep ibsql.FieldByName("NAME").AsString, 1
                  end if
                  'Вход пользователя для автозадачи
                  call web_service.Login(web_service.TaskUserLogin, web_service.TaskUserPassw)
        
                  if web_service.RequestStatus = 200 then
                    contactkey = ibsql.FieldByName("USR$CONTACTKEY").AsInteger
                    consumerkey = trim(ibsql.FieldByName("USR$MOBILEID").AsString)
                    consumer =  trim(ibsql.FieldByName("NAME").AsString)
                    producer = gdmn
                    producerkey = gdmnId
                    Companykey = web_service.CompanyKey
                    dim hasError, AError
                    hasError = false
                    AError = ""
                    dim FuncParamArray
                    if fun = 0 then
                      exportData =  GetRefDataRepo1_0_0(contactkey, consumer, consumerkey,  _
                        producer, producerkey, web_service.Company,  Companykey, _
                        web_service.AppSystem, systemkey, hasError, AError, version)
                    else
                       FuncParamArray = Array(contactkey, consumer, consumerkey,  _
                         producer, producerkey, web_service.Company,  Companykey, _
                         web_service.AppSystem, systemkey, hasError, AError, version)
                       exportData = System.ExecuteScriptFunction(fun, FuncParamArray)
                    end if
                    if hasError then
                      if  not isSilentMode then
                         call Application.MessageBox("Экспорт не выполнен! " & AError, "Внимание!", vbInformation + vbOkOnly + vbApplicationModal)
                      end if
                      exit function
                    end if
                    'отправлем сообщение с данными
                    call web_service.SendMessage(exportData)
                    'Выход пользователя для автозадачи
                    call web_service.Logout()
                  end if
                  ibsql.Next
                wend
              end if
              '____________
              if not isSilentMode then
                if web_service.HasError then
                  P.EndWork "Экспорт выполнен с ошибками! Смотрите файл с ошибками!", False
                else
                  P.EndWork "Экспорт успешно выполнен!", False
                end if
              end if
            end if
          end if
        End Function
        
    Set: 
      - 
        Table: "RP_ADDITIONALFUNCTION"
        Items: 
          - 
            ADDFUNCTIONKEY: "174582153_1693379973 GetRefDataRepo1_0_0"
  - 
    Properties: 
      Class: "TgdcFunction"
      RUID: 147116530_1730903579
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
    Fields: 
      NAME: "web_deleteTransfer"
      COMMENT: ~
      EVENT: ~
      FUNCTIONTYPE: ~
      GROUPNAME: ~
      INHERITEDRULE: 0
      LANGUAGE: "VBScript"
      LOCALNAME: ~
      MODIFYDATE: ~
      MODULE: "UNKNOWN"
      MODULECODE: "1010001_17 APPLICATION"
      OBJECTNAME: "APPLICATION"
      OWNERNAME: ~
      PUBLICFUNCTION: 1
      SHORTCUT: ~
      USEDEBUGINFO: 0
      EDITIONDATE: 2022-04-12T16:06:07+03:00
      DISPLAYSCRIPT: | 
        WEB_DELETETRANSFER
        
      ENTEREDPARAMS: !!binary > 
        U0xQUlBSU1QJAAAAQVBQU1lTVEVNCQAAAEFQUFNZU1RFTQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AABGTlNURkxQUg==
      SCRIPT: | 
        Option Explicit
        Function web_deleteTransfer(appSystem)
          dim web_service
          set web_service = (New TVB_Web_Service)(appSystem)
           'Вход пользователя
          call web_service.Login(web_service.UserLogin, web_service.UserPassw)
          If web_service.RequestStatus = 200 or web_service.RequestStatus = 403 Then
            call web_service.DeleteTransfer()
          end if
         'Выход пользователя
          call web_service.Logout()
        End Function
        
  - 
    Properties: 
      Class: "TgdcFunction"
      RUID: 147117334_1730903579
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
    Fields: 
      NAME: "web_post_documents2_0_0"
      COMMENT: ~
      EVENT: ~
      FUNCTIONTYPE: ~
      GROUPNAME: ~
      INHERITEDRULE: 0
      LANGUAGE: "VBScript"
      LOCALNAME: ~
      MODIFYDATE: ~
      MODULE: "UNKNOWN"
      MODULECODE: "1010001_17 APPLICATION"
      OBJECTNAME: "APPLICATION"
      OWNERNAME: ~
      PUBLICFUNCTION: 1
      SHORTCUT: ~
      USEDEBUGINFO: 0
      EDITIONDATE: 2023-03-30T17:39:30+03:00
      DISPLAYSCRIPT: | 
        WEB_POST_DOCUMENTS2_0_0
        
      ENTEREDPARAMS: !!binary > 
        U0xQUlBSU1QFAAAATVNHSUQFAAAATVNHSUQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAARk5TVFBS
        U1QIAAAAQ09OU1VNRVIIAAAAQ09OU1VNRVIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAARk5TVFBS
        U1QLAAAAQ09OU1VNRVJLRVkLAAAAQ09OU1VNRVJLRVkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        Rk5TVFBSU1QIAAAAUFJPRFVDRVIIAAAAUFJPRFVDRVIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        Rk5TVFBSU1QLAAAAUFJPRFVDRVJLRVkLAAAAUFJPRFVDRVJLRVkAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAARk5TVFBSU1QHAAAAQ09NUEFOWQcAAABDT01QQU5ZAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAEZOU1RQUlNUCgAAAENPTVBBTllLRVkKAAAAQ09NUEFOWUtFWQAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAABGTlNUUFJTVAkAAABBUFBTWVNURU0JAAAAQVBQU1lTVEVNAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAEZOU1RQUlNUCwAAAEFQUFNZU1RFTUlECwAAAEFQUFNZU1RFTUlEAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAEZOU1RQUlNUDAAAAEFQUFNZU1RFTUtFWQwAAABBUFBTWVNURU1LRVkA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAARk5TVFBSU1QHAAAAUEFZTE9BRAcAAABQQVlMT0FEAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAEZOU1RQUlNUBwAAAFZFUlNJT04HAAAAVkVSU0lPTgAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAABGTlNUUFJTVAUAAABPUkRFUgUAAABPUkRFUgAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAABGTlNUUFJTVAsAAABUUkFOU0FDVElPTgsAAABUUkFOU0FDVElPTgAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAABGTlNUUFJTVAgAAABERVZJQ0VJRAgAAABERVZJQ0VJRAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAABGTlNUUFJTVAsAAABTVEFUVVNFUlJPUgsAAABTVEFUVVNFUlJP
        UgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABGTlNURkxQUg==
      SCRIPT: | 
        '#include web_formatDate
        Option Explicit
        Function web_post_documents2_0_0(msgID, consumer, consumerkey, producer, producerkey, Company, Companykey, AppSystem, AppSystemId, AppSystemkey, payload, version, order, transaction, deviceId, statusError)
           web_post_documents2_0_0 = ""
          dim web_service, a()
          set web_service = (New TVB_Web_Service)(AppSystemkey)
          dim countParams,  i, documentkey,  functionkey, FuncParamArray, r, documenttypeAlias, status
          dim ibsql, systemkey, msgParams, documenttypeKey, documenttypeName, number, DocumentDate, spread
          countParams = payload.ObjectItemsCount
          dim Creator, ibsqlUser, rOther
          set Creator = new TCreator
          set ibsql = Creator.GetObject(nil, "TIBSQL", "")
          ibsql.Transaction = gdcBaseManager.ReadTransaction
          set ibsqlUser = Creator.GetObject(nil, "TIBSQL", "")
          ibsqlUser.Transaction = gdcBaseManager.ReadTransaction
          ' Проверяем, ответ по созданным/измененным документам пересылать только
          ' консуммеру или всем пользователям
          ibsql.Close
          ibsql.SQL.Text = _
            "SELECT " & _
            "  coalesce(b.USR$SPREAD, 0) as spread " & _
            "FROM " & _
            "  USR$GDMN_SYSTEMS b " & _
            "WHERE b.ID = :systemkey "
          ibsql.ParamByName("systemkey").AsInteger = AppSystemkey
          ibsql.ExecQuery
          spread = ibsql.FieldByName("spread").AsInteger
        
          ibsqlUser.Close
          ibsqlUser.SQL.Text = _
            "SELECT " & _
            "  u.USR$CONTACTKEY, " & _
            "  u.USR$MOBILEID, " & _
            "  u.USR$MOBILELOGIN " & _
            "FROM " & _
            "  USR$GDMN_USERS u " & _
            "WHERE u.USR$SYSTEMKEY = :systemkey " & _
            " and (coalesce(u.USR$NOTACTIVE, 0) = 0 " & vbCrLf & _
            "  or u.USR$MOBILEID = :userkey) "
        
          if spread = 0 then
            ibsqlUser.SQL.Text = ibsqlUser.SQL.Text + _
              "  and u.USR$MOBILEID = :userkey "
            ibsqlUser.ParamByName("userkey").AsString = consumerkey
          end if
          ibsqlUser.ParamByName("systemkey").AsInteger = AppSystemkey
          ibsqlUser.ExecQuery
        
          dim tempConsumer, tempConsumerkey
        
         'Подготавливаем json файл, в котором будет содержаться массив ответов о статусе созданных документов,
         ' если в параметрах документа включен параметр "С возвратом состояния"
        
          dim oRoot, response, withResponse, cancelReason
          set oRoot  = Creator.GetObject(nil, "TStringList", "")
          dim rUser, rCommon, rCommonOther
        
          dim applStatus, specApprove, specCancel
          countParams = payload.ObjectItemsCount
          rCommon = ""
          rCommonOther = ""
          for i = 0 to countParams - 1
            set msgParams = payload.ObjectItem(i)
            documentkey = msgParams.SimpleValue("id", "")
            documenttypeKey = msgParams.Value("documentType").SimpleValue("id", "")
            documenttypeName = msgParams.Value("documentType").SimpleValue("name", "")
            documenttypeAlias = msgParams.Value("documentType").SimpleValue("description", "")
            number = msgParams.SimpleValue("number", "")
            documentdate = msgParams.SimpleValue("documentDate", "")
            ibsql.Close
            ibsql.SQL.Text = _
              "SELECT  b.USR$FUNCTIONKEY, coalesce(b.USR$WITHRESPONSE, 0) as USR$WITHRESPONSE " & _
              "FROM USR$GDMN_DOCUMENTS b " & _
              "  JOIN gd_function f ON f.ID = b.USR$FUNCTIONKEY " & _
              "WHERE b.USR$SYSTEMKEY = :systemkey " & _
              "  AND  ( b.USR$DOCUMENTTYPE = :documenttype " & _
              "   OR b.USR$TABLEKEY  = :documenttype) " & _
              "  AND coalesce(b.USR$VERSION, 1) = :ver "
            ibsql.ParamByName("systemkey").AsInteger = AppSystemkey
            ibsql.ParamByName("documenttype").AsInteger = documenttypeKey
            ibsql.ParamByName("ver").AsInteger = version
            ibsql.ExecQuery
            dim n
            n = 0
            if not ibsql.EOF  then
              functionkey = ibsql.FieldByName("USR$FUNCTIONKEY").AsInteger
              if functionkey > 0  then
                withResponse = ibsql.FieldByName("USR$WITHRESPONSE").AsInteger
                response = ""
               ' FuncParamArray = Array(documentkey, applStatus, specApprove, specCancel, cancelReason)
                dim typeError, otherHead
                otherHead = ""
                typeError = 0
                FuncParamArray = Array(msgParams, consumerkey, transaction)
                if statusError = "" then
                  response = System.ExecuteScriptFunction(functionkey, FuncParamArray)
                   ' response представляет собой массив
                   ' response(0) - это ответ на создание-редактирование документа
                   ' response(1) - это тип ошибки typeError
                   ' response(2) - это  otherHead - заголовок для редактируемых документов,
                   ' который мы рассылаем все пользователям ( только если птичка
                   ' Синхронизировать всех пользователей в настройках системы включена
                  otherHead = response(2)
                  typeError = response(1)
                end if
              end if
              'if withResponse > 0 then
               r = _
                 "{" & _
                 """id"":""" & documentkey & ""","  & _
                 """number"":" & web_JSonString(number) & "," & _
                 """documentDate"":""" & documentdate & """," & _
                 """documentType"":" & _
                 "{""id"":""" & documenttypeKey & """," & _
                 """name"":" & web_JSonString(documenttypeName) & "," & _
                 """description"":" & web_JSonString(documenttypeAlias) & "},"
               rOther = r
               if statusError = "" then
                 if response(0) > "" then
                   if typeError = 2 then
                     r = r &  """status"":""PROCESSED_DEADLOCK"
                   else
                     r = r &  """status"":""PROCESSED_INCORRECT"
                   end if
                   r = r & """," &  """errorMessage"":" & web_service.JSonString(response(0)) & ""
                   rOther = ""
                 else
                   r = r &  """status"":""PROCESSED"
                   if otherHead <> "" then
                     r = r &  """, "
                   else
                     r = r &  """"
                   end if
                   r = r & otherHead
                  ' r = r &  """} "
                   rOther = rOther &   """status"":""ARCHIVE"
                   rOther = rOther &  """, "
                   rOther = rOther & otherHead
                 end if
              else
                 r = r &  """status"":""PROCESSED_INCORRECT"
                 r = r & """," &  """errorMessage"":" & web_JSonString(statusError) & ""
                 rOther = ""
              end if
              'end if
            end if
            if  (i < countParams - 1) then
              r = r  & "},"
              if rOther <> "" then
                rOther = rOther  & "},"
              end if
            end if
            'oRoot.Add(r)
            rCommon = rCommon  & r
            rCommonOther = rCommonOther  & rOther
          next
          while not ibsqlUser.EOF
            tempConsumerkey = ibsqlUser.FieldByName("USR$MOBILEID").AsString
            tempConsumer = ibsqlUser.FieldByName("USR$MOBILELOGIN").AsString
            if  trim(tempConsumerkey) =  trim(consumerkey) then
              rUser =  _
                "{""status"": ""READY""," & _
                """head"":{" & _
                """appSystem"":{" & _
                """id"":""" & AppSystemId & """, " & _
                """name"":" & web_JSonString(AppSystem) & "}," & _
                """company"":{" & _
                """id"":""" & Companykey & """, " & _
                """name"":" & web_JSonString(Company) & "}," & _
                """producer"":{" & _
                """id"":""" & producerkey & """, " & _
                """name"":" & web_JSonString(producer) & "}," & _
                """consumer"":{" & _
                """id"":""" & tempConsumerkey & """, " & _
                """name"":" & web_JSonString(tempConsumer) & "}," & _
                """dateTime"":""" & web_formatDate(Date()) & """, "  & _
                """replyTo"":""" & msgID & """, "  & _
                """order"":" & order & ", "  & _
                """deviceId"":""" & deviceId & """"  & _
                "}, " & _
                """body"":{" & _
                """type"":""DOCS""," & _
                """version"":" & version & ", " & _
                """payload"":["
              rUser = rUser & rCommon & "} ]} } "
            else
              if  rCommonOther <> "" then
                 rUser =  _
                  "{""status"": ""READY""," & _
                  """head"":{" & _
                  """appSystem"":{" & _
                  """id"":""" & AppSystemId & """, " & _
                  """name"":" & web_JSonString(AppSystem) & "}," & _
                  """company"":{" & _
                  """id"":""" & Companykey & """, " & _
                  """name"":" & web_JSonString(Company) & "}," & _
                  """producer"":{" & _
                  """id"":""" & producerkey & """, " & _
                  """name"":" & web_JSonString(producer) & "}," & _
                  """consumer"":{" & _
                  """id"":""" & tempConsumerkey & """, " & _
                  """name"":" & web_JSonString(tempConsumer) & "}," & _
                  """dateTime"":""" & web_formatDate(Date()) & """, "  & _
                  """order"":" & order & ""  & _
                  "}, " & _
                  """body"":{" & _
                  """type"":""DOCS""," & _
                  """version"":""" & version & """, " & _
                  """payload"":["
                rUser = rUser  &  rCommonOther & "} ]} } "
              end if
            end if
            if rUser <> "" then
              oRoot.Add(rUser)
              ReDim Preserve a(n)
              a(n) = rUser
              n = n + 1
            end if
            ibsqlUser.Next
          wend
         ' oRoot.Add (" ]}")
        '  oRoot.Add (" }")
        
          'if withResponse then
           ' web_post_documents2_0_0 = oRoot.Text
          web_post_documents2_0_0 = a
          'end if
        
        End Function
        
    Set: 
      - 
        Table: "RP_ADDITIONALFUNCTION"
        Items: 
          - 
            ADDFUNCTIONKEY: "147040220_1730903579 web_formatDate"
  - 
    Properties: 
      Class: "TgdcFunction"
      RUID: 147117329_1730903579
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
    Fields: 
      NAME: "web_getDocuments2_0_0"
      COMMENT: ~
      EVENT: ~
      FUNCTIONTYPE: ~
      GROUPNAME: ~
      INHERITEDRULE: 0
      LANGUAGE: "VBScript"
      LOCALNAME: ~
      MODIFYDATE: ~
      MODULE: "UNKNOWN"
      MODULECODE: "1010001_17 APPLICATION"
      OBJECTNAME: "APPLICATION"
      OWNERNAME: ~
      PUBLICFUNCTION: 1
      SHORTCUT: ~
      USEDEBUGINFO: 0
      EDITIONDATE: 2022-10-03T17:28:20+03:00
      DISPLAYSCRIPT: | 
        WEB_GETDOCUMENTS2_0_0
        
      ENTEREDPARAMS: !!binary > 
        U0xQUlBSU1QFAAAATVNHSUQFAAAATVNHSUQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAARk5TVFBS
        U1QIAAAAQ09OU1VNRVIIAAAAQ09OU1VNRVIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAARk5TVFBS
        U1QLAAAAQ09OU1VNRVJLRVkLAAAAQ09OU1VNRVJLRVkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        Rk5TVFBSU1QIAAAAUFJPRFVDRVIIAAAAUFJPRFVDRVIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        Rk5TVFBSU1QLAAAAUFJPRFVDRVJLRVkLAAAAUFJPRFVDRVJLRVkAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAARk5TVFBSU1QHAAAAQ09NUEFOWQcAAABDT01QQU5ZAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAEZOU1RQUlNUCgAAAENPTVBBTllLRVkKAAAAQ09NUEFOWUtFWQAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAABGTlNUUFJTVAkAAABBUFBTWVNURU0JAAAAQVBQU1lTVEVNAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAEZOU1RQUlNUCwAAAEFQUFNZU1RFTUlECwAAAEFQUFNZU1RFTUlEAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAEZOU1RQUlNUDAAAAEFQUFNZU1RFTUtFWQwAAABBUFBTWVNURU1LRVkA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAARk5TVFBSU1QJAAAAT0JKUEFSQU1TCQAAAE9CSlBBUkFN
        UwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABGTlNUUFJTVAcAAABWRVJTSU9OBwAAAFZFUlNJT04A
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAARk5TVFBSU1QKAAAAQ09OVEFDVEtFWQoAAABDT05UQUNU
        S0VZAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEZOU1RQUlNUBQAAAE9SREVSBQAAAE9SREVSAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAEZOU1RQUlNUCwAAAFRSQU5TQUNUSU9OCwAAAFRSQU5TQUNU
        SU9OAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEZOU1RQUlNUCAAAAERFVklDRUlECAAAAERFVklD
        RUlEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEZOU1RQUlNUCwAAAFNUQVRVU0VSUk9SCwAAAFNU
        QVRVU0VSUk9SAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEZOU1RGTFBS
      SCRIPT: | 
        '#include web_formatDate
        '#include web_JSonString
        Option Explicit
        Function web_getDocuments2_0_0(msgID, consumer, consumerkey, producer, producerkey, Company, Companykey, AppSystem, AppSystemId, AppSystemkey, objParams, version, contactkey, order, transaction, deviceId, statusError)
           web_getDocuments2_0_0 = false
        
           dim Json, Creator, ibsql, k
           set Creator = new TCreator
           set ibsql = Creator.GetObject(nil, "TIBSQL", "")
           ibsql.Transaction = Transaction
           'объект для работы с типами данных
           dim Enc
           set Enc = new TVB_xml_EncodingFunctions
           'подготавливаем json файл, в котором будет содержаться массив запрашиваемых документов
           set Json = Creator.GetObject(nil, "TStringList", "")
           if statusError > "" then
             Json.Text =  _
               "{""status"": ""PROCESSED_INCORRECT""," & _
               """errorMessage"":""" & statusError & """, " & _
               """head"":{" & _
               """appSystem"":{" & _
               """id"":""" & AppSystemId & """, " & _
               """name"":" & web_JSonString(AppSystem) & "}," & _
               """company"":{" & _
               """id"":""" & Companykey & """, " & _
               """name"":" & web_JSonString(Company) & "}," & _
               """producer"":{" & _
               """id"":""" & producerkey & """, " & _
               """name"":""" & producer & """}," & _
               """consumer"":{" & _
               """id"":""" & consumerkey & """, " & _
               """name"":""" & consumer & """}," & _
               """dateTime"":""" &  web_formatDate(Date()) & ""","  & _
               """replyTo"":""" & msgID & ""","  & _
               """order"":" & order & ", "  & _
               """deviceId"":""" & deviceId & """"  & _
               "}, " & _
               """body"":{" & _
               """type"":""DOCS""," & _
               """version"":" & version & ", " & _
               """payload"":[]  }}"
           else
             Json.Text =  _
               "{""status"": ""READY""," & _
               """head"":{" & _
               """appSystem"":{" & _
               """id"":""" & AppSystemId & """, " & _
               """name"":" & web_JSonString(AppSystem) & "}," & _
               """company"":{" & _
               """id"":""" & Companykey & """, " & _
               """name"":" & web_JSonString(Company) & "}," & _
               """producer"":{" & _
               """id"":""" & producerkey & """, " & _
               """name"":""" & producer & """}," & _
               """consumer"":{" & _
               """id"":""" & consumerkey & """, " & _
               """name"":""" & consumer & """}," & _
               """dateTime"":""" &  web_formatDate(Date()) & ""","  & _
               """replyTo"":""" & msgID & ""","  & _
               """order"":" & order & ", "  & _
               """deviceId"":""" & deviceId & """"  & _
               "}, " & _
               """body"":{" & _
               """type"":""DOCS""," & _
               """version"":" & version & ", " & _
               """payload"":["
        
            dim FuncParamArray, countParams, n, DateBegin, DateEnd,  _
              oData, msgParams, functionkey
            if not IsNull(objParams) then
              countParams = objParams.ObjectItemsCount
              reDim  datePar(countParams - 1, 1)
              'Если в массиве параметров несколько периодов, за которые нужны документы
              for n = 0 to countParams - 1
                set msgParams = objParams.ObjectItem(n)
                datePar(n, 0) = Enc.DecodeDate(msgParams.SimpleValue("dateBegin", ""))
                datePar(n, 1) = Enc.DecodeDate(msgParams.SimpleValue("dateEnd", ""))
              next
            end if
            ibsql.Close
            ibsql.SQL.Text = _
              "SELECT  b.USR$SENDFUNCTION, coalesce(b.USR$COUNTDAYS, 0) as COUNTDAYS " & _
              "FROM USR$GDMN_DOCUMENTS b " & _
              "  JOIN gd_function f ON f.ID = b.USR$SENDFUNCTION " & _
              "WHERE b.USR$SYSTEMKEY = :systemkey " & _
              "  AND NOT b.USR$SENDFUNCTION IS NUll "  & _
              "  AND coalesce(b.USR$VERSION, 1) = :ver "
            ibsql.ParamByName("systemkey").AsInteger = AppSystemkey
            ibsql.ParamByName("ver").AsInteger = version
            ibsql.ExecQuery
            while not ibsql.EOF
              if countParams = 0 then
                reDim  datePar(0, 1)
                datePar(0, 0) = date - ibsql.FieldByName("COUNTDAYS").AsInteger
                datePar(0, 1) = date
              end if
              functionkey = ibsql.FieldByName("USR$SENDFUNCTION").AsInteger
              if functionkey > 0  then
                for k = LBound(datePar) to UBound(datePar)
                  FuncParamArray = Array(datePar(k, 0), datePar(k, 1), version, contactkey, transaction)
                  oData = System.ExecuteScriptFunction(functionkey, FuncParamArray)
                  if k < UBound(datePar) then
                    oData = oData & ", "
                  end if
                  Json.Add(oData)
                next
              end if
              ibsql.Next
            wend
            Json.Add (" ]}")
            Json.Add (" }")
          end if
          web_getDocuments2_0_0 = Json.Text
          Json.Clear
          if Assigned(Json) then
            Creator.DestroyObject(Json)
          end if
        End Function
        
    Set: 
      - 
        Table: "RP_ADDITIONALFUNCTION"
        Items: 
          - 
            ADDFUNCTIONKEY: "147040220_1730903579 web_formatDate"
          - 
            ADDFUNCTIONKEY: "147040221_1730903579 web_JSonString"
  - 
    Properties: 
      Class: "TgdcFunction"
      RUID: 147116025_1730903579
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
    Fields: 
      NAME: "web_callAutoGetMessageFromServer_Example"
      COMMENT: ~
      EVENT: ~
      FUNCTIONTYPE: ~
      GROUPNAME: ~
      INHERITEDRULE: 0
      LANGUAGE: "VBScript"
      LOCALNAME: ~
      MODIFYDATE: ~
      MODULE: "UNKNOWN"
      MODULECODE: "1010001_17 APPLICATION"
      OBJECTNAME: "APPLICATION"
      OWNERNAME: ~
      PUBLICFUNCTION: 1
      SHORTCUT: ~
      USEDEBUGINFO: 0
      EDITIONDATE: 2022-07-06T14:00:20+03:00
      DISPLAYSCRIPT: | 
        WEB_CALLAUTOGETMESSAGEFROMSERVER_EXAMPLE
        
      ENTEREDPARAMS: ~
      SCRIPT: | 
        Option Explicit
        Function web_callAutoGetMessageFromServer_example
          ' AppSystem - подсистема, для которой делается автозадача
          ' Для каждой подсистемы необходима своя автозадача
          ' НЕ ИЗМЕНЯТЬ ДЛЯ ДРУГИХ СИСТЕМ!!!!!! ЭТО ПРИМЕР!!! СДЕЛАТЬ КОПИЮ!!!!
        
          ' ЗДЕСЬ НАДО МЕНЯТЬ RUID подсистемы мобильного приложения
          dim AppSystem
          AppSystem = gdcBaseManager.GetIDByRUIDString("472927658_1549072347")
          set web_service = (New TVB_Web_Service)(AppSystem)
          dim Creator, ibsql, functionkey, FuncParamArray, flag, period, web_service
          flag = true
          period = time
          on error resume next
          set Creator = new TCreator
          set ibsql = Creator.GetObject(nil, "TIBSQL", "")
          ibsql.Transaction = gdcBaseManager.ReadTransaction
          ibsql.SQL.Text = _
            "SELECT " & _
            "  v.USR$MESSAGEFROMSERVER " & _
            "FROM " & _
            "  USR$GDMN_SYSTEMS b " & _
            "  LEFT JOIN USR$GDMN_VERSIONS v  ON v.ID = b.USR$GDMN_VERSION " & _
            "WHERE b.ID = :systemkey "
          ibsql.ParamByName("systemkey").AsVariant = AppSystem
          ibsql.ExecQuery
          if ibsql.RecordCount > 0 then
            functionkey = ibsql.FieldByName("USR$MESSAGEFROMSERVER").AsInteger
          else
            functionkey = 0
          end if
          if functionkey > 0  then
            FuncParamArray = Array(true, AppSystem, web_service)
            while (flag) and (dateDiff("s", period, time) <= 600)
              flag = System.ExecuteScriptFunction(functionkey, FuncParamArray)
            wend
          end if
          if err.Number <> 0 then
             hasError = true
             AError = "Ошибка в автозадаче! " & err.Description
            exit function
          end if
        End Function
        
  - 
    Properties: 
      Class: "TgdcFunction"
      RUID: 147164813_1545785791
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
    Fields: 
      NAME: "web_callHandGetMessageFromServer"
      COMMENT: ~
      EVENT: ~
      FUNCTIONTYPE: ~
      GROUPNAME: ~
      INHERITEDRULE: 0
      LANGUAGE: "VBScript"
      LOCALNAME: ~
      MODIFYDATE: 2021-06-15T18:45:04+03:00
      MODULE: "UNKNOWN"
      MODULECODE: "1010001_17 APPLICATION"
      OBJECTNAME: "APPLICATION"
      OWNERNAME: ~
      PUBLICFUNCTION: 1
      SHORTCUT: ~
      USEDEBUGINFO: 0
      EDITIONDATE: 2022-07-06T13:44:50+03:00
      DISPLAYSCRIPT: | 
        WEB_CALLHANDGETMESSAGEFROMSERVER
        
      ENTEREDPARAMS: !!binary > 
        U0xQUlBSU1QJAAAAQVBQU1lTVEVNCgAAAM/u5PHo8fLl7OAQAAAAVVNSJEdETU5fU1lTVEVNUwgA
        AAB1c3IkbmFtZQIAAABpZAcAAAAAAAAAAAIAAABeUkZOU1RGTFBS
      SCRIPT: | 
        '#include  web_getMessageFromServer
        Option Explicit
        Function web_callHandGetMessageFromServer(AppSystem)
          dim Creator, ibsql, functionkey, FuncParamArray, flag, period, web_service
          flag = true
          period = time
          set Creator = new TCreator
          set web_service = (New TVB_Web_Service)( AppSystem(0))
          set ibsql = Creator.GetObject(nil, "TIBSQL", "")
          ibsql.Transaction = gdcBaseManager.ReadTransaction
          ibsql.SQL.Text = _
            "SELECT " & _
            "  v.USR$MESSAGEFROMSERVER " & _
            "FROM " & _
            "  USR$GDMN_SYSTEMS b " & _
            "  LEFT JOIN USR$GDMN_VERSIONS v  ON v.ID = b.USR$GDMN_VERSION " & _
            "WHERE b.ID = :systemkey "
          ibsql.ParamByName("systemkey").AsInteger = AppSystem(0)
          ibsql.ExecQuery
          if ibsql.RecordCount > 0 then
            functionkey = ibsql.FieldByName("USR$MESSAGEFROMSERVER").AsInteger
          end if
          if functionkey > 0  then
            FuncParamArray = Array(false, AppSystem(0), web_service)
            while (flag) and (dateDiff("s", period, time) <= 600)
              flag = System.ExecuteScriptFunction(functionkey, FuncParamArray)
            wend
            if not flag then
              if web_service.HasError then
                call Application.MessageBox("Обработка запросов выполнена с ошибками! Смотрите файл с ошибками!", "Внимание!", vbInformation + vbOkOnly + vbApplicationModal)
              else
                call Application.MessageBox("Обработка запросов успешно выполнена!", "Внимание!", vbInformation + vbOkOnly + vbApplicationModal)
              end if
            end if
          else
            call Application.MessageBox("Установите функцию обработки запросов в справочнике " & vbCr & _
             " Версии API для мобильного приложения!!!", "Внимание!", vbInformation + vbOkOnly + vbApplicationModal)
          end if
        End Function
        
    Set: 
      - 
        Table: "RP_ADDITIONALFUNCTION"
        Items: 
          - 
            ADDFUNCTIONKEY: "147109513_1270221956 web_getMessageFromServer"
  - 
    Properties: 
      Class: "TgdcFunction"
      RUID: 147117358_1730903579
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
    Fields: 
      NAME: "web_autoGetReferens2_0_0"
      COMMENT: ~
      EVENT: ~
      FUNCTIONTYPE: ~
      GROUPNAME: ~
      INHERITEDRULE: 0
      LANGUAGE: "VBScript"
      LOCALNAME: ~
      MODIFYDATE: ~
      MODULE: "UNKNOWN"
      MODULECODE: "1010001_17 APPLICATION"
      OBJECTNAME: "APPLICATION"
      OWNERNAME: ~
      PUBLICFUNCTION: 1
      SHORTCUT: ~
      USEDEBUGINFO: 0
      EDITIONDATE: 2023-02-22T15:47:56+03:00
      DISPLAYSCRIPT: | 
        WEB_AUTOGETREFERENS2_0_0
        
      ENTEREDPARAMS: !!binary > 
        U0xQUlBSU1QMAAAASVNTSUxFTlRNT0RFDAAAAElTU0lMRU5UTU9ERQAAAAAAAAAAAAAAAAsAAAAA
        AAAAAAAAAABGTlNUUFJTVAkAAABTWVNURU1LRVkJAAAAU1lTVEVNS0VZAAAAAAAAAAAAAAAACwAA
        AAAAAAAAAAAAAEZOU1RQUlNUAwAAAEZVTgMAAABGVU4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        Rk5TVFBSU1QHAAAAVkVSU0lPTgcAAABWRVJTSU9OAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEZO
        U1RQUlNUBQAAAE9SREVSBQAAAE9SREVSAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEZOU1RQUlNU
        CwAAAFdFQl9TRVJWSUNFCwAAAFdFQl9TRVJWSUNFAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEZO
        U1RQUlNUBgAAAEdETU5JRAYAAABHRE1OSUQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAARk5TVFBS
        U1QEAAAAR0RNTgQAAABHRE1OAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEZOU1RQUlNUCAAAAElT
        UEFSQU1TCAAAAElTUEFSQU1TAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEZOU1RGTFBS
      SCRIPT: | 
        Option Explicit
        Function web_autoGetReferens2_0_0(isSilentMode, systemkey, fun, version, order, web_service, gdmnId, gdmn, isParams)
          web_autoGetReferens2_0_0 = false
          dim Creator, Company, AppSystemId, ibsql, AppSystem, objResult, _
            consumer, consumerkey, producer, producerkey, companykey, AError, deviceId
        
          set Creator = new TCreator
          set ibsql = Creator.GetObject(nil, "TIBSQL", "")
          ibsql.Transaction = gdcBaseManager.ReadTransaction
        
          dim P : set P = Creator.GetObject(nil, "TgdccProgress", "")
        
          dim qUsers
        
          ibsql.Close
          ibsql.Transaction = gdcBaseManager.ReadTransaction
          ibsql.SQL.Text = _
             "select " & vbCrLf & _
             "  count(u.ID) as n " & vbCrLf & _
             "from  USR$GDMN_USERS u " & vbCrLf & _
             "  join USR$GDMN_SYSTEMS s on s.ID = u.USR$SYSTEMKEY " & vbCrLf & _
             "  join gd_contact c on c.ID = u.USR$CONTACTKEY " & vbCrLf & _
             "where u.USR$SYSTEMKEY = :systemkey " & vbCrLf & _
             "  and coalesce(u.USR$NOTACTIVE, 0) = 0 " & vbCrLf & _
             "  and (select count(d.id) from usr$gdmn_devices d where d.USR$GDMN_USER = u.id) > 0 "
          ibsql.ParamByName("systemkey").AsInteger = systemkey
          ibsql.ExecQuery
          qUsers = ibsql.FieldByName("n").AsInteger
        
          if not isSilentMode then
            P.StartWork "GDMN", "Идет экспорт справочников на сервер. Пожалуйста, подождите...", qUsers, True, True
          end if
          '____________
        
          if qUsers > 0 then
            ibsql.Close
            ibsql.SQL.Text = _
              "select " & vbCrLf & _
              "  c.NAME, " & vbCrLf & _
              "  u.USR$CONTACTKEY, " & vbCrLf & _
              "  u.USR$SYSTEMKEY, " & vbCrLf & _
              "  u.USR$MOBILEID, " & vbCrLf & _
              "  d.USR$MOBILEID as USR$DEVICEID " & vbCrLf & _
              "from  USR$GDMN_USERS u " & vbCrLf & _
              "  join USR$GDMN_SYSTEMS s on s.ID = u.USR$SYSTEMKEY " & vbCrLf & _
              "  join gd_contact c on c.ID = u.USR$CONTACTKEY " & vbCrLf & _
              "  join usr$gdmn_devices d on d.USR$GDMN_USER = u.ID " & vbCrLf & _
              "where u.USR$SYSTEMKEY = :systemkey " & vbCrLf & _
              "  and coalesce(u.USR$NOTACTIVE, 0) = 0 and COALESCE(u.USR$MOBILEID, '') <> '' "
            ibsql.ParamByName("systemkey").AsInteger = systemkey
            ibsql.ExecQuery
        
            ' По каждому пользователю создаем запись Json
            dim contactkey
            dim DataStreamArr(), CountStreams
            CountStreams = -1
            while not ibsql.EOF
              redim Preserve DataStreamArr(-1)
              dim postData
              postData = "{" & _
                """companyId"": """ & web_service.CompanyKey & ""","  & _
                """appSystemId"": """ & web_service.AppSystemId & """}"
              call web_service.AddProcess(postData)
              if web_service.RequestStatus = 201 and Assigned(web_service.RequestData) then
                dim obj, objData, processId, processStatus, files
                dim  msgType, msgName, exportData, payload
                set obj = web_service.RequestData
                set objData = obj.Value("data")
                objResult = obj.SimpleValue("result", "")
                if objResult then
                  processId = objData.SimpleValue("processId", "")
                  processStatus = objData.SimpleValue("status", "")
                  set files = objData.Value("files")
                  if processStatus = "BUSY" then
                     AError = "Запросы обрабатываются  процессом c UID = " & processId & vbCr & _
                      ". Обработка запросов запрещена !!! "
                     web_service.SetError(AError)
                     exit function
                  end if
                  if not isSilentMode then
                    P.StartStep ibsql.FieldByName("NAME").AsString, 1
                  end if
                    'Если процесс стартовал, начинаем готовить данные
                  contactkey = ibsql.FieldByName("USR$CONTACTKEY").AsInteger
                  consumerkey = trim(ibsql.FieldByName("USR$MOBILEID").AsString)
                  consumer =  trim(ibsql.FieldByName("NAME").AsString)
                  producer = gdmn
                  producerkey = gdmnId
                  Companykey = web_service.CompanyKey
                  deviceId =  trim(ibsql.FieldByName("USR$DEVICEID").AsString)
                  hasError = false
                  AError = ""
                  dim FuncParamArray, hasError
                  if fun = 0 then
                    hasError = true
                        AError = "Не определена функция отправки справочников в . " & vbCr & _
                          " справочнике Версии API для мобильного " & consumerkey
                          web_service.SetError(AError)
                  else
                    FuncParamArray = Array("", contactkey, consumer, consumerkey,  _
                       producer, producerkey, web_service.Company,  Companykey, web_service.AppSystem, _
                       web_service.AppSystemId, systemkey, hasError, AError, version, order, deviceId, "", "")
                    exportData = System.ExecuteScriptFunction(fun, FuncParamArray)
                    if  CountStreams >= 0 then
                      CountStreams =  Ubound(DataStreamArr) + 1
                    else
                      CountStreams = 0
                    end if
                    for i = LBound(exportData) to Ubound(exportData)
                      redim Preserve DataStreamArr(CountStreams)
                      DataStreamArr(CountStreams) = exportData(i)
                      CountStreams = CountStreams + 1
                    next
                  end if
                  dim patchData
                  patchData = "{""processedFiles"": [ "
                  dim k
                  for k = LBound( DataStreamArr) to Ubound( DataStreamArr)
                    patchData = patchData & DataStreamArr(k)
                    if k <>  Ubound( DataStreamArr) then
                      patchData = patchData & ", "
                    end if
                  next
                  patchData = patchData & " ]}"
                  dim errorJsonString
                  'Отправляем на сервер API3
                  call web_service.PrepareProcess(processId, patchData)
                  if web_service.RequestStatus = 200 and Assigned(web_service.RequestData) then
                    set obj = web_service.RequestData
                    set objData = obj.Value("data")
                    objResult = obj.SimpleValue("result", "")
                    'При успешной обработке сообщаем серверу
                    if  objResult  then
                      if Err.Description = "" then
                        'При успешном коммите отправляем API4
                        call web_service.CompleteProcess(processId)
                      else
                        'При неуспешном - отправляем API5
                        errorJsonString = "{" & _
                         """errorMessage"": "  &  web_service.JSonString(Err.Description) & "} "
                        call web_service.CancelProcess(processId, errorJsonString)
                      end if
                    end if
                  else
                    AError = web_service.RequestError
                    web_service.SetError(AError)
                  end if
                end if
              else
                AError = web_service.RequestError
                web_service.SetError(AError)
              end if
              ibsql.Next
            wend
          end if
        
        
          if not isSilentMode then
            if web_service.HasError then
              P.EndWork "Экспорт выполнен с ошибками! Смотрите файл с ошибками!", False
            else
              P.EndWork "Экспорт успешно выполнен!", False
            end if
          end if
        
          if not web_service.HasError then
            web_autoGetReferens2_0_0 = true
          end if
        
        
        End Function
        
  - 
    Properties: 
      Class: "TgdcFunction"
      RUID: 147117893_1730903579
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
      HeadObject: 147117891_1730903579
    Fields: 
      NAME: "Macros147117893_1730903579"
      COMMENT: ~
      EVENT: ~
      FUNCTIONTYPE: ~
      GROUPNAME: ~
      INHERITEDRULE: 0
      LANGUAGE: "VBScript"
      LOCALNAME: ~
      MODIFYDATE: ~
      MODULE: "MACROS"
      MODULECODE: "148998328_1521203129 gdc_frmAttrUserDefinedUSR_GDMN_SYSTEMS"
      OBJECTNAME: "gdc_frmAttrUserDefinedUSR_GDMN_SYSTEMS"
      OWNERNAME: ~
      PUBLICFUNCTION: 1
      SHORTCUT: ~
      USEDEBUGINFO: 0
      EDITIONDATE: 2022-09-22T18:03:01+03:00
      DISPLAYSCRIPT: | 
        MACROS147117893_1730903579
        
      ENTEREDPARAMS: !!binary > 
        U0xQUlBSU1QJAAAAT1dORVJGT1JNCQAAAE9XTkVSRk9STQAAAAAAAAAAAAAAAAsAAAAAAAAAAAAA
        AABGTlNUUFJTVAcAAABWRVJTSU9OCgAAAMLl8PHo/yBBUEkRAAAAVVNSJEdETU5fVkVSU0lPTlMR
        AAAAVVNSJFZFUlNJT05TVFJJTkcCAAAAaWQHAAAAAAAAAAACAAAAXlJGTlNURkxQUg==
      SCRIPT: | 
        Option Explicit
        Sub Macros147117893_1730903579(OwnerForm, version)
          dim web_service, gdcObject
          set gdcObject = OwnerForm.gdcObject
          Set web_service = New TVB_Web_Service
          dim Obj, countResults, objResult, m, id, name, description
          dim company, companyResult, appSystemsArr, companyObj, a()
           'Вход администратора компании
          call web_service.Login(web_service.adminLogin, web_service.AdminPassw)
          If web_service.RequestStatus = 200 or web_service.RequestStatus = 403 Then
            call web_service.GetCompanyByID()
            if web_service.RequestStatus = 200 then
              set companyObj = web_service.RequestData
              set company = companyObj.Value("data")
              if Assigned(company.Value("appSystems")) then
                set appSystemsArr = company.Value("appSystems")
                countResults = appSystemsArr.ObjectItemsCount
                if countResults = 0 then
                   call Application.MessageBox("В компании не указаны подсистемы!", _
                    "Внимание!", vbInformation + vbOkOnly + vbApplicationModal)
                  'Выход пользователя
                  call web_service.Logout()
                  exit sub
                end if
                for m = 0 to countResults - 1
                  redim Preserve a(m)
                  a(m) = appSystemsArr.ObjectItem(m).SimpleValue("id", "")
                next
                dim strTempId, x
                strTempId = Join(a, ";")
                call web_service.GetAppSystems()
                if web_service.RequestStatus = 200 then
                  set Obj = web_service.RequestData
                  objResult = Obj.SimpleValue("result", "")
                  countResults = Obj.Value("data").ObjectItemsCount
                  for m = 0 to countResults - 1
                    set ObjResult = Obj.Value("data").ObjectItem(m)
                    id = objResult.SimpleValue("id", "")
                    name = objResult.SimpleValue("name", "")
                    description = objResult.SimpleValue("description", "")
                    x = InStr(1, strTempId, id, vbTextCompare)
                    if x > 0  then
                      ' Находим для данной компании и подсистемы ERP пользователя
                      call web_service.GetUserByParams("companyId=" & web_service.CompanyKey & "&appSystemId=" & id)
                      if web_service.RequestStatus = 200 then
                        dim erpObj, erpObjResult, erpCountResults
                        dim erpUserId, erpUserName
                        set erpObj = web_service.RequestData
                        erpCountResults = erpObj.Value("data").ObjectItemsCount
                        if erpCountResults > 0 then
                          set erpObjResult = erpObj.Value("data").ObjectItem(0)
                          erpUserId = erpObjResult.SimpleValue("id", "")
                          erpUserName = erpObjResult.SimpleValue("name", "")
                        else
                          erpUserId = ""
                          erpUserName = ""
                        end if
                         ' Получаем связь с устройствами
                        if erpUserId <> "" then
                          call web_service.getDeviceBindings("userId=" & erpUserId)
                          dim erpDeviceObj, erpDeviceResult, erpDeviceCountResults
                          if web_service.RequestStatus = 200 and Assigned(web_service.RequestData) then
                            set erpDeviceObj = web_service.RequestData
                            erpDeviceCountResults = erpDeviceObj.Value("data").ObjectItemsCount
                            if erpDeviceCountResults > 0 then
                              set erpDeviceResult = erpDeviceObj.Value("data").ObjectItem(0)
                              deviceID = erpDeviceResult.Value("device").SimpleValue("id", "")
                              dim deviceObj, count, deviceResult, deviceUid, deviceID
                              call web_service.getDevice(deviceId)
                              if web_service.RequestStatus = 200 and Assigned(web_service.RequestData) then
                                set deviceObj = web_service.RequestData
                                set deviceResult = deviceObj.Value("data")
                                deviceUid = deviceResult.SimpleValue("uid", "")
                              end if
                            end if
                          end if
                        else
                          deviceUid = ""
                        end if
                        'Вставка - редактирование
                        if not gdcObject.Locate("USR$CODE", Array(name), false) then
                          gdcObject.Append
                          gdcObject.FieldByName("USR$APPSYSTEMID").AsString = id
                          if description = "" then description = "Введите наименование"
                          gdcObject.FieldByName("USR$NAME").AsString = description
                          gdcObject.FieldByName("USR$CODE").AsString = name
                          gdcObject.FieldByName("USR$GDMN_VERSION").AsVariant = version(0)
                          gdcObject.FieldByName("USR$ERPUSERID").AsString = erpUserId
                          gdcObject.FieldByName("USR$ERPUSERNAME").AsString = erpUserName
                          gdcObject.FieldByName("USR$ERPUSERDEVICEID").AsString = deviceUid
                          gdcObject.Post
                        else
                          gdcObject.Edit
                          if description = "" then description = "Введите наименование"
                          gdcObject.FieldByName("USR$APPSYSTEMID").AsString = id
                          gdcObject.FieldByName("USR$GDMN_VERSION").AsVariant = version(0)
                          gdcObject.FieldByName("USR$ERPUSERID").AsString = erpUserId
                          gdcObject.FieldByName("USR$ERPUSERNAME").AsString = erpUserName
                          gdcObject.FieldByName("USR$ERPUSERDEVICEID").AsString = deviceUid
                          gdcObject.Post
                        end if
                      end if
                    end if
                  next
                else
                  call Application.MessageBox(web_service.RequestError, "Внимание!", vbInformation + vbOkOnly + vbApplicationModal)
                end if
              else
                call Application.MessageBox("В компании не указаны подсистемы!", _
                  "Внимание!", vbInformation + vbOkOnly + vbApplicationModal)
              end if
            else
              call Application.MessageBox(web_service.RequestError, "Внимание!", vbInformation + vbOkOnly + vbApplicationModal)
            end if
          else
            call Application.MessageBox(web_service.RequestError, "Внимание!", vbInformation + vbOkOnly + vbApplicationModal)
          end if
          'Выход пользователя
          call web_service.Logout()
        End Sub
        
  - 
    Properties: 
      Class: "TgdcMacros"
      RUID: 147117891_1730903579
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
    Fields: 
      NAME: "Импорт подсистем с сервера"
      DISPLAYINMENU: 1
      EXECUTEDATE: ~
      FUNCTIONKEY: "147117893_1730903579 Macros147117893_1730903579"
      ISLOCALEXECUTE: 0
      ISREBUILD: 0
      MACROSGROUPKEY: "147163109_1545402342 Локальные макросы"
      OBJECTNAME: "gdc_frmAttrUserDefinedUSR_GDMN_SYSTEMS"
      SERVERKEY: ~
      SHORTCUT: 0
      EDITIONDATE: 2022-09-22T18:03:01+03:00
  - 
    Properties: 
      Class: "TgdcFunction"
      RUID: 147117931_1730903579
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
      HeadObject: 147117929_1730903579
    Fields: 
      NAME: "Macros147117931_1730903579"
      COMMENT: ~
      EVENT: ~
      FUNCTIONTYPE: ~
      GROUPNAME: ~
      INHERITEDRULE: 0
      LANGUAGE: "VBScript"
      LOCALNAME: ~
      MODIFYDATE: ~
      MODULE: "MACROS"
      MODULECODE: "1176276983_1457844439 gdc_frmAttrUserDefinedUSR_GDMN_USERS"
      OBJECTNAME: "gdc_frmAttrUserDefinedUSR_GDMN_USERS"
      OWNERNAME: ~
      PUBLICFUNCTION: 1
      SHORTCUT: ~
      USEDEBUGINFO: 0
      EDITIONDATE: 2022-09-30T15:10:24+03:00
      DISPLAYSCRIPT: | 
        MACROS147117931_1730903579
        
      ENTEREDPARAMS: !!binary > 
        U0xQUlBSU1QJAAAAT1dORVJGT1JNCQAAAE9XTkVSRk9STQAAAAAAAAAAAAAAAAsAAAAAAAAAAAAA
        AABGTlNUUFJTVAwAAABBUFBTWVNURU1LRVkLAAAAz+7k8ejx8uXs4DoQAAAAVVNSJEdETU5fU1lT
        VEVNUwgAAABVU1IkTkFNRQIAAABJRAcAAAAAAAAAAAIAAABeUkZOU1RGTFBS
      SCRIPT: | 
        Option Explicit
        Sub Macros147117931_1730903579(OwnerForm, appSystemKey)
          dim web_service, Creator, ibsql, CompanyKey, errorMessage
          Set web_service = (New TVB_Web_Service)(appSystemKey(0))
          set Creator = new TCreator
          set ibsql = Creator.GetObject(nil, "TIBSQL", "")
          ibsql.Transaction = gdcBaseManager.ReadTransaction
        
          CompanyKey =  web_service.CompanyKey
          if CompanyKey = "" then
            errorMessage = " Код компании отсутствует или не верен! " & vbCr  & _
              " нажмите кнопку 'Получить код'"
            call Application.MessageBox(errorMessage, "Внимание!", vbInformation + vbOkOnly + vbApplicationModal)
            exit sub
          end if
          ibsql.Close
          ibsql.SQL.Text = _
            "select " & _
            "  u.USR$PASSWORD, " & _
            "  u.USR$MOBILELOGIN " & _
            "from USR$GDMN_USERS u " & _
            "where u.USR$SYSTEMKEY = :systemkey " & _
            "  and  coalesce(u.USR$IS_ERP_USER, 0) = 1 " & _
            "  and not u.USR$DEVICEID is null "
          ibsql.ParamByName("systemkey").AsInteger = appSystemKey(0)
          ibsql.ExecQuery
        
          if ibsql.RecordCount = 0 then
            errorMessage = " Пользователь ERP данной подсистемы " & _
              " отсутствует в справочнике 'Пользователи мобильного приложения'" & vbCr & _
              " либо у него не заполнен ID устройства." & vbCr & vbCr & _
              " Выполните макрос 'GDMN_1.0.0. Экспорт пользователей из WEB_ADMIN' " & vbCr & _
              " в справочнике  'Пользователи мобильного приложения' "
            call Application.MessageBox(errorMessage, "Внимание!", vbInformation + vbOkOnly + vbApplicationModal)
            exit sub
          end if
          dim userLogin, userPassw
          userLogin =  ibsql.FieldByName("USR$MOBILELOGIN").AsString
          userPassw =  ibsql.FieldByName("USR$PASSWORD").AsString
        
          call web_service.TestUser(web_service.ServerURL, userLogin, UserPassw)
        
          if web_service.RequestStatus = 200 then
            call Application.MessageBox("Проверка пользователя " & userLogin & " прошла успешно!", "Внимание!", vbInformation + vbOkOnly + vbApplicationModal)
          else
            if web_service.RequestError > "" then
              errorMessage = web_service.RequestError
            else
              errorMessage = " Неустановленная ошибка. Проверьте: " & vbCr & _
              " 1. Логин/пароль;" & vbCr & _
              " 2. Cоответствие базы файлов мобильному приложению; " & vbCr & _
              " 3. Код системы в пункте 'Подсистемы мобильного приложения'; "
            end if
            call Application.MessageBox(errorMessage, "Внимание!", vbInformation + vbOkOnly + vbApplicationModal)
          end if
        End Sub
        
  - 
    Properties: 
      Class: "TgdcMacros"
      RUID: 147117929_1730903579
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
    Fields: 
      NAME: " GDMN_1.0.0. Проверить пользователя ERP  для подсистемы"
      DISPLAYINMENU: 0
      EXECUTEDATE: ~
      FUNCTIONKEY: "147117931_1730903579 Macros147117931_1730903579"
      ISLOCALEXECUTE: 0
      ISREBUILD: 0
      MACROSGROUPKEY: "1176277022_1457844439 Локальные макросы"
      OBJECTNAME: "gdc_frmAttrUserDefinedUSR_GDMN_USERS"
      SERVERKEY: ~
      SHORTCUT: 0
      EDITIONDATE: 2022-09-30T15:10:24+03:00
  - 
    Properties: 
      Class: "TgdcFunction"
      RUID: 1368974846_1691301355
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
    Fields: 
      NAME: "gdc_dlgAttrUserDefinedUSR_GDMN_USERSETTINGSOnTestCorrect"
      COMMENT: ~
      EVENT: "ONTESTCORRECT"
      FUNCTIONTYPE: ~
      GROUPNAME: ~
      INHERITEDRULE: 0
      LANGUAGE: "VBScript"
      LOCALNAME: ~
      MODIFYDATE: ~
      MODULE: "EVENTS"
      MODULECODE: "147039748_1730903579 gdc_dlgAttrUserDefinedUSR_GDMN_USERSETTINGS"
      OBJECTNAME: "gdc_dlgAttrUserDefinedUSR_GDMN_USERSETTINGS"
      OWNERNAME: ~
      PUBLICFUNCTION: 1
      SHORTCUT: ~
      USEDEBUGINFO: 0
      EDITIONDATE: 2022-07-26T19:33:29+03:00
      DISPLAYSCRIPT: | 
        GDC_DLGATTRUSERDEFINEDUSR_GDMN_USERSETTINGSONTESTCORRECT
        
      ENTEREDPARAMS: !!binary > 
        U0xQUlBSU1QGAAAAU0VOREVSBgAAAFNFTkRFUgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABGTlNU
        RkxQUg==
      SCRIPT: | 
        Option Explicit
        Function gdc_dlgAttrUserDefinedUSR_GDMN_USERSETTINGSOnTestCorrect(ByVal Sender)
        '*** Данный код необходим для вызова встроенного обработчика ***
        '*** В случае его удаления возможно нарушение работы системы ***
          gdc_dlgAttrUserDefinedUSR_GDMN_USERSETTINGSOnTestCorrect =   Inherited(Sender, "OnTestCorrect", Array(Sender))
        '*** конец кода поддержки встроенного обработчика            ***
          if (Sender.gdcObject.FieldByName("USR$RELATIONNAME").AsInteger > 0 and _
              Sender.gdcObject.FieldByName("USR$RELATIONFIELD").AsInteger = 0) or _
             (Sender.gdcObject.FieldByName("USR$RELATIONNAME").AsInteger = 0 and _
              Sender.gdcObject.FieldByName("USR$RELATIONFIELD").AsInteger > 0) then
            call Application.MessageBox("Необходимо заполнить Наименование таблицы и поле для отображения.", "Внимание", vbOkOnly + vbInformation + vbSystemModal)
             gdc_dlgAttrUserDefinedUSR_GDMN_USERSETTINGSOnTestCorrect = False
          end if
        End Function
        
  - 
    Properties: 
      Class: "TgdcEvent"
      RUID: 1368974844_1691301355
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
    Fields: 
      DISABLE: 0
      EVENTNAME: "ONTESTCORRECT"
      FUNCTIONKEY: "1368974846_1691301355 gdc_dlgAttrUserDefinedUSR_GDMN_USERSETTINGSOnTestCorrect"
      OBJECTKEY: "147039748_1730903579 gdc_dlgAttrUserDefinedUSR_GDMN_USERSETTINGS"
      OBJECTNAME: "gdc_dlgAttrUserDefinedUSR_GDMN_USERSETTINGS"
      PARENTNAME: ~
      EDITIONDATE: 2022-07-26T19:33:30+03:00
  - 
    Properties: 
      Class: "TgdcFunction"
      RUID: 246868653_1927707971
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
    Fields: 
      NAME: "showUserParams"
      COMMENT: ~
      EVENT: ~
      FUNCTIONTYPE: ~
      GROUPNAME: ~
      INHERITEDRULE: 0
      LANGUAGE: "VBScript"
      LOCALNAME: ~
      MODIFYDATE: ~
      MODULE: "UNKNOWN"
      MODULECODE: "1010001_17 APPLICATION"
      OBJECTNAME: "APPLICATION"
      OWNERNAME: ~
      PUBLICFUNCTION: 1
      SHORTCUT: ~
      USEDEBUGINFO: 0
      EDITIONDATE: 2022-08-02T18:46:52+03:00
      DISPLAYSCRIPT: | 
        SHOWUSERPARAMS
        
      ENTEREDPARAMS: ~
      SCRIPT: | 
        Option Explicit
        Function showUserParams
          dim useParams
          set useParams  = Application.FindComponent("usrf_gdmn_user_params")
          if Not Assigned(useParams) then
            set useParams  =  Designer.CreateForm(Application, "usrf_gdmn_user_params","")
          end if
          useParams.Show
          useParams.BringToFront
        End Function
        
  - 
    Properties: 
      Class: "TgdcReportGroup"
      RUID: 246868644_1927707971
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
      HeadObject: 246868717_1927707971
    Fields: 
      PARENT: ~
      NAME: "Отчеты(usrf_gdmn_user_params)"
      DESCRIPTION: ~
      USERGROUPNAME: "246868644_1927707971"
      EDITIONDATE: 2022-08-01T18:42:42+03:00
  - 
    Properties: 
      Class: "TgdcMacrosGroup"
      RUID: 246868643_1927707971
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
      HeadObject: 246868717_1927707971
    Fields: 
      PARENT: ~
      NAME: "Локальные макросы"
      CLASSNAME: ""
      ISGLOBAL: 0
      OBJECTNAME: "usrf_gdmn_user_params"
      OBJECTPARENT: ~
      SUBTYPE: ""
      EDITIONDATE: 2022-08-01T18:42:42+03:00
      DESCRIPTION: ~
  - 
    Properties: 
      Class: "TgdcDelphiObject"
      RUID: 246868642_1927707971
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
      HeadObject: 246868717_1927707971
    Fields: 
      PARENT: ~
      NAME: "usrf_gdmn_user_params"
      CLASSNAME: ""
      DESCRIPTION: ~
      MACROSGROUPKEY: "246868643_1927707971 Локальные макросы"
      OBJECTNAME: "usrf_gdmn_user_params"
      OBJECTTYPE: 0
      REPORTGROUPKEY: "246868644_1927707971 Отчеты(usrf_gdmn_user_params)"
      SUBTYPE: ""
      EDITIONDATE: 2022-08-01T18:42:42+03:00
  - 
    Properties: 
      Class: "TgdcFunction"
      RUID: 246868719_1927707971
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
      HeadObject: 246868717_1927707971
    Fields: 
      NAME: "usrf_gdmn_user_paramsOnSaveSettings"
      COMMENT: ~
      EVENT: "ONSAVESETTINGS"
      FUNCTIONTYPE: ~
      GROUPNAME: ~
      INHERITEDRULE: 0
      LANGUAGE: "VBScript"
      LOCALNAME: ~
      MODIFYDATE: ~
      MODULE: "EVENTS"
      MODULECODE: "246868642_1927707971 usrf_gdmn_user_params"
      OBJECTNAME: "usrf_gdmn_user_params"
      OWNERNAME: ~
      PUBLICFUNCTION: 1
      SHORTCUT: ~
      USEDEBUGINFO: 0
      EDITIONDATE: 2022-08-02T18:22:06+03:00
      DISPLAYSCRIPT: | 
        USRF_GDMN_USER_PARAMSONSAVESETTINGS
        
      ENTEREDPARAMS: !!binary > 
        U0xQUlBSU1QGAAAAU0VOREVSBgAAAFNFTkRFUgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABGTlNU
        RkxQUg==
      SCRIPT: | 
        Option Explicit
        Sub usrf_gdmn_user_paramsOnSaveSettings(ByVal Sender)
        '*** Данный код необходим для вызова встроенного обработчика ***
        '*** В случае его удаления возможно нарушение работы системы ***
          Call   Inherited(Sender, "OnSaveSettings", Array(Sender))
        '*** конец кода поддержки встроенного обработчика            ***
          dim grParams, grParamsLine
          set grParams = Sender.GetComponent("usrg_grParams")
          Sender.SaveGrid(grParams)
          set grParamsLine = Sender.GetComponent("usrg_grParamsLine")
          Sender.SaveGrid(grParamsLine)
        End Sub
        
  - 
    Properties: 
      Class: "TgdcEvent"
      RUID: 246868717_1927707971
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
    Fields: 
      DISABLE: 0
      EVENTNAME: "ONSAVESETTINGS"
      FUNCTIONKEY: "246868719_1927707971 usrf_gdmn_user_paramsOnSaveSettings"
      OBJECTKEY: "246868642_1927707971 usrf_gdmn_user_params"
      OBJECTNAME: "usrf_gdmn_user_params"
      PARENTNAME: ~
      EDITIONDATE: 2022-08-02T18:22:06+03:00
  - 
    Properties: 
      Class: "TgdcFunction"
      RUID: 246868716_1927707971
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
      HeadObject: 246868714_1927707971
    Fields: 
      NAME: "usrf_gdmn_user_paramsOnLoadSettingsAfterCreate"
      COMMENT: ~
      EVENT: "ONLOADSETTINGSAFTERCREATE"
      FUNCTIONTYPE: ~
      GROUPNAME: ~
      INHERITEDRULE: 0
      LANGUAGE: "VBScript"
      LOCALNAME: ~
      MODIFYDATE: ~
      MODULE: "EVENTS"
      MODULECODE: "246868642_1927707971 usrf_gdmn_user_params"
      OBJECTNAME: "usrf_gdmn_user_params"
      OWNERNAME: ~
      PUBLICFUNCTION: 1
      SHORTCUT: ~
      USEDEBUGINFO: 0
      EDITIONDATE: 2022-08-02T18:21:47+03:00
      DISPLAYSCRIPT: | 
        USRF_GDMN_USER_PARAMSONLOADSETTINGSAFTERCREATE
        
      ENTEREDPARAMS: !!binary > 
        U0xQUlBSU1QGAAAAU0VOREVSBgAAAFNFTkRFUgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABGTlNU
        RkxQUg==
      SCRIPT: | 
        Option Explicit
        Sub usrf_gdmn_user_paramsOnLoadSettingsAfterCreate(ByVal Sender)
        '*** Данный код необходим для вызова встроенного обработчика ***
        '*** В случае его удаления возможно нарушение работы системы ***
          Call   Inherited(Sender, "OnLoadSettingsAfterCreate", Array(Sender))
        '*** конец кода поддержки встроенного обработчика            ***
          dim grParams, grParamsLine
          set grParams = Sender.GetComponent("usrg_grParams")
          Sender.LoadGrid(grParams)
          set grParamsLine = Sender.GetComponent("usrg_grParamsLine")
          Sender.LoadGrid(grParamsLine)
        End Sub
        
  - 
    Properties: 
      Class: "TgdcEvent"
      RUID: 246868714_1927707971
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
    Fields: 
      DISABLE: 0
      EVENTNAME: "ONLOADSETTINGSAFTERCREATE"
      FUNCTIONKEY: "246868716_1927707971 usrf_gdmn_user_paramsOnLoadSettingsAfterCreate"
      OBJECTKEY: "246868642_1927707971 usrf_gdmn_user_params"
      OBJECTNAME: "usrf_gdmn_user_params"
      PARENTNAME: ~
      EDITIONDATE: 2022-08-02T18:21:47+03:00
  - 
    Properties: 
      Class: "TgdcFunction"
      RUID: 246868713_1927707971
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
      HeadObject: 246868671_1927707971
    Fields: 
      NAME: "usrf_gdmn_user_paramsOnCreate"
      COMMENT: ~
      EVENT: "ONCREATE"
      FUNCTIONTYPE: ~
      GROUPNAME: ~
      INHERITEDRULE: 0
      LANGUAGE: "VBScript"
      LOCALNAME: ~
      MODIFYDATE: ~
      MODULE: "EVENTS"
      MODULECODE: "246868642_1927707971 usrf_gdmn_user_params"
      OBJECTNAME: "usrf_gdmn_user_params"
      OWNERNAME: ~
      PUBLICFUNCTION: 1
      SHORTCUT: ~
      USEDEBUGINFO: 0
      EDITIONDATE: 2022-08-02T20:32:04+03:00
      DISPLAYSCRIPT: | 
        USRF_GDMN_USER_PARAMSONCREATE
        
      ENTEREDPARAMS: !!binary > 
        U0xQUlBSU1QGAAAAU0VOREVSBgAAAFNFTkRFUgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABGTlNU
        RkxQUg==
      SCRIPT: | 
        Option Explicit
        Sub usrf_gdmn_user_paramsOnCreate(ByVal Sender)
        '*** Данный код необходим для вызова встроенного обработчика ***
        '*** В случае его удаления возможно нарушение работы системы ***
          Call   Inherited(Sender, "OnCreate", Array(Sender))
        '*** конец кода поддержки встроенного обработчика            ***
          dim gdcParams
          set gdcParams = Sender.GetComponent("usrg_gdcParams")
          gdcParams.Open
          Sender.Caption = "Параметры для пользователей"
          Sender.ShowSpeedButton = True
        
        End Sub
        
  - 
    Properties: 
      Class: "TgdcEvent"
      RUID: 246868671_1927707971
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
    Fields: 
      DISABLE: 0
      EVENTNAME: "ONCREATE"
      FUNCTIONKEY: "246868713_1927707971 usrf_gdmn_user_paramsOnCreate"
      OBJECTKEY: "246868642_1927707971 usrf_gdmn_user_params"
      OBJECTNAME: "usrf_gdmn_user_params"
      PARENTNAME: ~
      EDITIONDATE: 2022-08-02T20:32:04+03:00
  - 
    Properties: 
      Class: "TgdcFunction"
      RUID: 246868750_1927707971
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
      HeadObject: 246868748_1927707971
    Fields: 
      NAME: "usrg_actEditParamsLineOnExecute"
      COMMENT: ~
      EVENT: "ONEXECUTE"
      FUNCTIONTYPE: ~
      GROUPNAME: ~
      INHERITEDRULE: 0
      LANGUAGE: "VBScript"
      LOCALNAME: ~
      MODIFYDATE: ~
      MODULE: "EVENTS"
      MODULECODE: "246868642_1927707971 usrf_gdmn_user_params"
      OBJECTNAME: "usrf_gdmn_user_params"
      OWNERNAME: ~
      PUBLICFUNCTION: 1
      SHORTCUT: ~
      USEDEBUGINFO: 0
      EDITIONDATE: 2022-08-02T19:05:57+03:00
      DISPLAYSCRIPT: | 
        USRG_ACTEDITPARAMSLINEONEXECUTE
        
      ENTEREDPARAMS: !!binary > 
        U0xQUlBSU1QGAAAAU0VOREVSBgAAAFNFTkRFUgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABGTlNU
        RkxQUg==
      SCRIPT: | 
        Option Explicit
        Sub usrg_actEditParamsLineOnExecute(ByVal Sender)
        '*** Данный код необходим для вызова встроенного обработчика ***
        '*** В случае его удаления возможно нарушение работы системы ***
          Call   Inherited(Sender, "OnExecute", Array(Sender))
        '*** конец кода поддержки встроенного обработчика            ***
          call Sender.OwnerForm.GetComponent("usrg_gdcParamsLine").EditDialog("")
        End Sub
        
  - 
    Properties: 
      Class: "TgdcDelphiObject"
      RUID: 246868747_1927707971
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
      HeadObject: 246868748_1927707971
    Fields: 
      PARENT: "246868642_1927707971 usrf_gdmn_user_params"
      NAME: "usrg_actEditParamsLine"
      CLASSNAME: ""
      DESCRIPTION: ~
      MACROSGROUPKEY: ~
      OBJECTNAME: "usrg_actEditParamsLine"
      OBJECTTYPE: 0
      REPORTGROUPKEY: ~
      SUBTYPE: ""
      EDITIONDATE: 2022-08-02T19:00:40+03:00
  - 
    Properties: 
      Class: "TgdcEvent"
      RUID: 246868748_1927707971
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
    Fields: 
      DISABLE: 0
      EVENTNAME: "ONEXECUTE"
      FUNCTIONKEY: "246868750_1927707971 usrg_actEditParamsLineOnExecute"
      OBJECTKEY: "246868747_1927707971 usrf_gdmn_user_params\\usrg_actEditParamsLine"
      OBJECTNAME: "usrg_actEditParamsLine"
      PARENTNAME: "usrf_gdmn_user_params"
      EDITIONDATE: 2022-08-02T19:05:57+03:00
  - 
    Properties: 
      Class: "TgdcFunction"
      RUID: 246868738_1927707971
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
      HeadObject: 246868736_1927707971
    Fields: 
      NAME: "usrg_actEditParamsOnExecute"
      COMMENT: ~
      EVENT: "ONEXECUTE"
      FUNCTIONTYPE: ~
      GROUPNAME: ~
      INHERITEDRULE: 0
      LANGUAGE: "VBScript"
      LOCALNAME: ~
      MODIFYDATE: ~
      MODULE: "EVENTS"
      MODULECODE: "246868642_1927707971 usrf_gdmn_user_params"
      OBJECTNAME: "usrf_gdmn_user_params"
      OWNERNAME: ~
      PUBLICFUNCTION: 1
      SHORTCUT: ~
      USEDEBUGINFO: 0
      EDITIONDATE: 2022-08-02T19:05:45+03:00
      DISPLAYSCRIPT: | 
        USRG_ACTEDITPARAMSONEXECUTE
        
      ENTEREDPARAMS: !!binary > 
        U0xQUlBSU1QGAAAAU0VOREVSBgAAAFNFTkRFUgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABGTlNU
        RkxQUg==
      SCRIPT: | 
        Option Explicit
        Sub usrg_actEditParamsOnExecute(ByVal Sender)
        '*** Данный код необходим для вызова встроенного обработчика ***
        '*** В случае его удаления возможно нарушение работы системы ***
          Call   Inherited(Sender, "OnExecute", Array(Sender))
        '*** конец кода поддержки встроенного обработчика            ***
           call Sender.OwnerForm.GetComponent("usrg_gdcParams").EditDialog("")
        End Sub
        
  - 
    Properties: 
      Class: "TgdcDelphiObject"
      RUID: 246868735_1927707971
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
      HeadObject: 246868736_1927707971
    Fields: 
      PARENT: "246868642_1927707971 usrf_gdmn_user_params"
      NAME: "usrg_actEditParams"
      CLASSNAME: ""
      DESCRIPTION: ~
      MACROSGROUPKEY: ~
      OBJECTNAME: "usrg_actEditParams"
      OBJECTTYPE: 0
      REPORTGROUPKEY: ~
      SUBTYPE: ""
      EDITIONDATE: 2022-08-02T19:00:11+03:00
  - 
    Properties: 
      Class: "TgdcEvent"
      RUID: 246868736_1927707971
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
    Fields: 
      DISABLE: 0
      EVENTNAME: "ONEXECUTE"
      FUNCTIONKEY: "246868738_1927707971 usrg_actEditParamsOnExecute"
      OBJECTKEY: "246868735_1927707971 usrf_gdmn_user_params\\usrg_actEditParams"
      OBJECTNAME: "usrg_actEditParams"
      PARENTNAME: "usrf_gdmn_user_params"
      EDITIONDATE: 2022-08-02T19:05:45+03:00
  - 
    Properties: 
      Class: "TgdcFunction"
      RUID: 246868761_1927707971
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
      HeadObject: 246868759_1927707971
    Fields: 
      NAME: "usrg_actDublicateParamsOnExecute"
      COMMENT: ~
      EVENT: "ONEXECUTE"
      FUNCTIONTYPE: ~
      GROUPNAME: ~
      INHERITEDRULE: 0
      LANGUAGE: "VBScript"
      LOCALNAME: ~
      MODIFYDATE: ~
      MODULE: "EVENTS"
      MODULECODE: "246868642_1927707971 usrf_gdmn_user_params"
      OBJECTNAME: "usrf_gdmn_user_params"
      OWNERNAME: ~
      PUBLICFUNCTION: 1
      SHORTCUT: ~
      USEDEBUGINFO: 0
      EDITIONDATE: 2022-08-03T14:37:23+03:00
      DISPLAYSCRIPT: | 
        USRG_ACTDUBLICATEPARAMSONEXECUTE
        
      ENTEREDPARAMS: !!binary > 
        U0xQUlBSU1QGAAAAU0VOREVSBgAAAFNFTkRFUgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABGTlNU
        RkxQUg==
      SCRIPT: | 
        Option Explicit
        Sub usrg_actDublicateParamsOnExecute(ByVal Sender)
        '*** Данный код необходим для вызова встроенного обработчика ***
        '*** В случае его удаления возможно нарушение работы системы ***
          Call   Inherited(Sender, "OnExecute", Array(Sender))
        '*** конец кода поддержки встроенного обработчика            ***
          dim FieldsParam(), i, gdcParams, gdcParamsLine
          dim masterkey, Creator, ibsql, newMasterkey
          set gdcParams = Sender.OwnerForm.GetComponent("usrg_gdcParams")
          set gdcParamsLine = Sender.OwnerForm.GetComponent("usrg_gdcParamsLine")
          for i = 0 to gdcParams.FieldCount - 1
            redim Preserve FieldsParam(i)
            FieldsParam(i) = gdcParams.Fields(i).Value
          next
          
          masterkey = gdcParams.FieldByName("ID").AsInteger
          if  masterkey > 0 then
        
            gdcParams.Insert
            for i = 0 to gdcParams.FieldCount - 1
              if gdcParams.Fields(i).FieldName <> "ID" and _
                 gdcParams.Fields(i).FieldName <> "EDITIONDATE" _
              then
                gdcParams.Fields(i).Value = FieldsParam(i)
              end if
            next
            gdcParams.Post
            newMasterkey = gdcParams.FieldByName("ID").AsInteger
            set Creator = new TCreator
            set ibsql = Creator.GetObject(nil, "TIBSQL", "")
            ibsql.Transaction = gdcBaseManager.ReadTransaction
            ibsql.SQL.Text = _
              "SELECT  " & _
              "  Z.ID,  " & _
              "  Z.EDITIONDATE,  " & _
              "  Z.USR$VALUE,  " & _
              "  Z.USR$PARAMCODE,  " & _
              "  Z.USR$PARAMNAME,  " & _
              "  Z.USR$MASTERKEY,  " & _
              "  Z_USR$MASTERKEY.USR$NAME AS Z_USR$MASTERKEY_USR$NAME,  " & _
              "  Z.USR$CLASSNAME,  " & _
              "  Z.USR$RELATIONNAME " & _
              "  " & _
              "FROM  " & _
              "  USR$GDMN_PARAMSLINE Z " & _
              "    LEFT JOIN  " & _
              "      USR$GDMN_PARAMS Z_USR$MASTERKEY " & _
              "    ON  " & _
              "      Z_USR$MASTERKEY.ID  =  Z.USR$MASTERKEY " & _
              " " & _
              "WHERE  " & _
              "  Z.USR$MASTERKEY  =  :masterkey "
        
            ibsql.ParamByName("masterkey").AsInteger =  masterkey
            ibsql.ExecQuery
            while not ibsql.EOF
              gdcParamsLine.Insert
              gdcParamsLine.FieldByName("USR$MASTERKEY").AsInteger = newMasterkey
              for i = 0 to ibsql.Current.Count - 1
                if gdcParamsLine.Fields(i).FieldName <> "ID" and _
                  gdcParamsLine.Fields(i).FieldName <> "EDITIONDATE" and _
                  gdcParamsLine.Fields(i).FieldName <> "USR$MASTERKEY" _
                then
                  gdcParamsLine.Fields(i).Value = ibsql.Fields(i).Value
                end if
              next
              gdcParamsLine.Post
              ibsql.Next
            wend
          end if
        End Sub
        
  - 
    Properties: 
      Class: "TgdcDelphiObject"
      RUID: 246868758_1927707971
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
      HeadObject: 246868759_1927707971
    Fields: 
      PARENT: "246868642_1927707971 usrf_gdmn_user_params"
      NAME: "usrg_actDublicateParams"
      CLASSNAME: ""
      DESCRIPTION: ~
      MACROSGROUPKEY: ~
      OBJECTNAME: "usrg_actDublicateParams"
      OBJECTTYPE: 0
      REPORTGROUPKEY: ~
      SUBTYPE: ""
      EDITIONDATE: 2022-08-02T19:36:20+03:00
  - 
    Properties: 
      Class: "TgdcEvent"
      RUID: 246868759_1927707971
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
    Fields: 
      DISABLE: 0
      EVENTNAME: "ONEXECUTE"
      FUNCTIONKEY: "246868761_1927707971 usrg_actDublicateParamsOnExecute"
      OBJECTKEY: "246868758_1927707971 usrf_gdmn_user_params\\usrg_actDublicateParams"
      OBJECTNAME: "usrg_actDublicateParams"
      PARENTNAME: "usrf_gdmn_user_params"
      EDITIONDATE: 2022-08-03T14:37:23+03:00
  - 
    Properties: 
      Class: "TgdcFunction"
      RUID: 246868754_1927707971
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
      HeadObject: 246868752_1927707971
    Fields: 
      NAME: "usrg_actDeleteParamsLineOnExecute"
      COMMENT: ~
      EVENT: "ONEXECUTE"
      FUNCTIONTYPE: ~
      GROUPNAME: ~
      INHERITEDRULE: 0
      LANGUAGE: "VBScript"
      LOCALNAME: ~
      MODIFYDATE: ~
      MODULE: "EVENTS"
      MODULECODE: "246868642_1927707971 usrf_gdmn_user_params"
      OBJECTNAME: "usrf_gdmn_user_params"
      OWNERNAME: ~
      PUBLICFUNCTION: 1
      SHORTCUT: ~
      USEDEBUGINFO: 0
      EDITIONDATE: 2022-08-02T19:06:39+03:00
      DISPLAYSCRIPT: | 
        USRG_ACTDELETEPARAMSLINEONEXECUTE
        
      ENTEREDPARAMS: !!binary > 
        U0xQUlBSU1QGAAAAU0VOREVSBgAAAFNFTkRFUgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABGTlNU
        RkxQUg==
      SCRIPT: | 
        Option Explicit
        Sub usrg_actDeleteParamsLineOnExecute(ByVal Sender)
        '*** Данный код необходим для вызова встроенного обработчика ***
        '*** В случае его удаления возможно нарушение работы системы ***
          Call   Inherited(Sender, "OnExecute", Array(Sender))
        '*** конец кода поддержки встроенного обработчика            ***
          Sender.OwnerForm.FindComponent("usrg_gdcParamsLine").DeleteMultiple(Sender.OwnerForm.FindComponent("usrg_grParamsLine").SelectedRows)
        End Sub
        
  - 
    Properties: 
      Class: "TgdcDelphiObject"
      RUID: 246868751_1927707971
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
      HeadObject: 246868752_1927707971
    Fields: 
      PARENT: "246868642_1927707971 usrf_gdmn_user_params"
      NAME: "usrg_actDeleteParamsLine"
      CLASSNAME: ""
      DESCRIPTION: ~
      MACROSGROUPKEY: ~
      OBJECTNAME: "usrg_actDeleteParamsLine"
      OBJECTTYPE: 0
      REPORTGROUPKEY: ~
      SUBTYPE: ""
      EDITIONDATE: 2022-08-02T19:00:51+03:00
  - 
    Properties: 
      Class: "TgdcEvent"
      RUID: 246868752_1927707971
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
    Fields: 
      DISABLE: 0
      EVENTNAME: "ONEXECUTE"
      FUNCTIONKEY: "246868754_1927707971 usrg_actDeleteParamsLineOnExecute"
      OBJECTKEY: "246868751_1927707971 usrf_gdmn_user_params\\usrg_actDeleteParamsLine"
      OBJECTNAME: "usrg_actDeleteParamsLine"
      PARENTNAME: "usrf_gdmn_user_params"
      EDITIONDATE: 2022-08-02T19:06:39+03:00
  - 
    Properties: 
      Class: "TgdcFunction"
      RUID: 246868742_1927707971
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
      HeadObject: 246868740_1927707971
    Fields: 
      NAME: "usrg_actDeleteParamsOnExecute"
      COMMENT: ~
      EVENT: "ONEXECUTE"
      FUNCTIONTYPE: ~
      GROUPNAME: ~
      INHERITEDRULE: 0
      LANGUAGE: "VBScript"
      LOCALNAME: ~
      MODIFYDATE: ~
      MODULE: "EVENTS"
      MODULECODE: "246868642_1927707971 usrf_gdmn_user_params"
      OBJECTNAME: "usrf_gdmn_user_params"
      OWNERNAME: ~
      PUBLICFUNCTION: 1
      SHORTCUT: ~
      USEDEBUGINFO: 0
      EDITIONDATE: 2022-08-02T19:06:17+03:00
      DISPLAYSCRIPT: | 
        USRG_ACTDELETEPARAMSONEXECUTE
        
      ENTEREDPARAMS: !!binary > 
        U0xQUlBSU1QGAAAAU0VOREVSBgAAAFNFTkRFUgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABGTlNU
        RkxQUg==
      SCRIPT: | 
        Option Explicit
        Sub usrg_actDeleteParamsOnExecute(ByVal Sender)
        '*** Данный код необходим для вызова встроенного обработчика ***
        '*** В случае его удаления возможно нарушение работы системы ***
          Call   Inherited(Sender, "OnExecute", Array(Sender))
        '*** конец кода поддержки встроенного обработчика            ***
          Sender.OwnerForm.FindComponent("usrg_gdcParams").DeleteMultiple(Sender.OwnerForm.FindComponent("usrg_grParams").SelectedRows)
        End Sub
        
  - 
    Properties: 
      Class: "TgdcDelphiObject"
      RUID: 246868739_1927707971
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
      HeadObject: 246868740_1927707971
    Fields: 
      PARENT: "246868642_1927707971 usrf_gdmn_user_params"
      NAME: "usrg_actDeleteParams"
      CLASSNAME: ""
      DESCRIPTION: ~
      MACROSGROUPKEY: ~
      OBJECTNAME: "usrg_actDeleteParams"
      OBJECTTYPE: 0
      REPORTGROUPKEY: ~
      SUBTYPE: ""
      EDITIONDATE: 2022-08-02T19:00:20+03:00
  - 
    Properties: 
      Class: "TgdcEvent"
      RUID: 246868740_1927707971
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
    Fields: 
      DISABLE: 0
      EVENTNAME: "ONEXECUTE"
      FUNCTIONKEY: "246868742_1927707971 usrg_actDeleteParamsOnExecute"
      OBJECTKEY: "246868739_1927707971 usrf_gdmn_user_params\\usrg_actDeleteParams"
      OBJECTNAME: "usrg_actDeleteParams"
      PARENTNAME: "usrf_gdmn_user_params"
      EDITIONDATE: 2022-08-02T19:06:17+03:00
  - 
    Properties: 
      Class: "TgdcFunction"
      RUID: 246868746_1927707971
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
      HeadObject: 246868744_1927707971
    Fields: 
      NAME: "usrg_actAddParamsLineOnExecute"
      COMMENT: ~
      EVENT: "ONEXECUTE"
      FUNCTIONTYPE: ~
      GROUPNAME: ~
      INHERITEDRULE: 0
      LANGUAGE: "VBScript"
      LOCALNAME: ~
      MODIFYDATE: ~
      MODULE: "EVENTS"
      MODULECODE: "246868642_1927707971 usrf_gdmn_user_params"
      OBJECTNAME: "usrf_gdmn_user_params"
      OWNERNAME: ~
      PUBLICFUNCTION: 1
      SHORTCUT: ~
      USEDEBUGINFO: 0
      EDITIONDATE: 2022-08-02T19:05:03+03:00
      DISPLAYSCRIPT: | 
        USRG_ACTADDPARAMSLINEONEXECUTE
        
      ENTEREDPARAMS: !!binary > 
        U0xQUlBSU1QGAAAAU0VOREVSBgAAAFNFTkRFUgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABGTlNU
        RkxQUg==
      SCRIPT: | 
        Option Explicit
        Sub usrg_actAddParamsLineOnExecute(ByVal Sender)
        '*** Данный код необходим для вызова встроенного обработчика ***
        '*** В случае его удаления возможно нарушение работы системы ***
          Call   Inherited(Sender, "OnExecute", Array(Sender))
        '*** конец кода поддержки встроенного обработчика            ***
          call Sender.OwnerForm.GetComponent("usrg_gdcParamsLine").CreateDialog("")
        End Sub
        
  - 
    Properties: 
      Class: "TgdcDelphiObject"
      RUID: 246868743_1927707971
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
      HeadObject: 246868744_1927707971
    Fields: 
      PARENT: "246868642_1927707971 usrf_gdmn_user_params"
      NAME: "usrg_actAddParamsLine"
      CLASSNAME: ""
      DESCRIPTION: ~
      MACROSGROUPKEY: ~
      OBJECTNAME: "usrg_actAddParamsLine"
      OBJECTTYPE: 0
      REPORTGROUPKEY: ~
      SUBTYPE: ""
      EDITIONDATE: 2022-08-02T19:00:32+03:00
  - 
    Properties: 
      Class: "TgdcEvent"
      RUID: 246868744_1927707971
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
    Fields: 
      DISABLE: 0
      EVENTNAME: "ONEXECUTE"
      FUNCTIONKEY: "246868746_1927707971 usrg_actAddParamsLineOnExecute"
      OBJECTKEY: "246868743_1927707971 usrf_gdmn_user_params\\usrg_actAddParamsLine"
      OBJECTNAME: "usrg_actAddParamsLine"
      PARENTNAME: "usrf_gdmn_user_params"
      EDITIONDATE: 2022-08-02T19:05:03+03:00
  - 
    Properties: 
      Class: "TgdcFunction"
      RUID: 246868734_1927707971
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
      HeadObject: 246868732_1927707971
    Fields: 
      NAME: "usrg_actAddParamsOnExecute"
      COMMENT: ~
      EVENT: "ONEXECUTE"
      FUNCTIONTYPE: ~
      GROUPNAME: ~
      INHERITEDRULE: 0
      LANGUAGE: "VBScript"
      LOCALNAME: ~
      MODIFYDATE: ~
      MODULE: "EVENTS"
      MODULECODE: "246868642_1927707971 usrf_gdmn_user_params"
      OBJECTNAME: "usrf_gdmn_user_params"
      OWNERNAME: ~
      PUBLICFUNCTION: 1
      SHORTCUT: ~
      USEDEBUGINFO: 0
      EDITIONDATE: 2022-08-03T17:50:26+03:00
      DISPLAYSCRIPT: | 
        USRG_ACTADDPARAMSONEXECUTE
        
      ENTEREDPARAMS: !!binary > 
        U0xQUlBSU1QGAAAAU0VOREVSBgAAAFNFTkRFUgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABGTlNU
        RkxQUg==
      SCRIPT: | 
        Option Explicit
        Sub usrg_actAddParamsOnExecute(ByVal Sender)
        '*** Данный код необходим для вызова встроенного обработчика ***
        '*** В случае его удаления возможно нарушение работы системы ***
          Call   Inherited(Sender, "OnExecute", Array(Sender))
        '*** конец кода поддержки встроенного обработчика            ***
          dim gdcParams, systemKey, DialogBox, DialogResult
          set gdcParams = Sender.OwnerForm.GetComponent("usrg_gdcParams")
          systemKey = gdcParams.FieldByName("USR$SYSTEMKEY").AsInteger
          if systemKey = 0 then
            ' Вызовем диалог выбора
            set DialogBox = System.GetNewParamWindow(0)
            call DialogBox.AddLinkParam("Подсистема", "prmLinkElement", _
              "USR$GDMN_SYSTEMS", "id", "usr$name", "", "", "")
            DialogBox.ParamList.Params(0).Required = True
            DialogResult = DialogBox.Execute
        
            ' Если пользователь выбрал подсистему и нажал ОК
            if not IsEmpty(DialogResult) then
              systemKey =  DialogResult(0)(0)
            end if
          end if
          if systemKey > 0  then
            gdcParams.Insert
            gdcParams.FieldByName("USR$SYSTEMKEY").AsInteger = systemKey
            call gdcParams.CreateDialog("")
          end if
        End Sub
        
  - 
    Properties: 
      Class: "TgdcDelphiObject"
      RUID: 246868731_1927707971
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
      HeadObject: 246868732_1927707971
    Fields: 
      PARENT: "246868642_1927707971 usrf_gdmn_user_params"
      NAME: "usrg_actAddParams"
      CLASSNAME: ""
      DESCRIPTION: ~
      MACROSGROUPKEY: ~
      OBJECTNAME: "usrg_actAddParams"
      OBJECTTYPE: 0
      REPORTGROUPKEY: ~
      SUBTYPE: ""
      EDITIONDATE: 2022-08-02T19:00:02+03:00
  - 
    Properties: 
      Class: "TgdcEvent"
      RUID: 246868732_1927707971
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
    Fields: 
      DISABLE: 0
      EVENTNAME: "ONEXECUTE"
      FUNCTIONKEY: "246868734_1927707971 usrg_actAddParamsOnExecute"
      OBJECTKEY: "246868731_1927707971 usrf_gdmn_user_params\\usrg_actAddParams"
      OBJECTNAME: "usrg_actAddParams"
      PARENTNAME: "usrf_gdmn_user_params"
      EDITIONDATE: 2022-08-03T17:50:26+03:00
  - 
    Properties: 
      Class: "TgdcExplorer"
      RUID: 246868720_1927707971
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
    Fields: 
      PARENT: "1176267675_1457844439 Исследователь\\Мобильное приложение (WS)"
      NAME: "Параметры для пользователей"
      CLASSNAME: ~
      CMD: "246868653_1927707971"
      CMDTYPE: 1
      HOTKEY: ~
      IMGINDEX: 0
      ORDR: ~
      SUBTYPE: ~
      EDITIONDATE: 2022-08-02T18:17:57+03:00
      DISABLED: 0
  - 
    Properties: 
      Class: "TgdcFunction"
      RUID: 147122854_1730903579
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
    Fields: 
      NAME: "Macros147122854_1730903579"
      COMMENT: ~
      EVENT: ~
      FUNCTIONTYPE: ~
      GROUPNAME: ~
      INHERITEDRULE: 0
      LANGUAGE: "VBScript"
      LOCALNAME: ~
      MODIFYDATE: ~
      MODULE: "MACROS"
      MODULECODE: "148998328_1521203129 gdc_frmAttrUserDefinedUSR_GDMN_SYSTEMS"
      OBJECTNAME: "gdc_frmAttrUserDefinedUSR_GDMN_SYSTEMS"
      OWNERNAME: ~
      PUBLICFUNCTION: 1
      SHORTCUT: ~
      USEDEBUGINFO: 0
      EDITIONDATE: 2022-09-22T18:59:53+03:00
      DISPLAYSCRIPT: | 
        MACROS147122854_1730903579
        
      ENTEREDPARAMS: !!binary > 
        U0xQUlBSU1QJAAAAT1dORVJGT1JNCQAAAE9XTkVSRk9STQAAAAAAAAAAAAAAAAsAAAAAAAAAAAAA
        AABGTlNUUFJTVAwAAABBUFBTWVNURU1LRVkLAAAAz+7k8ejx8uXs4DoQAAAAVVNSJEdETU5fU1lT
        VEVNUwgAAABVU1IkTkFNRQIAAABJRAcAAAAAAAAAAAAAAABGTlNURkxQUg==
      SCRIPT: | 
        Option Explicit
        Sub Macros147122854_1730903579(OwnerForm, appSystemKey)
          dim web_service, Creator, ibsql, CompanyKey, errorMessage
          Set web_service = (New TVB_Web_Service)(appSystemKey(0))
          set Creator = new TCreator
          set ibsql = Creator.GetObject(nil, "TIBSQL", "")
          ibsql.Transaction = gdcBaseManager.ReadTransaction
        
          CompanyKey =  web_service.CompanyKey
          if CompanyKey = "" then
            errorMessage = " Код компании отсутствует или не верен! " & vbCr  & _
              " нажмите кнопку 'Получить код'"
            call Application.MessageBox(errorMessage, "Внимание!", vbInformation + vbOkOnly + vbApplicationModal)
            exit sub
          end if
          ibsql.Close
          ibsql.SQL.Text = _
            "select " & _
            "  u.USR$ERPUSERPASSWORD, " & _
            "  u.USR$ERPUSERNAME " & _
            "from USR$GDMN_SYSTEMS u " & _
            "where u.id = :systemkey " & _
            "  and not u.USR$ERPUSERDEVICEID is null "
          ibsql.ParamByName("systemkey").AsInteger = appSystemKey(0)
          ibsql.ExecQuery
        
          if ibsql.RecordCount = 0 then
            errorMessage = " Пользователь ERP данной подсистемы " & _
              " отсутствует в справочнике 'Подсистемы мобильного приложения'" & vbCr & _
              " либо у него не заполнен ID устройства." & vbCr & vbCr & _
              " Выполните макрос 'Импорт подсистем с сервера' и проверьте пароль"
            call Application.MessageBox(errorMessage, "Внимание!", vbInformation + vbOkOnly + vbApplicationModal)
            exit sub
          end if
          dim userLogin, userPassw
          userLogin =  ibsql.FieldByName("USR$ERPUSERNAME").AsString
          userPassw =  ibsql.FieldByName("USR$ERPUSERPASSWORD").AsString
        
          call web_service.TestUser(web_service.ServerURL, userLogin, UserPassw)
        
          if web_service.RequestStatus = 200 then
            call Application.MessageBox("Проверка пользователя " & userLogin & " прошла успешно!", "Внимание!", vbInformation + vbOkOnly + vbApplicationModal)
          else
            if web_service.RequestError > "" then
              errorMessage = web_service.RequestError
            else
              errorMessage = " Неустановленная ошибка. Проверьте: " & vbCr & _
              " 1. Логин/пароль;" & vbCr & _
              " 2. Cоответствие базы файлов мобильному приложению; " & vbCr & _
              " 3. Код системы в пункте 'Подсистемы мобильного приложения'; "
            end if
            call Application.MessageBox(errorMessage, "Внимание!", vbInformation + vbOkOnly + vbApplicationModal)
          end if
        End Sub
        
  - 
    Properties: 
      Class: "TgdcMacros"
      RUID: 147122852_1730903579
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
    Fields: 
      NAME: "Проверить пользователя ERP  для подсистемы"
      DISPLAYINMENU: 1
      EXECUTEDATE: ~
      FUNCTIONKEY: "147122854_1730903579 Macros147122854_1730903579"
      ISLOCALEXECUTE: 0
      ISREBUILD: 0
      MACROSGROUPKEY: "147163109_1545402342 Локальные макросы"
      OBJECTNAME: "gdc_frmAttrUserDefinedUSR_GDMN_SYSTEMS"
      SERVERKEY: ~
      SHORTCUT: 0
      EDITIONDATE: 2022-09-22T18:59:54+03:00
  - 
    Properties: 
      Class: "TgdcFunction"
      RUID: 147123326_1730903579
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
    Fields: 
      NAME: "web_recalcParametres"
      COMMENT: ~
      EVENT: ~
      FUNCTIONTYPE: ~
      GROUPNAME: ~
      INHERITEDRULE: 0
      LANGUAGE: "VBScript"
      LOCALNAME: ~
      MODIFYDATE: ~
      MODULE: "UNKNOWN"
      MODULECODE: "1010001_17 APPLICATION"
      OBJECTNAME: "APPLICATION"
      OWNERNAME: ~
      PUBLICFUNCTION: 1
      SHORTCUT: ~
      USEDEBUGINFO: 0
      EDITIONDATE: 2022-10-26T18:32:35+03:00
      DISPLAYSCRIPT: | 
        WEB_RECALCPARAMETRES
        
      ENTEREDPARAMS: !!binary > 
        U0xQUlBSU1QDAAAARElTAwAAAERJUwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABGTlNUUFJTVAgA
        AABVU0VSUlVJRAgAAABVU0VSUlVJRAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABGTlNUUFJTVAwA
        AABBUlJERVZJQ0VVSUQMAAAAQVJSREVWSUNFVUlEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEZO
        U1RQUlNUCAAAAElTUEFSQU1TCAAAAElTUEFSQU1TAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEZO
        U1RQUlNUBgAAAFVTRVJJRAYAAABVU0VSSUQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAARk5TVFBS
        U1QJAAAAU1lTVEVNS0VZCQAAAFNZU1RFTUtFWQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABGTlNU
        RkxQUg==
      SCRIPT: | 
        '#include  web_recalcParametres
        Option Explicit
        Function web_recalcParametres(byVal dis, ByVal userRuid, byVal arrDeviceUid, byVal isParams, userID, systemkey)
           dim Creator, ibsql, newContactkey, newDisabled, comment, a(2), disabled
           set Creator = new TCreator
           set ibsql = Creator.GetObject(nil, "TIBSQL", "")
           ibsql.Transaction = gdcBaseManager.ReadTransaction
           if dis = True then
             disabled = 1
           else
             disabled = 0
           end if
          dim ruid, xid, dbid, userkey
          if userRuid <> "" then
            ruid = split(trim(userRuid), "_")
            xid = ruid(0)
            if ubound(ruid) > 0 then
              dbid = ruid(1)
            end if
            if xid > 0 and dbid > 0 then
              ibsql.Close
              ibsql.SQL.Text = _
                "select c.ID from gd_contact c " & _
                "where c.ID = (select " & _
                "  r.ID " & _
                "from gd_ruid r " & _
                "where r.XID = :xid " & _
                "  and r.DBID = :dbid) "
              ibsql.ParamByName("xid").AsInteger = xid
              ibsql.ParamByName("dbid").AsInteger = dbid
              ibsql.ExecQuery
              if  ibsql.Recordcount > 0  then
                userkey = ibsql.FieldByName("id").AsInteger
              else
                userkey = 0
              end if
            else
              userkey = 0
            end if
          end if
          comment = ""
          if userkey > 0 then
             newContactkey = userkey
             newDisabled = disabled
          else
             newContactkey = 0
             newDisabled = 1
             comment = "Отсутствует или неверный ID* (RUID пользователя) в системе администрирования"
          end if
          if  IsNull(arrDeviceUid) then
            newDisabled = 1
            comment = comment + " Отсутствует Устройство для пользователя в системе администрирования"
          end if
          if isParams = 1 then
            ibsql.Close
            ibsql.SQL.Text = _
              "select " & vbCrLf & _
              "  coalesce(u.USR$PARAMSKEY, 0) as USR$PARAMSKEY " & vbCrLf & _
              "from  USR$GDMN_USERS u " & vbCrLf & _
              "where u.USR$SYSTEMKEY = :systemkey " & vbCrLf & _
              "  and u.USR$MOBILEID = :userId "
            ibsql.ParamByName("userId").AsString = userId
            ibsql.ParamByName("systemkey").AsInteger = systemkey
            ibsql.ExecQuery
            if ibsql.FieldByName("USR$PARAMSKEY").AsInteger = 0 then
              newDisabled = 1
              comment = comment + " В данной подсистеме для пользователя необходимо выбрать параметры для справочников"
            end if
          end if
          a(0) = newContactkey
          a(1) = newDisabled
          a(2) = comment
          web_recalcParametres = a
        End Function
        
  - 
    Properties: 
      Class: "TgdcFunction"
      RUID: 147117905_1730903579
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
    Fields: 
      NAME: "Macros3147117905_1730903579"
      COMMENT: ~
      EVENT: ~
      FUNCTIONTYPE: ~
      GROUPNAME: ~
      INHERITEDRULE: 0
      LANGUAGE: "VBScript"
      LOCALNAME: ~
      MODIFYDATE: ~
      MODULE: "MACROS"
      MODULECODE: "1176276983_1457844439 gdc_frmAttrUserDefinedUSR_GDMN_USERS"
      OBJECTNAME: "gdc_frmAttrUserDefinedUSR_GDMN_USERS"
      OWNERNAME: ~
      PUBLICFUNCTION: 1
      SHORTCUT: ~
      USEDEBUGINFO: 0
      EDITIONDATE: 2022-10-26T18:32:23+03:00
      DISPLAYSCRIPT: | 
        MACROS3147117905_1730903579
        
      ENTEREDPARAMS: !!binary > 
        U0xQUlBSU1QJAAAAT1dORVJGT1JNCQAAAE9XTkVSRk9STQAAAAAAAAAAAAAAAAsAAAAAAAAAAAAA
        AABGTlNUUFJTVAwAAABBUFBTWVNURU1LRVkKAAAAz+7k8ejx8uXs4BAAAABVU1IkR0RNTl9TWVNU
        RU1TCAAAAHVzciRuYW1lAgAAAGlkBwAAAAAAAAAAAgAAAF5SRk5TVEZMUFI=
      SCRIPT: | 
        '#include  web_recalcParametres
        Option Explicit
        Sub Macros3147117905_1730903579(OwnerForm, appSystemKey)
          dim web_service, version, gdcObject, appSystemId, AError
          dim Creator, ibsql, ibsqlDevice
          set gdcObject = OwnerForm.gdcObject
          if not gdcObject.Transaction.InTransaction then
            gdcObject.Transaction.StartTransaction
          end if
          gdcObject.Filtered = False
          set web_service = New TVB_Web_Service
          set Creator = new TCreator
          set ibsqlDevice = Creator.GetObject(nil, "TIBSQL", "")
          ibsqlDevice.Transaction = gdcObject.Transaction
          set ibsql = Creator.GetObject(nil, "TIBSQL", "")
          ibsql.Transaction = gdcbaseManager.ReadTransaction
          ibsql.SQL.Text = _
            "select b.id, " & _
            "  b.USR$ERPUSERID, " & _
            "  coalesce(b.USR$ISPARAMS, 0) as USR$ISPARAMS, " & _
            "  b.USR$NAME " & _
            "from USR$GDMN_SYSTEMS b " & _
            "where b.ID = :appSystemKey "
          ibsql.ParamByName("appSystemKey").AsInteger = appSystemKey(0)
          ibsql.ExecQuery
          dim gdmnId, isParams
            'Вход администратора компании
          call web_service.Login(web_service.AdminLogin, web_service.AdminPassw)
          If web_service.RequestStatus = 200 or web_service.RequestStatus = 403 Then
            gdmnId = ibsql.FieldByName("USR$ERPUSERID").AsString
            if gdmnId = "" then
               AError = " Пользователь ERP подсистемы " & ibsql.FieldByName("USR$NAME").AsString & _
                 " отсутствует в справочнике 'Подсистемы мобильного приложения'" & vbCr & _
                 " либо у него не заполнен ID устройства." & vbCr & vbCr & _
                 " Выполните макрос 'Импорт подсистем с сервера' и проверьте пароль"
               web_service.SetError(AError)
            else
              isParams = ibsql.FieldByName("USR$ISPARAMS").AsInteger
              'Получаем всех пользователей компании по подсистеме
              call web_service.GetUsersWithDevice("erpUserId=" & gdmnId)
              if web_service.RequestStatus = 200 and Assigned(web_service.RequestData) then
                dim usersObj, countResults, objResult, m, userID, userName, deviceUid, _
                  userAlias, userRuid, disabled, countDevices, arrDeviceUid(), j, Res, idDev
                set usersObj = web_service.RequestData
                countResults = usersObj.Value("data").ObjectItemsCount
                objResult = usersObj.SimpleValue("result", "")
                for m = 0 to countResults - 1
                  set ObjResult = usersObj.Value("data").ObjectItem(m)
                  userID = trim(objResult.SimpleValue("id", ""))
                  userName = trim(objResult.SimpleValue("name", ""))
                  userAlias = trim(objResult.SimpleValue("alias", ""))
                  userRuid = trim(objResult.SimpleValue("externalId", ""))
                  countDevices = 0
                  if  Assigned(objResult.Value("deviceUids")) then
                    countDevices = objResult.Value("deviceUids").ObjectItemsCount
                    if countDevices > 0 then
                      redim Preserve arrDeviceUid(countDevices - 1)
                      for j = 0 to countDevices - 1
                        arrDeviceUid(j) = objResult.Value("deviceUids").ObjectItem(j).value
                      next
                      deviceUid = arrDeviceUid
                    else
                      deviceUid = null
                    end if
                  else
                    deviceUid = null
                  end if
                  disabled = objResult.SimpleValue("disabled", False)
                  comment = ""
                  dim oldContactkey, oldDisabled, oldLogin
                  dim  newContactkey, newDisabled, comment, a
                  a = web_recalcParametres(disabled, userRuid, deviceUid, isParams, userID, appSystemKey(0))
                  newContactkey = a(0)
                  newDisabled = a(1)
                  comment = a(2)
        
                  if not gdcObject.Locate("USR$MOBILEID", Array(userID), false)  then
                    gdcObject.Append
                    gdcObject.FieldByName("USR$SYSTEMKEY").AsInteger = appSystemKey(0)
                    gdcObject.FieldByName("USR$MOBILEID").AsString = userID
                    gdcObject.FieldByName("USR$MOBILELOGIN").AsString = userName
                    if  newContactkey = 0 then
                      gdcObject.FieldByName("USR$CONTACTKEY").AsVariant = null
                    else
                      gdcObject.FieldByName("USR$CONTACTKEY").AsInteger = newContactkey
                    end if
                    gdcObject.FieldByName("USR$NOTACTIVE").AsInteger = newDisabled
                    gdcObject.FieldByName("USR$COMMENT").AsString = comment
                    gdcObject.Post
                    if countDevices > 0 then
                      for j = 0 to UBound(arrDeviceUid)
                        call gdcBaseManager.ExecSingleQueryResult("select id from GD_P_GETNEXTID ", _
                          NULL, Res, gdcObject.Transaction)
                        idDev = Res(0, 0)
                        ibsqlDevice.Close
                        ibsqlDevice.SQL.Text = _
                          "insert into USR$GDMN_DEVICES(ID, USR$GDMN_USER, USR$MOBILEID, USR$NOTISACTIVE) "  &_
                            "values (:ID, :GDMN_USER, :MOBILEID, :NOTISACTIVE ) "
                        ibsqlDevice.ParamByName("id").AsInteger = idDev
                        ibsqlDevice.ParamByName("GDMN_USER").AsInteger = gdcObject.FieldByName("id").AsInteger
                        ibsqlDevice.ParamByName("MOBILEID").AsString = arrDeviceUid(j)
                        ibsqlDevice.ParamByName("NOTISACTIVE").AsInteger = 0
                        ibsqlDevice.ExecQuery
                      next
                    end if
                  else
                    oldDisabled = gdcObject.FieldByName("USR$NOTACTIVE").AsVariant
                    if gdcObject.FieldByName("USR$CONTACTKEY").IsNull then
                      oldContactkey = 0
                    else
                      oldContactkey = gdcObject.FieldByName("USR$CONTACTKEY").AsVariant
                    end if
                    oldLogin = gdcObject.FieldByName("USR$MOBILELOGIN").AsString
                    if oldContactkey <> newContactkey or _
                      oldDisabled <> newDisabled or _
                      oldLogin <> userName then
                      gdcObject.Edit
                      gdcObject.FieldByName("USR$SYSTEMKEY").AsInteger = appSystemKey(0)
                      gdcObject.FieldByName("USR$MOBILELOGIN").AsString = userName
                      if  newContactkey = 0 then
                        gdcObject.FieldByName("USR$CONTACTKEY").AsVariant = null
                      else
                        gdcObject.FieldByName("USR$CONTACTKEY").AsInteger = newContactkey
                      end if
                      gdcObject.FieldByName("USR$NOTACTIVE").AsInteger = newDisabled
                      gdcObject.FieldByName("USR$COMMENT").AsString = comment
                      gdcObject.Post
                    end if
                  end if
                  if countDevices > 0  then
                    for j = 0 to UBound(arrDeviceUid)
                      ibsqlDevice.Close
                      ibsqlDevice.SQL.Text = _
                        "select b.ID, coalesce(b.USR$NOTISACTIVE, 0) as USR$NOTISACTIVE " & vbCrLf & _
                        "from USR$GDMN_DEVICES b " & vbCrLf & _
                        "where b.USR$GDMN_USER = :masterkey " & vbCrLf & _
                        "  and b.USR$MOBILEID = :mobileId "
                      ibsqlDevice.ParamByName("masterkey").AsInteger = gdcObject.FieldByName("id").AsInteger
                      ibsqlDevice.ParamByName("MOBILEID").AsString = arrDeviceUid(j)
                      ibsqlDevice.ExecQuery
                      
                      if ibsqlDevice.RecordCount = 0 then
                        call gdcBaseManager.ExecSingleQueryResult("select id from GD_P_GETNEXTID ", _
                          NULL, Res, gdcObject.Transaction)
                        idDev = Res(0, 0)
                        ibsqlDevice.Close
                        ibsqlDevice.SQL.Text = _
                          "insert into USR$GDMN_DEVICES(ID, USR$GDMN_USER, USR$MOBILEID, USR$NOTISACTIVE) "  &_
                            "values (:ID, :GDMN_USER, :MOBILEID, :NOTISACTIVE ) "
                        ibsqlDevice.ParamByName("id").AsInteger = idDev
                        ibsqlDevice.ParamByName("GDMN_USER").AsInteger = gdcObject.FieldByName("id").AsInteger
                        ibsqlDevice.ParamByName("MOBILEID").AsString = arrDeviceUid(j)
                        ibsqlDevice.ParamByName("NOTISACTIVE").AsInteger = 0
                        ibsqlDevice.ExecQuery
                      end if
                    next
                    'Убираем лишние, которые не используются
                    ibsqlDevice.Close
                    ibsqlDevice.SQL.Text = _
                      "select b.USR$MOBILEID " & vbCrLf & _
                      "from USR$GDMN_DEVICES b " & vbCrLf & _
                      "where b.USR$GDMN_USER = :masterkey "
                    ibsqlDevice.ParamByName("masterkey").AsInteger = gdcObject.FieldByName("id").AsInteger
                    ibsqlDevice.ExecQuery
                    while not ibsqlDevice.EOF
                      if UBound(Filter(arrDeviceUid, ibsqlDevice.FieldByName("USR$MOBILEID").AsString, True)) < 0 then
                          call gdcBaseManager.ExecSingleQueryResult("delete from USR$GDMN_DEVICES " & _
                            "where USR$MOBILEID = :mobileId and USR$GDMN_USER = :masterkey ", _
                          Array(ibsqlDevice.FieldByName("USR$MOBILEID").AsString, gdcObject.FieldByName("id").AsInteger) , _
                            Res, gdcObject.Transaction)
                      end if
                      ibsqlDevice.Next
                    wend
                  end if
                next
              end if
            end if
            if gdcObject.Transaction.InTransaction then
              gdcObject.Transaction.Commit
            end if
        
            if web_service.HasError then
              call Application.MessageBox("Импорт выполнен с ошибками!", "Внимание!", vbInformation + vbOkOnly + vbApplicationModal)
            else
              call Application.MessageBox("Импорт успешно выполнен!", "Внимание!", vbInformation + vbOkOnly + vbApplicationModal)
            end if
          else
            call Application.MessageBox(web_service.RequestError, "Внимание!", vbInformation + vbOkOnly + vbApplicationModal)
          end if
           'Выход пользователя
          call web_service.Logout()
        
        End Sub
        
    Set: 
      - 
        Table: "RP_ADDITIONALFUNCTION"
        Items: 
          - 
            ADDFUNCTIONKEY: "147123326_1730903579 web_recalcParametres"
  - 
    Properties: 
      Class: "TgdcMacros"
      RUID: 147117903_1730903579
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
    Fields: 
      NAME: " GDMN_1.0.0. Экспорт пользователей из WEB_ADMIN"
      DISPLAYINMENU: 1
      EXECUTEDATE: ~
      FUNCTIONKEY: "147117905_1730903579 Macros3147117905_1730903579"
      ISLOCALEXECUTE: 0
      ISREBUILD: 0
      MACROSGROUPKEY: "1176277022_1457844439 Локальные макросы"
      OBJECTNAME: "gdc_frmAttrUserDefinedUSR_GDMN_USERS"
      SERVERKEY: ~
      SHORTCUT: 0
      EDITIONDATE: 2022-10-26T18:32:23+03:00
  - 
    Properties: 
      Class: "TgdcFunction"
      RUID: 1176277898_1457844439
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
    Fields: 
      NAME: "web_callAutoReference"
      COMMENT: ~
      EVENT: ~
      FUNCTIONTYPE: ~
      GROUPNAME: ~
      INHERITEDRULE: 0
      LANGUAGE: "VBScript"
      LOCALNAME: ~
      MODIFYDATE: 2021-06-15T18:45:02+03:00
      MODULE: "UNKNOWN"
      MODULECODE: "1010001_17 APPLICATION"
      OBJECTNAME: "APPLICATION"
      OWNERNAME: ~
      PUBLICFUNCTION: 1
      SHORTCUT: ~
      USEDEBUGINFO: ~
      EDITIONDATE: 2022-10-26T18:26:00+03:00
      DISPLAYSCRIPT: | 
        WEB_CALLAUTOREFERENCE
        WEB_CALLAUTOREFERENCE_ROLLBACK
        
      ENTEREDPARAMS: ~
      SCRIPT: | 
        '#include  web_autoGetReferens
        '#include  web_recalcParametres
        Option Explicit
        Function web_callAutoReference
          dim Creator, ibsql, functionkey, FuncParamArray, order, AError, ibsqlDevice
           ' AppSystem - подсистема, для которой делается автозадача
          ' Для каждой подсистемы необходима своя автозадача
          dim AppSystem, flag, period, gdmnId, gdmn, gdmnPassw, isParams, Transaction, web_service
          flag = false
          period = time
          on error resume next
          AppSystem = gdcBaseManager.GetIDByRUIDString("472927658_1549072347")
          set web_service = (New TVB_Web_Service)(AppSystem)
          set Creator = new TCreator
          set ibsql = Creator.GetObject(nil, "TIBSQL", "")
          ibsql.Transaction = gdcBaseManager.ReadTransaction
          ibsql.SQL.Text = _
            "select " & _
            "  u.USR$ERPUSERID, " & _
            "  u.USR$ERPUSERPASSWORD, " & _
            "  u.USR$ERPUSERNAME, " & _
            "  coalesce(u.USR$ISPARAMS, 0) as USR$ISPARAMS " & _
            "from USR$GDMN_SYSTEMS u " & _
            "where u.id = :systemkey " & _
            "  and not u.USR$ERPUSERDEVICEID is null "
          ibsql.ParamByName("systemkey").AsInteger = AppSystem
          ibsql.ExecQuery
          if ibsql.RecordCount > 0 then
            gdmnId = ibsql.FieldByName("USR$ERPUSERID").AsString
            gdmn = ibsql.FieldByName("USR$ERPUSERNAME").AsString
            gdmnPassw = ibsql.FieldByName("USR$ERPUSERPASSWORD").AsString
            isParams = ibsql.FieldByName("USR$ISPARAMS").AsInteger
          else
            AError = " Пользователь ERP данной подсистемы " & _
            " отсутствует в справочнике 'Подсистемы мобильного приложения'" & vbCr & _
            " либо у него не заполнен ID устройства." & vbCr & vbCr & _
            " Выполните макрос 'Импорт подсистем с сервера' и проверьте пароль"
            web_service.SetError(AError)
            exit function
          end if
          if gdmnId = "" then
            AError = "Экспорт не выполнен! Добавьте данные пользователя " & _
                web_service.UserLogin & " в справочник Подсистемы мобильного приложения!"
            web_service.SetError(AError)
            exit function
          end if
          'Вход пользователя
          call web_service.Login(gdmn, gdmnPassw)
          if web_service.RequestStatus <> 200 then
             AError = web_service.RequestError
             web_service.SetError(AError)
             exit function
          else
            'Стартуем транзакцию
            set Transaction = Creator.GetObject(Null, "TIBTransaction", "Transaction")
            Transaction.Params.Add("nowait")
            Transaction.DefaultDatabase = gdcBaseManager.Database
            Transaction.StartTransaction
            except web_callAutoReference_RollBack(Transaction)
            set ibsqlDevice = Creator.GetObject(nil, "TIBSQL", "")
            ibsqlDevice.Transaction = Transaction
            ' Достаем пользователей из API по erpUserId
            ' и если нет такого в  USR$GDMN_USERS добавляем
            ' и делаем неактивным , если в системе стоит галочка @с параметрами@
            ' по нему не отправляем справочники
            ' если нет галочки, то отправляем справочники и по новому пользователю
        
            'Получаем всех пользователей компании и подсистемы
            call web_service.GetUsersWithDevice("erpUserId=" & gdmnId)
            if web_service.RequestStatus = 200 and Assigned(web_service.RequestData) then
              dim usersObj, countResults, objResult, m, userID, userName, deviceUid, _
                userAlias, userRuid, disabled, countDevices, arrDeviceUid(), j
              set usersObj = web_service.RequestData
              countResults = usersObj.Value("data").ObjectItemsCount
              objResult = usersObj.SimpleValue("result", "")
              for m = 0 to countResults - 1
                set ObjResult = usersObj.Value("data").ObjectItem(m)
                userID = trim(objResult.SimpleValue("id", ""))
                userName = trim(objResult.SimpleValue("name", ""))
                userAlias = trim(objResult.SimpleValue("alias", ""))
                userRuid = trim(objResult.SimpleValue("externalId", ""))
                countDevices = 0
                if  Assigned(objResult.Value("deviceUids")) then
                  countDevices = objResult.Value("deviceUids").ObjectItemsCount
                  if countDevices > 0 then
                    redim Preserve arrDeviceUid(countDevices - 1)
                    for j = 0 to countDevices - 1
                      arrDeviceUid(j) = objResult.Value("deviceUids").ObjectItem(j).value
                    next
                    deviceUid = arrDeviceUid
                  else
                    deviceUid = null
                  end if
                else
                  deviceUid = null
                end if
                disabled = objResult.SimpleValue("disabled", False)
        
                dim Res, id, oldContactkey, oldDisabled, idDev, oldLogin
                dim  newContactkey, newDisabled, comment, a
                a = web_recalcParametres(disabled, userRuid, deviceUid, isParams, userID, AppSystem)
                newContactkey = a(0)
                newDisabled = a(1)
                comment = a(2)
                ibsql.Close
                ibsql.Transaction = Transaction
                ibsql.SQL.Text = _
                  "select " & _
                  "  u.ID as masterkey, " & vbCrLf & _
                  "  coalesce(u.USR$NOTACTIVE, 0) as USR$NOTACTIVE, " & _
                  "  coalesce(u.USR$CONTACTKEY, 0) as USR$CONTACTKEY, "   & _
                  "  u.USR$MOBILELOGIN " & vbCrLf & _
                  "from  USR$GDMN_USERS u " & _
                  "where u.USR$SYSTEMKEY = :systemkey " & _
                  "  and u.USR$MOBILEID = :userId "
                ibsql.ParamByName("systemkey").AsInteger = AppSystem
                ibsql.ParamByName("userId").AsString = userID
                ibsql.ExecQuery
                dim masterkey
                if not ibsql.RecordCount > 0 then
                  call gdcBaseManager.ExecSingleQueryResult("select id from GD_P_GETNEXTID ", _
                    NULL, Res, Transaction)
                  id = Res(0, 0)
                  ibsql.Close
                  ibsql.Transaction = Transaction
                  ibsql.SQL.Text = _
                    "insert into USR$GDMN_USERS(ID, USR$SYSTEMKEY, USR$MOBILEID, USR$MOBILELOGIN, " & _
                      " USR$CONTACTKEY,  USR$NOTACTIVE, USR$COMMENT) "  &_
                      "values (:ID, :SYSTEMKEY, :userID, :userName, :userkey, :disabled, :comment ) "
                  ibsql.ParamByName("id").AsInteger = id
                  ibsql.ParamByName("SYSTEMKEY").AsInteger = AppSystem
                  ibsql.ParamByName("userID").AsString = userID
                  ibsql.ParamByName("userName").AsString = userName
                  if  newContactkey = 0 then
                    ibsql.ParamByName("userkey").AsVariant = null
                  else
                    ibsql.ParamByName("userkey").AsVariant = newContactkey
                  end if
                  ibsql.ParamByName("disabled").AsInteger = newDisabled
                  ibsql.ParamByName("comment").AsString = comment
                  ibsql.ExecQuery
                  masterkey = id
                  if countDevices > 0 then
                    for j = 0 to UBound(arrDeviceUid)
                      call gdcBaseManager.ExecSingleQueryResult("select id from GD_P_GETNEXTID ", _
                        NULL, Res, Transaction)
                      idDev = Res(0, 0)
                      ibsqlDevice.Close
                      ibsqlDevice.SQL.Text = _
                        "insert into USR$GDMN_DEVICES(ID, USR$GDMN_USER, USR$MOBILEID, USR$NOTISACTIVE) "  &_
                          "values (:ID, :GDMN_USER, :MOBILEID, :NOTISACTIVE ) "
                      ibsqlDevice.ParamByName("id").AsInteger = idDev
                      ibsqlDevice.ParamByName("GDMN_USER").AsInteger = masterkey
                      ibsqlDevice.ParamByName("MOBILEID").AsString = arrDeviceUid(j)
                      ibsqlDevice.ParamByName("NOTISACTIVE").AsInteger = 0
                      ibsqlDevice.ExecQuery
                    next
                  end if
                else
                  masterkey = ibsql.FieldByName("masterkey").AsVariant
                  oldDisabled = ibsql.FieldByName("USR$NOTACTIVE").AsVariant
                  oldContactkey = ibsql.FieldByName("USR$CONTACTKEY").AsInteger
                  oldLogin = ibsql.FieldByName("USR$MOBILELOGIN").AsString
                  if oldContactkey <> newContactkey or _
                    oldDisabled <> newDisabled or _
                    oldLogin <> userName then
                    ibsql.Close
                    ibsql.Transaction = Transaction
                    if newContactkey > 0 then
                      ibsql.SQL.Text = _
                         "update USR$GDMN_USERS u set  " & _
                         "  u.USR$CONTACTKEY = :userkey, u.USR$COMMENT  = :comment, u.USR$NOTACTIVE = :disabled, " & _
                         "  u.USR$MOBILELOGIN = :userlogin " & vbCrLf & _
                         "where u.USR$MOBILEID = :userID "
                      ibsql.ParamByName("userID").AsString = userID
                      ibsql.ParamByName("userkey").AsVariant = newContactkey
                      ibsql.ParamByName("disabled").AsInteger = newDisabled
                      ibsql.ParamByName("comment").AsString = comment
                      ibsql.ParamByName("userlogin").AsString = userName
                      ibsql.ExecQuery
                    else
                      ibsql.SQL.Text = _
                         "update USR$GDMN_USERS u set " & _
                         " u.USR$CONTACTKEY = null, u.USR$COMMENT  = :comment, u.USR$NOTACTIVE = :disabled, " & _
                         "  u.USR$MOBILELOGIN = :userlogin " & vbCrLf & _
                         "where u.USR$MOBILEID = :userID "
                      ibsql.ParamByName("userID").AsString = userID
                      ibsql.ParamByName("disabled").AsInteger = newDisabled
                      ibsql.ParamByName("comment").AsString = comment
                      ibsql.ParamByName("userlogin").AsString = userName
                      ibsql.ExecQuery
                    end if
                  end if
                  if countDevices > 0  then
                    for j = 0 to UBound(arrDeviceUid)
                      ibsqlDevice.Close
                      ibsqlDevice.SQL.Text = _
                        "select b.ID, coalesce(b.USR$NOTISACTIVE, 0) as USR$NOTISACTIVE " & vbCrLf & _
                        "from USR$GDMN_DEVICES b " & vbCrLf & _
                        "where b.USR$GDMN_USER = :masterkey " & vbCrLf & _
                        "  and b.USR$MOBILEID = :mobileId "
                      ibsqlDevice.ParamByName("masterkey").AsInteger = masterkey
                      ibsqlDevice.ParamByName("MOBILEID").AsString = arrDeviceUid(j)
                      ibsqlDevice.ExecQuery
                      if ibsqlDevice.RecordCount = 0 then
                        call gdcBaseManager.ExecSingleQueryResult("select id from GD_P_GETNEXTID ", _
                          NULL, Res, Transaction)
                        idDev = Res(0, 0)
                        ibsqlDevice.Close
                        ibsqlDevice.SQL.Text = _
                          "insert into USR$GDMN_DEVICES(ID, USR$GDMN_USER, USR$MOBILEID, USR$NOTISACTIVE) "  &_
                            "values (:ID, :GDMN_USER, :MOBILEID, :NOTISACTIVE ) "
                        ibsqlDevice.ParamByName("id").AsInteger = idDev
                        ibsqlDevice.ParamByName("GDMN_USER").AsInteger = masterkey
                        ibsqlDevice.ParamByName("MOBILEID").AsString = arrDeviceUid(j)
                        ibsqlDevice.ParamByName("NOTISACTIVE").AsInteger = 0
                        ibsqlDevice.ExecQuery
                      end if
                    next
                    'Убираем лишние, которые не используются
                    ibsqlDevice.Close
                    ibsqlDevice.SQL.Text = _
                      "select b.USR$MOBILEID " & vbCrLf & _
                      "from USR$GDMN_DEVICES b " & vbCrLf & _
                      "where b.USR$GDMN_USER = :masterkey "
                    ibsqlDevice.ParamByName("masterkey").AsInteger = masterkey
                    ibsqlDevice.ExecQuery
                    while not ibsqlDevice.EOF
                      if UBound(Filter(arrDeviceUid, ibsqlDevice.FieldByName("USR$MOBILEID").AsString, True)) < 0 then
                          call gdcBaseManager.ExecSingleQueryResult("delete from USR$GDMN_DEVICES " & _
                            "where USR$MOBILEID = :mobileId and USR$GDMN_USER = :masterkey ", _
                          Array(ibsqlDevice.FieldByName("USR$MOBILEID").AsString, masterkey) , _
                            Res, Transaction)
                      end if
                      ibsqlDevice.Next
                    wend
                  end if
                end if
              next
            end if
            if Transaction.InTransaction then
              Transaction.Commit
            end if
            if Err.Number <> 0 then
              AError = web_service.RequestError
              web_service.SetError(AError)
              exit function
            end if
          end if
          '_______________
          ibsql.Close
          ibsql.Transaction = gdcBaseManager.ReadTransaction
          ibsql.SQL.Text = _
            "SELECT " & _
            "  v.USR$AUTOGETREFFERENSES " & _
            "FROM " & _
            "  USR$GDMN_SYSTEMS b " & _
            "  LEFT JOIN USR$GDMN_VERSIONS v  ON v.ID = b.USR$GDMN_VERSION " & _
            "WHERE b.ID = :systemkey "
          ibsql.ParamByName("systemkey").AsInteger = AppSystem
          ibsql.ExecQuery
          if ibsql.RecordCount > 0 then
            functionkey = ibsql.FieldByName("USR$AUTOGETREFFERENSES").AsInteger
          end if
          ' Версия данных
          dim fun, version
          ibsql.Close
          ibsql.SQL.Text = _
            "SELECT " & _
            "  first 1 " & _
            "  v.USR$VERSION, " & _
            "  v.USR$FUNCTIONKEY " & _
            "FROM USR$GDMN_DATA_VERSION v " & _
            "ORDER BY 2 "
          ibsql.ExecQuery
          if ibsql.RecordCount > 0  then
            fun = ibsql.FieldByName("USR$FUNCTIONKEY").AsInteger
            version = ibsql.FieldByName("USR$VERSION").AsInteger
          else
            fun = 0
            version = 1
          end if
          order = 1
          if functionkey > 0  then
            FuncParamArray = Array(True, AppSystem, fun, version, order, web_service, gdmnId, gdmn, isParams)
            while (not flag) and (dateDiff("s", period, time) <= 600)
              flag = System.ExecuteScriptFunction(functionkey, FuncParamArray)
            wend
          else
            call web_autoGetReferens(True, AppSystem, False, fun, version)
          end if
          'Выход пользователя
          call web_service.Logout()
        End Function
        sub web_callAutoReference_RollBack(Transaction)
          if Transaction.InTransaction then
            Transaction.RollBack
          end if
        end sub
        
    Set: 
      - 
        Table: "RP_ADDITIONALFUNCTION"
        Items: 
          - 
            ADDFUNCTIONKEY: "1176277028_1457844439 web_autoGetReferens"
          - 
            ADDFUNCTIONKEY: "147123326_1730903579 web_recalcParametres"
  - 
    Properties: 
      Class: "TgdcFunction"
      RUID: 1369035184_1691301355
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
    Fields: 
      NAME: "web_handGetReferens2_0_0"
      COMMENT: ~
      EVENT: ~
      FUNCTIONTYPE: ~
      GROUPNAME: ~
      INHERITEDRULE: 0
      LANGUAGE: "VBScript"
      LOCALNAME: ~
      MODIFYDATE: ~
      MODULE: "UNKNOWN"
      MODULECODE: "1010001_17 APPLICATION"
      OBJECTNAME: "APPLICATION"
      OWNERNAME: ~
      PUBLICFUNCTION: 1
      SHORTCUT: ~
      USEDEBUGINFO: 0
      EDITIONDATE: 2023-02-22T19:18:02+03:00
      DISPLAYSCRIPT: | 
        WEB_HANDGETREFERENS2_0_0
        WEB_HANDGETREFERENS2_0_0_ROLLBACK
        
      ENTEREDPARAMS: !!binary > 
        U0xQUlBSU1QMAAAASVNTSUxFTlRNT0RFDAAAAElTU0lMRU5UTU9ERQAAAAAAAAAAAAAAAAsAAAAA
        AAAAAAAAAABGTlNUUFJTVAkAAABTWVNURU1LRVkJAAAAU1lTVEVNS0VZAAAAAAAAAAAAAAAACwAA
        AAAAAAAAAAAAAEZOU1RQUlNUBgAAAElTTU9DSwYAAABJU01PQ0sAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAARk5TVFBSU1QDAAAARlVOAwAAAEZVTgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABGTlNU
        UFJTVAcAAABWRVJTSU9OBwAAAFZFUlNJT04AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAARk5TVFBS
        U1QFAAAAT1JERVIFAAAAT1JERVIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAARk5TVEZMUFI=
      SCRIPT: | 
        '#include  web_recalcParametres
        Option Explicit
        Function web_handGetReferens2_0_0(isSilentMode, systemkey, isMock, fun, version, order)
          ' Если режим MOCK, просто формируем файл
          web_handGetReferens2_0_0 = false
          dim Creator, Company, AppSystemId, ibsql, web_service, gdmnPassw, AppSystem, Transaction, _
            gdmn, gdmnId, consumer, consumerkey, producer, producerkey, companykey, AError, deviceId, _
            isParams, ibsqlDevice
          set Creator = new TCreator
          set web_service = (New TVB_Web_Service)(systemkey)
          dim DataBasePath : DataBasePath = IBLogin.DatabaseName
        
          set ibsql = Creator.GetObject(nil, "TIBSQL", "")
          ibsql.Transaction = gdcBaseManager.ReadTransaction
          ibsql.SQL.Text = _
            "select " & _
            "  u.USR$ERPUSERID, " & _
            "  u.USR$ERPUSERPASSWORD, " & _
            "  u.USR$ERPUSERNAME, " & _
            "  coalesce(u.USR$ISPARAMS, 0) as USR$ISPARAMS " & _
            "from USR$GDMN_SYSTEMS u " & _
            "where u.id = :systemkey " & _
            "  and not u.USR$ERPUSERDEVICEID is null "
          ibsql.ParamByName("systemkey").AsInteger = systemkey
          ibsql.ExecQuery
          if ibsql.RecordCount > 0 then
            gdmnId = ibsql.FieldByName("USR$ERPUSERID").AsString
            gdmn = ibsql.FieldByName("USR$ERPUSERNAME").AsString
            gdmnPassw = ibsql.FieldByName("USR$ERPUSERPASSWORD").AsString
            isParams = ibsql.FieldByName("USR$ISPARAMS").AsInteger
          else
            if isMock then
              gdmnId = "gdmn"
              gdmn = "gdmn"
              isParams = 0
            else
              AError =  " Пользователь ERP данной подсистемы " & _
              " отсутствует в справочнике 'Подсистемы мобильного приложения'" & vbCr & _
              " либо у него не заполнен ID устройства." & vbCr & vbCr & _
              " Выполните макрос 'Импорт подсистем с сервера' и проверьте пароль"
              web_service.SetError(AError)
              exit function
            end if
          end if
        
          dim gdcGdmnUsers
          if isMock then
            set gdcGdmnUsers = Creator.GetObject(nil, "TgdcAttrUserDefined", "")
            gdcGdmnUsers.Transaction = gdcBaseManager.ReadTransaction
            gdcGdmnUsers.ReadTransaction = gdcBaseManager.ReadTransaction
            gdcGdmnUsers.SubType = "USR$GDMN_USERS"
            gdcGdmnUsers.SubSet = "All"
            dim selectStr, i, patchDataMock
            selectStr  = " z.USR$SYSTEMKEY =  " & systemkey
            if gdcGdmnUsers.ChooseOrderItemsSelf(False, "", "", selectStr) then
              gdcGdmnUsers.Close
              gdcGdmnUsers.SubSet = "OnlySelected"
              gdcGdmnUsers.Open
              dim DataStreamArrMock(), CountStreamsMock
              CountStreamsMock = -1
              while not gdcGdmnUsers.EOF
                contactkey = gdcGdmnUsers.FieldByName("USR$CONTACTKEY").AsInteger
                consumerkey = trim(gdcGdmnUsers.FieldByName("USR$MOBILEID").AsString)
                consumer =  trim(gdcGdmnUsers.FieldByName("USR$MOBILELOGIN").AsString)
                producer = gdmn
                producerkey = gdmnId
                Company = web_service.Company
                Companykey = web_service.CompanyKey
                AppSystemId = "AppSystemId"
                AppSystem = "AppSystem"
                deviceId = "deviceId"
                hasError = false
                AError = ""
                if fun = 0 then
                  hasError = true
                  AError = "Не определена функция отправки справочников в . " & vbCr & _
                    " справочнике Версии API для мобильного " & consumerkey
                    web_service.SetError(AError)
                else
                  FuncParamArray = Array("", contactkey,  consumer, consumerkey, _
                    producer, producerkey, Company,  Companykey, AppSystem, _
                    AppSystemId, systemkey, hasError, AError, version, order, deviceId)
                  exportData = System.ExecuteScriptFunction(fun, FuncParamArray)
                  if  CountStreamsMock >= 0 then
                    CountStreamsMock =  Ubound(DataStreamArrMock) + 1
                  else
                    CountStreamsMock = 0
                  end if
                  redim Preserve DataStreamArrMock(CountStreamsMock)
                  DataStreamArrMock(CountStreamsMock) = exportData
                end if
                gdcGdmnUsers.Next
              wend
              gdcGdmnUsers.Close
              gdcGdmnUsers.SubSet = "All"
              gdcGdmnUsers.Open
              patchDataMock = "{""processedFiles"": [ "
              for i = LBound( DataStreamArrMock) to Ubound( DataStreamArrMock)
                patchDataMock = patchDataMock & DataStreamArrMock(i)
                if i <>  Ubound( DataStreamArrMock) then
                  patchDataMock = patchDataMock & ", "
                end if
              next
              patchDataMock = patchDataMock & " ]}"
              Dim fs, f, LocalPath, JSONFileName
              LocalPath = web_service.LogPath
              JSONFileName = "messagesMock.json"
              Set fs = CreateObject("Scripting.FileSystemObject")
              Set f = fs.CreateTextFile(LocalPath & JSONFileName, True)
              f.Write patchDataMock
              f.Close
              call Application.MessageBox("Экспорт выполнен!" , "Внимание!", vbInformation + vbOkOnly + vbApplicationModal)
            else
              call Application.MessageBox("Экспорт не выполнен! Должен быть хотя бы один пользователь мобильного приложения!" , "Внимание!", vbInformation + vbOkOnly + vbApplicationModal)
            end if
          else
            if gdmnId = "" then
              AError = "Экспорт не выполнен! Добавьте данные пользователя " & _
                  web_service.UserLogin & " в справочник Подсистемы мобильного приложения!"
              if not isSilentMode then
                call Application.MessageBox( AError, "Внимание!", vbInformation + vbOkOnly + vbApplicationModal)
              else
                web_service.SetError(AError)
              end if
              exit function
            end if
            'Вход пользователя
            call web_service.Login(gdmn, gdmnPassw)
            if web_service.RequestStatus <> 200 then
               AError = web_service.RequestError
               web_service.SetError(AError)
               exit function
            else
              'Стартуем транзакцию
              set Transaction = Creator.GetObject(Null, "TIBTransaction", "Transaction")
              Transaction.Params.Add("nowait")
              Transaction.DefaultDatabase = gdcBaseManager.Database
              Transaction.StartTransaction
              except web_handGetReferens2_0_0_RollBack(Transaction)
              ' Достаем пользователей из API по erpUserId
              ' и если нет такого в  USR$GDMN_USERS добавляем
              ' и делаем неактивным , если в системе стоит галочка @с параметрами@
              ' по нему не отправляем справочники
              ' если нет галочки, то отправляем справочники и по новому пользователю
              set ibsqlDevice = Creator.GetObject(nil, "TIBSQL", "")
              ibsqlDevice.Transaction = Transaction
              on error resume next
              set gdcGdmnUsers = Creator.GetObject(nil, "TgdcAttrUserDefined", "")
              gdcGdmnUsers.Transaction = Transaction
              gdcGdmnUsers.ReadTransaction = Transaction
              gdcGdmnUsers.SubType = "USR$GDMN_USERS"
              gdcGdmnUsers.SubSet = "All"
              'Получаем всех пользователей компании и подсистемы
              call web_service.GetUsersWithDevice("erpUserId=" & gdmnId)
              if web_service.RequestStatus = 200 and Assigned(web_service.RequestData) then
                dim usersObj, countResults, objResult, m, userID, userName, deviceUid, _
                  userAlias, userRuid, disabled, countDevices, arrDeviceUid(), j
                set usersObj = web_service.RequestData
                countResults = usersObj.Value("data").ObjectItemsCount
                objResult = usersObj.SimpleValue("result", "")
                for m = 0 to countResults - 1
                  set ObjResult = usersObj.Value("data").ObjectItem(m)
                  userID = trim(objResult.SimpleValue("id", ""))
                  userName = trim(objResult.SimpleValue("name", ""))
                  userAlias = trim(objResult.SimpleValue("alias", ""))
                  userRuid = trim(objResult.SimpleValue("externalId", ""))
                  countDevices = 0
                  if  Assigned(objResult.Value("deviceUids")) then
                    countDevices = objResult.Value("deviceUids").ObjectItemsCount
                    if countDevices > 0 then
                      redim Preserve arrDeviceUid(countDevices - 1)
                      for j = 0 to countDevices - 1
                        arrDeviceUid(j) = objResult.Value("deviceUids").ObjectItem(j).value
                      next
                      deviceUid = arrDeviceUid
                    else
                      deviceUid = null
                    end if
                  else
                    deviceUid = null
                  end if
                  disabled = objResult.SimpleValue("disabled", False)
                  gdcGdmnUsers.Open
                  comment = ""
                  dim  oldContactkey, oldDisabled, idDev, oldLogin
                  dim  newContactkey, newDisabled, comment, a, res
                  a = web_recalcParametres(disabled, userRuid, deviceUid, isParams, userID, systemkey)
                  newContactkey = a(0)
                  newDisabled = a(1)
                  comment = a(2)
        
                  if not gdcGdmnUsers.Locate("USR$MOBILEID", Array(userID), false)  then
                    gdcGdmnUsers.Append
                    gdcGdmnUsers.FieldByName("USR$SYSTEMKEY").AsInteger = systemkey
                    gdcGdmnUsers.FieldByName("USR$MOBILEID").AsString = userID
                    gdcGdmnUsers.FieldByName("USR$MOBILELOGIN").AsString = userName
                    if  newContactkey = 0 then
                      gdcGdmnUsers.FieldByName("USR$CONTACTKEY").AsVariant = null
                    else
                      gdcGdmnUsers.FieldByName("USR$CONTACTKEY").AsInteger = newContactkey
                    end if
                    gdcGdmnUsers.FieldByName("USR$NOTACTIVE").AsInteger = newDisabled
                    gdcGdmnUsers.FieldByName("USR$COMMENT").AsString = comment
                    gdcGdmnUsers.Post
                    if countDevices > 0 then
                      for j = 0 to UBound(arrDeviceUid)
                        call gdcBaseManager.ExecSingleQueryResult("select id from GD_P_GETNEXTID ", _
                          NULL, Res, Transaction)
                        idDev = Res(0, 0)
                        ibsqlDevice.Close
                        ibsqlDevice.SQL.Text = _
                          "insert into USR$GDMN_DEVICES(ID, USR$GDMN_USER, USR$MOBILEID, USR$NOTISACTIVE) "  &_
                            "values (:ID, :GDMN_USER, :MOBILEID, :NOTISACTIVE ) "
                        ibsqlDevice.ParamByName("id").AsInteger = idDev
                        ibsqlDevice.ParamByName("GDMN_USER").AsInteger = gdcGdmnUsers.FieldByName("id").AsInteger
                        ibsqlDevice.ParamByName("MOBILEID").AsString = arrDeviceUid(j)
                        ibsqlDevice.ParamByName("NOTISACTIVE").AsInteger = 0
                        ibsqlDevice.ExecQuery
                      next
                    end if
                  else
                    oldDisabled = gdcGdmnUsers.FieldByName("USR$NOTACTIVE").AsVariant
                    oldContactkey = gdcGdmnUsers.FieldByName("USR$CONTACTKEY").AsInteger
                    oldLogin = gdcGdmnUsers.FieldByName("USR$MOBILELOGIN").AsString
                    if oldContactkey <> newContactkey or _
                      oldDisabled <> newDisabled or _
                      oldLogin <> userName then
                      gdcGdmnUsers.Edit
                      gdcGdmnUsers.FieldByName("USR$SYSTEMKEY").AsInteger = systemkey
                      gdcGdmnUsers.FieldByName("USR$MOBILELOGIN").AsString = userName
                      if  newContactkey = 0 then
                        gdcGdmnUsers.FieldByName("USR$CONTACTKEY").AsVariant = null
                      else
                        gdcGdmnUsers.FieldByName("USR$CONTACTKEY").AsInteger = newContactkey
                      end if
                      gdcGdmnUsers.FieldByName("USR$NOTACTIVE").AsInteger = newDisabled
                      gdcGdmnUsers.FieldByName("USR$COMMENT").AsString = comment
                      gdcGdmnUsers.Post
                    end if
                    if countDevices > 0  then
                      for j = 0 to UBound(arrDeviceUid)
                        ibsqlDevice.Close
                        ibsqlDevice.SQL.Text = _
                          "select b.ID, coalesce(b.USR$NOTISACTIVE, 0) as USR$NOTISACTIVE " & vbCrLf & _
                          "from USR$GDMN_DEVICES b " & vbCrLf & _
                          "where b.USR$GDMN_USER = :masterkey " & vbCrLf & _
                          "  and b.USR$MOBILEID = :mobileId "
                        ibsqlDevice.ParamByName("masterkey").AsInteger = gdcGdmnUsers.FieldByName("id").AsInteger
                        ibsqlDevice.ParamByName("MOBILEID").AsString = arrDeviceUid(j)
                        ibsqlDevice.ExecQuery
                        if ibsqlDevice.RecordCount = 0 then
                          call gdcBaseManager.ExecSingleQueryResult("select id from GD_P_GETNEXTID ", _
                            NULL, Res, Transaction)
                          idDev = Res(0, 0)
                          ibsqlDevice.Close
                          ibsqlDevice.SQL.Text = _
                            "insert into USR$GDMN_DEVICES(ID, USR$GDMN_USER, USR$MOBILEID, USR$NOTISACTIVE) "  &_
                              "values (:ID, :GDMN_USER, :MOBILEID, :NOTISACTIVE ) "
                          ibsqlDevice.ParamByName("id").AsInteger = idDev
                          ibsqlDevice.ParamByName("GDMN_USER").AsInteger = gdcGdmnUsers.FieldByName("id").AsInteger
                          ibsqlDevice.ParamByName("MOBILEID").AsString = arrDeviceUid(j)
                          ibsqlDevice.ParamByName("NOTISACTIVE").AsInteger = 0
                          ibsqlDevice.ExecQuery
                        end if
                      next
                      'Убираем лишние, которые не используются
                      ibsqlDevice.Close
                      ibsqlDevice.SQL.Text = _
                        "select b.USR$MOBILEID " & vbCrLf & _
                        "from USR$GDMN_DEVICES b " & vbCrLf & _
                        "where b.USR$GDMN_USER = :masterkey "
                      ibsqlDevice.ParamByName("masterkey").AsInteger = gdcGdmnUsers.FieldByName("id").AsInteger
                      ibsqlDevice.ExecQuery
                      while not ibsqlDevice.EOF
                        if UBound(Filter(arrDeviceUid, ibsqlDevice.FieldByName("USR$MOBILEID").AsString, True)) < 0 then
                            call gdcBaseManager.ExecSingleQueryResult("delete from USR$GDMN_DEVICES " & _
                              "where USR$MOBILEID = :mobileId and USR$GDMN_USER = :masterkey ", _
                            Array(ibsqlDevice.FieldByName("USR$MOBILEID").AsString, gdcGdmnUsers.FieldByName("id").AsInteger) , _
                              Res, Transaction)
                        end if
                        ibsqlDevice.Next
                      wend
                    end if
                  end if
                next
              end if
              if Transaction.InTransaction then
                Transaction.Commit
              end if
              if Err.Number <> 0 then
                exit function
              end if
        
              dim P : set P = Creator.GetObject(nil, "TgdccProgress", "")
              dim qUsers, obj
              selectStr  = " z.USR$SYSTEMKEY =  " & systemkey  & _
                "  and coalesce(z.USR$NOTACTIVE, 0) = 0 and COALESCE(z.USR$MOBILEID, '') <> '' " & _
                "  and not z.USR$CONTACTKEY is null "
              if gdcGdmnUsers.ChooseOrderItemsSelf(False, "", "", selectStr) then
                gdcGdmnUsers.Close
                gdcGdmnUsers.SubSet = "OnlySelected"
                gdcGdmnUsers.Open
                qUsers = gdcGdmnUsers.SelectedID.Count
                if not isSilentMode then
                  P.StartWork "GDMN", "Идет экспорт справочников на сервер. Пожалуйста, подождите...", qUsers, True, True
                end if
                '____________
        
                if qUsers > 0 then
                  ' По каждому пользователю создаем запись Json
                  dim contactkey
                  dim DataStreamArr(), CountStreams
                  CountStreams = -1
                  while not gdcGdmnUsers.EOF
                    redim Preserve DataStreamArr(-1)
                    dim postData
                    postData = "{" & _
                      """companyId"": """ & web_service.CompanyKey & ""","  & _
                      """appSystemId"": """ & web_service.AppSystemId & """}"
                    call web_service.AddProcess(postData)
                    if web_service.RequestStatus = 201 and Assigned(web_service.RequestData) then
                      dim  objData, processId, processStatus, files
                      dim  msgType, msgName, exportData, payload
                      set obj = web_service.RequestData
                      set objData = obj.Value("data")
                      objResult = obj.SimpleValue("result", "")
                      if objResult then
                        processId = objData.SimpleValue("processId", "")
                        processStatus = objData.SimpleValue("status", "")
                        set files = objData.Value("files")
                        if processStatus = "BUSY" then
                           AError = "Запросы обрабатываются  процессом c UID = " & processId & vbCr & _
                            ". Обработка запросов запрещена !!! "
                           web_service.SetError(AError)
                           if not isSilentMode then
                             call Application.MessageBox( AError, "Внимание!", vbInformation + vbOkOnly + vbApplicationModal)
                           end if
                           exit function
                        end if
                        'Если процесс стартовал, начинаем готовить данные
                        if not isSilentMode then
                          P.StartStep gdcGdmnUsers.FieldByName("Z_USR$CONTACTKEY_NAME").AsString, 1
                        end if
                        contactkey = gdcGdmnUsers.FieldByName("USR$CONTACTKEY").AsInteger
                        consumerkey = trim(gdcGdmnUsers.FieldByName("USR$MOBILEID").AsString)
                        consumer =  trim(gdcGdmnUsers.FieldByName("USR$MOBILELOGIN").AsString)
                        producer = gdmn
                        producerkey = gdmnId
                        Companykey = web_service.CompanyKey
                        'deviceId = trim(gdcGdmnUsers.FieldByName("USR$DEVICEID").AsString)
                        hasError = false
                        AError = ""
                        dim FuncParamArray, hasError
                        if fun = 0 then
                          hasError = true
                              AError = "Не определена функция отправки справочников в . " & vbCr & _
                                " справочнике Версии API для мобильного " & consumerkey
                                web_service.SetError(AError)
                        else
                          'Достаем все device по этому пользователю  и делаем отдельные файлы по каждому девайсу
                          ibsqlDevice.Close
                          ibsqlDevice.Transaction = gdcBaseManager.ReadTransaction
                          ibsqlDevice.SQL.Text = _
                            "select b.USR$MOBILEID " & vbCrLf & _
                            "from USR$GDMN_DEVICES b " & vbCrLf & _
                            "where b.USR$GDMN_USER = :masterkey " & vbCrLf & _
                            "  and coalesce(b.USR$NOTISACTIVE, 0) = 0 "
                          ibsqlDevice.ParamByName("masterkey").AsInteger = gdcGdmnUsers.FieldByName("id").AsInteger
                          ibsqlDevice.ExecQuery
                          while not ibsqlDevice.EOF
                            deviceId = trim(ibsqlDevice.FieldByName("USR$MOBILEID").AsString)
                            FuncParamArray = Array("", contactkey, consumer, consumerkey,  _
                               producer, producerkey, web_service.Company,  Companykey, web_service.AppSystem, _
                               web_service.AppSystemId, systemkey, hasError, AError, version, order, deviceId, "", "")
                            exportData = System.ExecuteScriptFunction(fun, FuncParamArray)
                            if  CountStreams >= 0 then
                              CountStreams =  Ubound(DataStreamArr) + 1
                            else
                              CountStreams = 0
                            end if
                            for i = LBound(exportData) to Ubound(exportData)
                              redim Preserve DataStreamArr(CountStreams)
                              DataStreamArr(CountStreams) = exportData(i)
                              CountStreams = CountStreams + 1
                            next
                            ibsqlDevice.Next
                          wend
                          dim patchData
                          patchData = "{""processedFiles"": [ "
                          dim k
                          for k = LBound( DataStreamArr) to Ubound( DataStreamArr)
                            patchData = patchData & DataStreamArr(k)
                            if k <>  Ubound( DataStreamArr) then
                              patchData = patchData & ", "
                            end if
                          next
                          patchData = patchData & " ]}"
                          dim errorJsonString
                          'Отправляем на сервер API3
                          call web_service.PrepareProcess(processId, patchData)
                          if web_service.RequestStatus = 200 and Assigned(web_service.RequestData) then
                            set obj = web_service.RequestData
                            set objData = obj.Value("data")
                            objResult = obj.SimpleValue("result", "")
                            'При успешной обработке сообщаем серверу
                            if  objResult  then
                              if Err.Description = "" then
                                'При успешном коммите отправляем API4
                                call web_service.CompleteProcess(processId)
                              else
                                'При неуспешном - отправляем API5
                                errorJsonString = "{" & _
                                 """errorMessage"": "  &  web_service.JSonString(Err.Description) & "} "
                                call web_service.CancelProcess(processId, errorJsonString)
                              end if
                            end if
                          else
                            AError = web_service.RequestError
                            web_service.SetError(AError)
                          end if
                        end if
                      '____________
                      end if
                    else
                      AError = web_service.RequestError
                      web_service.SetError(AError)
                    end if
                    gdcGdmnUsers.Next
                  wend
                  gdcGdmnUsers.Close
                  gdcGdmnUsers.SubSet = "All"
                  gdcGdmnUsers.Open
        
                end if
                if not isSilentMode then
                  if web_service.HasError then
                    P.EndWork "Экспорт выполнен с ошибками! Смотрите файл с ошибками!", False
                  else
                    P.EndWork "Экспорт успешно выполнен!", False
                  end if
                end if
                'Выход пользователя
                call web_service.Logout()
                if not web_service.HasError then
                  web_handGetReferens2_0_0 = true
                end if
              end if
            end if
          end if
        End Function
        sub web_handGetReferens2_0_0_RollBack(Transaction)
          if Transaction.InTransaction then
            Transaction.RollBack
          end if
        end sub
        
    Set: 
      - 
        Table: "RP_ADDITIONALFUNCTION"
        Items: 
          - 
            ADDFUNCTIONKEY: "147123326_1730903579 web_recalcParametres"
  - 
    Properties: 
      Class: "TgdcFunction"
      RUID: 1176277900_1457844439
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
    Fields: 
      NAME: "web_callHandReference"
      COMMENT: ~
      EVENT: ~
      FUNCTIONTYPE: ~
      GROUPNAME: ~
      INHERITEDRULE: 0
      LANGUAGE: "VBScript"
      LOCALNAME: ~
      MODIFYDATE: 2021-06-18T18:11:06+03:00
      MODULE: "UNKNOWN"
      MODULECODE: "1010001_17 APPLICATION"
      OBJECTNAME: "APPLICATION"
      OWNERNAME: ~
      PUBLICFUNCTION: 1
      SHORTCUT: ~
      USEDEBUGINFO: ~
      EDITIONDATE: 2023-04-03T19:26:14+03:00
      DISPLAYSCRIPT: | 
        WEB_CALLHANDREFERENCE
        
      ENTEREDPARAMS: !!binary > 
        U0xQUlBSU1QJAAAAU1lTVEVNS0VZCgAAAM/u5PHo8fLl7OAQAAAAVVNSJEdETU5fU1lTVEVNUwgA
        AAB1c3IkbmFtZQIAAABpZAcAAAAAAAAAAAIAAABeUkZOU1RGTFBS
      SCRIPT: | 
        '#include web_autoGetReferens
        '#include web_handGetReferens2_0_0
        Option Explicit
        Function web_callHandReference(systemkey)
          dim Creator, ibsql, functionkey, FuncParamArray, order
          set Creator = new TCreator
          set ibsql = Creator.GetObject(nil, "TIBSQL", "")
          ibsql.Transaction = gdcBaseManager.ReadTransaction
          ibsql.SQL.Text = _
            "SELECT " & _
            "  v.USR$HANDGETREFFERENSES " & _
            "FROM " & _
            "  USR$GDMN_SYSTEMS b " & _
            "  LEFT JOIN USR$GDMN_VERSIONS v  ON v.ID = b.USR$GDMN_VERSION " & _
            "WHERE b.ID = :systemkey "
          ibsql.ParamByName("systemkey").AsInteger = systemkey(0)
          ibsql.ExecQuery
          if ibsql.RecordCount > 0 then
            functionkey = ibsql.FieldByName("USR$HANDGETREFFERENSES").AsInteger
          end if
          ' Версия данных
          dim fun, version
          ibsql.Close
          ibsql.SQL.Text = _
            "SELECT " & _
            "  first 1 " & _
            "  v.USR$VERSION, " & _
            "  v.USR$FUNCTIONKEY " & _
            "FROM USR$GDMN_DATA_VERSION v " & _
            "ORDER BY 2 "
          ibsql.ExecQuery
          if ibsql.RecordCount > 0  then
            fun = ibsql.FieldByName("USR$FUNCTIONKEY").AsInteger
            version = ibsql.FieldByName("USR$VERSION").AsInteger
          else
            fun = 0
            version = 1
          end if
          dim ibsqlGetID
          set ibsqlGetID = Creator.GetObject(NULL, "TIBSQL", "")
          ibsqlGetID.Transaction = gdcBaseManager.ReadTransaction
          ibsqlGetID.SQL.Text = "SELECT DATEDIFF(MILLISECOND, CAST('01.01.1900  00:00' AS TIMESTAMP), CURRENT_TIMESTAMP)  FROM RDB$DATABASE"
          ibsqlGetID.Close
          ibsqlGetID.ExecQuery
          order = ibsqlGetID.Fields(0).AsVariant
          dim withoutError, str
          if functionkey > 0  then
            FuncParamArray = Array(False, systemkey(0), False, fun, version, order)
            withoutError = System.ExecuteScriptFunction(functionkey, FuncParamArray)
            'call web_handGetReferens2_0_0(False, systemkey(0), False, fun, version, order)
          else
            withoutError = web_autoGetReferens(False, systemkey(0), False, fun, version)
          end if
          if withoutError then
            str = "Отправка справочников завершена успешно!"
          else
            str = "Отправка справочников завершена с ошибками!"
          end if
          call Application.MessageBox(str, "Внимание!", vbInformation + vbOkOnly + vbApplicationModal)
        End Function
        
    Set: 
      - 
        Table: "RP_ADDITIONALFUNCTION"
        Items: 
          - 
            ADDFUNCTIONKEY: "1176277028_1457844439 web_autoGetReferens"
          - 
            ADDFUNCTIONKEY: "1369035184_1691301355 web_handGetReferens2_0_0"
  - 
    Properties: 
      Class: "TgdcFunction"
      RUID: 147023054_1677413867
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
    Fields: 
      NAME: "web_callHandReferenceMock"
      COMMENT: ~
      EVENT: ~
      FUNCTIONTYPE: ~
      GROUPNAME: ~
      INHERITEDRULE: 0
      LANGUAGE: "VBScript"
      LOCALNAME: ~
      MODIFYDATE: 2021-06-15T18:45:05+03:00
      MODULE: "UNKNOWN"
      MODULECODE: "1010001_17 APPLICATION"
      OBJECTNAME: "APPLICATION"
      OWNERNAME: ~
      PUBLICFUNCTION: 1
      SHORTCUT: ~
      USEDEBUGINFO: 0
      EDITIONDATE: 2022-08-25T12:37:36+03:00
      DISPLAYSCRIPT: | 
        WEB_CALLHANDREFERENCEMOCK
        
      ENTEREDPARAMS: !!binary > 
        U0xQUlBSU1QJAAAAU1lTVEVNS0VZCgAAAM/u5PHo8fLl7OAQAAAAVVNSJEdETU5fU1lTVEVNUwgA
        AAB1c3IkbmFtZQIAAABpZAcAAAAAAAAAAAIAAABeUkZOU1RGTFBS
      SCRIPT: | 
        '#include web_autoGetReferens
        '#include web_handGetReferens2_0_0
        Option Explicit
        Function web_callHandReferenceMock(systemkey)
          dim Creator, ibsql, functionkey, FuncParamArray, order
          set Creator = new TCreator
          set ibsql = Creator.GetObject(nil, "TIBSQL", "")
          ibsql.Transaction = gdcBaseManager.ReadTransaction
          ibsql.SQL.Text = _
            "SELECT " & _
            "  v.USR$HANDGETREFFERENSES " & _
            "FROM " & _
            "  USR$GDMN_SYSTEMS b " & _
            "  LEFT JOIN USR$GDMN_VERSIONS v  ON v.ID = b.USR$GDMN_VERSION " & _
            "WHERE b.ID = :systemkey "
          ibsql.ParamByName("systemkey").AsInteger = systemkey(0)
          ibsql.ExecQuery
          if ibsql.RecordCount > 0 then
            functionkey = ibsql.FieldByName("USR$HANDGETREFFERENSES").AsInteger
          end if
           ' Версия данных
          dim fun, version
          ibsql.Close
          ibsql.SQL.Text = _
            "SELECT " & _
            "  first 1 " & _
            "  v.USR$VERSION, " & _
            "  v.USR$FUNCTIONKEY " & _
            "FROM USR$GDMN_DATA_VERSION v " & _
            "ORDER BY 2 "
          ibsql.ExecQuery
          if ibsql.RecordCount > 0  then
            fun = ibsql.FieldByName("USR$FUNCTIONKEY").AsInteger
            version = ibsql.FieldByName("USR$VERSION").AsInteger
          else
            fun = 0
            version = 1
          end if
          order = 1
          if functionkey > 0  then
            FuncParamArray = Array(False, systemkey(0), True, fun, version, order)
            call System.ExecuteScriptFunction(functionkey, FuncParamArray)
            'call web_handGetReferens2_0_0(False, systemkey(0), True, fun, version, order)
          else
            call web_autoGetReferens(False, systemkey(0), True, fun, version)
          end if
        End Function
        
    Set: 
      - 
        Table: "RP_ADDITIONALFUNCTION"
        Items: 
          - 
            ADDFUNCTIONKEY: "1176277028_1457844439 web_autoGetReferens"
          - 
            ADDFUNCTIONKEY: "1369035184_1691301355 web_handGetReferens2_0_0"
  - 
    Properties: 
      Class: "TgdcFunction"
      RUID: 147123983_1730903579
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
    Fields: 
      NAME: "web_getApiSettings2_0_0"
      COMMENT: ~
      EVENT: ~
      FUNCTIONTYPE: ~
      GROUPNAME: ~
      INHERITEDRULE: 0
      LANGUAGE: "VBScript"
      LOCALNAME: ~
      MODIFYDATE: ~
      MODULE: "UNKNOWN"
      MODULECODE: "1010001_17 APPLICATION"
      OBJECTNAME: "APPLICATION"
      OWNERNAME: ~
      PUBLICFUNCTION: 1
      SHORTCUT: ~
      USEDEBUGINFO: 0
      EDITIONDATE: 2022-10-04T17:00:28+03:00
      DISPLAYSCRIPT: | 
        WEB_GETAPISETTINGS2_0_0
        FINALIZATION_API_SETTING
        
      ENTEREDPARAMS: !!binary > 
        U0xQUlBSU1QFAAAATVNHSUQFAAAATVNHSUQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAARk5TVFBS
        U1QKAAAAQ09OVEFDVEtFWQoAAABDT05UQUNUS0VZAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEZO
        U1RQUlNUCAAAAENPTlNVTUVSCAAAAENPTlNVTUVSAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEZO
        U1RQUlNUCwAAAENPTlNVTUVSS0VZCwAAAENPTlNVTUVSS0VZAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAEZOU1RQUlNUCAAAAFBST0RVQ0VSCAAAAFBST0RVQ0VSAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAEZOU1RQUlNUCwAAAFBST0RVQ0VSS0VZCwAAAFBST0RVQ0VSS0VZAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAEZOU1RQUlNUBwAAAENPTVBBTlkHAAAAQ09NUEFOWQAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAABGTlNUUFJTVAoAAABDT01QQU5ZS0VZCgAAAENPTVBBTllLRVkAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAARk5TVFBSU1QJAAAAQVBQU1lTVEVNCQAAAEFQUFNZU1RFTQAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAABGTlNUUFJTVAsAAABBUFBTWVNURU1JRAsAAABBUFBTWVNURU1JRAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAABGTlNUUFJTVAwAAABBUFBTWVNURU1LRVkMAAAAQVBQU1lTVEVN
        S0VZAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEZOU1RQUlNUBwAAAFZFUlNJT04HAAAAVkVSU0lP
        TgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABGTlNUUFJTVAUAAABPUkRFUgUAAABPUkRFUgAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAABGTlNUUFJTVAgAAABERVZJQ0VJRAgAAABERVZJQ0VJRAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAABGTlNUUFJTVAsAAABTVEFUVVNFUlJPUgsAAABTVEFUVVNFUlJP
        UgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABGTlNURkxQUg==
      SCRIPT: | 
        '#include web_formatDate
        '#include web_cur_replace
        '#include web_JSonString
        Option Explicit
        Function web_getApiSettings2_0_0(msgID, contactkey, consumer, consumerkey, producer, producerkey, Company, Companykey,  AppSystem, AppSystemId, AppSystemkey, version, order, deviceId, statusError)
          web_getApiSettings2_0_0 = Array("", false)
          dim errorMessage
          errorMessage = ""
          on error resume next
          dim Json, Creator, oData
          set Creator = new TCreator
          set Json = Creator.GetObject(nil, "TStringList", "")
          'Подготавливаем json файл, в котором будет содержаться массив справочников
          dim oRoot
          if statusError > "" then
            Json.Text =  _
              "{""status"": ""PROCESSED_INCORRECT""," & _
               """errorMessage"":""" & statusError & """, " & _
              """head"":{" & _
              """appSystem"":{" & _
              """id"":""" & AppSystemId & """, " & _
              """name"":" & web_JSonString(AppSystem) & "}," & _
              """company"":{" & _
              """id"":""" & Companykey & """, " & _
              """name"":" & web_JSonString(Company) & "}," & _
              """producer"":{" & _
              """id"":""" & producerkey & """, " & _
              """name"":""" & producer & """}," & _
              """consumer"":{" & _
              """id"":""" & consumerkey & """, " & _
              """name"":""" & consumer & """}," & _
              """dateTime"":""" & web_formatDate(Date()) & """, "  & _
              """replyTo"":""" & msgID & """, "  & _
              """order"":" & order & ", "  & _
              """deviceId"":""" & deviceId & """"  & _
              "}, " & _
              """body"":{" & _
              """type"":""APP_SYSTEM_SETTINGS""," & _
              """version"":" & version & ", " & _
              """payload"": {} }} "
          else
            Json.Text =  _
              "{""status"": ""READY""," & _
              """head"":{" & _
              """appSystem"":{" & _
              """id"":""" & AppSystemId & """, " & _
              """name"":" & web_JSonString(AppSystem) & "}," & _
              """company"":{" & _
              """id"":""" & Companykey & """, " & _
              """name"":" & web_JSonString(Company) & "}," & _
              """producer"":{" & _
              """id"":""" & producerkey & """, " & _
              """name"":""" & producer & """}," & _
              """consumer"":{" & _
              """id"":""" & consumerkey & """, " & _
              """name"":""" & consumer & """}," & _
              """dateTime"":""" & web_formatDate(Date()) & """, "  & _
              """replyTo"":""" & msgID & """, "  & _
              """order"":" & order & ", "  & _
              """deviceId"":""" & deviceId & """"  & _
              "}, " & _
              """body"":{" & _
              """type"":""APP_SYSTEM_SETTINGS""," & _
              """version"":" & version & ", " & _
              """payload"": {"
        
            'Запрос времени сихронизации по системе
            dim ibsql
            set ibsql = Creator.GetObject(nil, "TIBSQL", "")
            ibsql.Transaction = gdcBaseManager.ReadTransaction
            ibsql.SQL.Text = _
              "SELECT " & vbCrLf & _
              "  coalesce(b.USR$SYNCPERIOD, 600) as USR$SYNCPERIOD " & vbCrLf & _
              "FROM " & vbCrLf & _
              "   USR$GDMN_SYSTEMS b " & vbCrLf & _
              "WHERE " & vbCrLf & _
              "  b.ID = :systemkey "
            ibsql.ParamByName("systemkey").AsInteger = AppSystemkey
            ibsql.ExecQuery
            oData = ""
            if not ibsql.EOF then
              oData = """synchPeriod"": {"
              oData = oData + """data"":" + ibsql.FieldByName("USR$SYNCPERIOD").AsString
              oData = oData & "}"
              if errorMessage = "" then
                Json.Add(oData)
              end if
            end if
            if Json.Count > 0 then Json.Strings(Json.Count - 1) = Json.Strings(Json.Count - 1) & "}}}"
          end if
          web_getApiSettings2_0_0 = finalization_Api_setting(errorMessage, Json.Text)
          Json.Clear
          if Assigned(Json) then
            Creator.DestroyObject(Json)
          end if
        End Function
        function finalization_Api_setting(errorMessage, json)
          dim a(1)
          a(0) = errorMessage
          a(1) = json
          finalization_Api_setting = a
        end function
        
        
    Set: 
      - 
        Table: "RP_ADDITIONALFUNCTION"
        Items: 
          - 
            ADDFUNCTIONKEY: "147040220_1730903579 web_formatDate"
          - 
            ADDFUNCTIONKEY: "147040222_1730903579 web_cur_replace"
          - 
            ADDFUNCTIONKEY: "147040221_1730903579 web_JSonString"
  - 
    Properties: 
      Class: "TgdcFunction"
      RUID: 241111139_1971205439
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
    Fields: 
      NAME: "web_process_error_ref_2_0_0"
      COMMENT: ~
      EVENT: ~
      FUNCTIONTYPE: ~
      GROUPNAME: ~
      INHERITEDRULE: 0
      LANGUAGE: "VBScript"
      LOCALNAME: ~
      MODIFYDATE: ~
      MODULE: "UNKNOWN"
      MODULECODE: "1010001_17 APPLICATION"
      OBJECTNAME: "APPLICATION"
      OWNERNAME: ~
      PUBLICFUNCTION: 1
      SHORTCUT: ~
      USEDEBUGINFO: 0
      EDITIONDATE: 2023-03-31T14:41:03+03:00
      DISPLAYSCRIPT: | 
        WEB_PROCESS_ERROR_REF_2_0_0
        FINALIZATION_PROCESS_ERROR_REF_2_0_0
        
      ENTEREDPARAMS: !!binary > 
        U0xQUlBSU1QFAAAATVNHSUQFAAAATVNHSUQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAARk5TVFBS
        U1QIAAAAQ09OU1VNRVIIAAAAQ09OU1VNRVIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAARk5TVFBS
        U1QLAAAAQ09OU1VNRVJLRVkLAAAAQ09OU1VNRVJLRVkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        Rk5TVFBSU1QIAAAAUFJPRFVDRVIIAAAAUFJPRFVDRVIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        Rk5TVFBSU1QLAAAAUFJPRFVDRVJLRVkLAAAAUFJPRFVDRVJLRVkAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAARk5TVFBSU1QHAAAAQ09NUEFOWQcAAABDT01QQU5ZAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAEZOU1RQUlNUCgAAAENPTVBBTllLRVkKAAAAQ09NUEFOWUtFWQAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAABGTlNUUFJTVAkAAABBUFBTWVNURU0JAAAAQVBQU1lTVEVNAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAEZOU1RQUlNUCwAAAEFQUFNZU1RFTUlECwAAAEFQUFNZU1RFTUlEAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAEZOU1RQUlNUDAAAAEFQUFNZU1RFTUtFWQwAAABBUFBTWVNURU1LRVkA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAARk5TVFBSU1QHAAAAVkVSU0lPTgcAAABWRVJTSU9OAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAEZOU1RQUlNUCgAAAENPTlRBQ1RLRVkKAAAAQ09OVEFDVEtF
        WQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABGTlNUUFJTVAUAAABPUkRFUgUAAABPUkRFUgAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAABGTlNUUFJTVAsAAABUUkFOU0FDVElPTgsAAABUUkFOU0FDVElP
        TgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABGTlNUUFJTVAgAAABERVZJQ0VJRAgAAABERVZJQ0VJ
        RAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABGTlNUUFJTVAsAAABTVEFUVVNFUlJPUgsAAABTVEFU
        VVNFUlJPUgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABGTlNURkxQUg==
      SCRIPT: | 
        '#include web_formatDate
        '#include web_JSonString
        Option Explicit
        Function web_process_error_ref_2_0_0(msgID, consumer, consumerkey, producer, producerkey, Company, Companykey, AppSystem, AppSystemId, AppSystemkey, version, contactkey, order, transaction, deviceId, statusError)
          web_process_error_ref_2_0_0 = false
          dim errorMessage
          errorMessage = ""
          on error resume next
          dim Creator, SS, jsonRefs()
          set Creator = new TCreator
          Set SS = Creator.GetObject(Array(""), "TStringStream", "")
          'Подготавливаем StringStream, в котором будет содержаться массив справочников
          SS.WriteLn("{""status"": ""PROCESSED_INCORRECT""," )
          SS.WriteLn("""errorMessage"":""" & statusError & """, ")
          SS.WriteLn("""head"":{" )
          SS.WriteLn("""appSystem"":{")
          SS.WriteLn("""id"":""" & AppSystemId & """, ")
          SS.WriteLn("""name"":" & web_JSonString(AppSystem) & "},")
          SS.WriteLn("""company"":{")
          SS.WriteLn("""id"":""" & Companykey & """, ")
          SS.WriteLn("""name"":" & web_JSonString(Company) & "},")
          SS.WriteLn("""producer"":{")
          SS.WriteLn("""id"":""" & producerkey & """, ")
          SS.WriteLn("""name"":""" & producer & """},")
          SS.WriteLn("""consumer"":{")
          SS.WriteLn("""id"":""" & consumerkey & """, ")
          SS.WriteLn("""name"":""" & consumer & """},")
          if msgID <> "" then
            SS.WriteLn("""replyTo"":""" & msgID & """, ")
          end if
          SS.WriteLn("""order"":" & order & ", ")
          SS.WriteLn("""deviceId"":""" & deviceId & """, ")
          SS.WriteLn("""dateTime"":""" & web_formatDate(Date) & """")
          SS.WriteLn("}, ")
          SS.WriteLn("""body"":{")
          SS.WriteLn("""type"":""ONE_REF"",")
          SS.WriteLn("""version"":" & version & ", ")
          SS.WriteLn("""payload"": {} }}" )
          
          redim Preserve jsonRefs(0)
          jsonRefs(0) = SS.DataString
        
          web_process_error_ref_2_0_0 = _
            finalization_process_error_ref_2_0_0(errorMessage, jsonRefs)
        End Function
        function finalization_process_error_ref_2_0_0(errorMessage, json)
          dim a(1)
          a(0) = errorMessage
          a(1) = json
          finalization_process_error_ref_2_0_0 = a
        end function
        
    Set: 
      - 
        Table: "RP_ADDITIONALFUNCTION"
        Items: 
          - 
            ADDFUNCTIONKEY: "147040220_1730903579 web_formatDate"
          - 
            ADDFUNCTIONKEY: "147040221_1730903579 web_JSonString"
  - 
    Properties: 
      Class: "TgdcFunction"
      RUID: 147117130_1730903579
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
    Fields: 
      NAME: "web_getMessageFromServer2_0_0"
      COMMENT: ~
      EVENT: ~
      FUNCTIONTYPE: ~
      GROUPNAME: ~
      INHERITEDRULE: 0
      LANGUAGE: "VBScript"
      LOCALNAME: ~
      MODIFYDATE: ~
      MODULE: "UNKNOWN"
      MODULECODE: "1010001_17 APPLICATION"
      OBJECTNAME: "APPLICATION"
      OWNERNAME: ~
      PUBLICFUNCTION: 1
      SHORTCUT: ~
      USEDEBUGINFO: 0
      EDITIONDATE: 2023-03-31T17:57:12+03:00
      DISPLAYSCRIPT: | 
        WEB_GETMESSAGEFROMSERVER2_0_0
        WEB_GETMESSAGEFROMSERVER2_0_0_ROLLBACK
        ISDIMMEDARRAY
        
      ENTEREDPARAMS: !!binary > 
        U0xQUlBSU1QMAAAASVNTSUxFTlRNT0RFDAAAAElTU0lMRU5UTU9ERQAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAABGTlNUUFJTVAkAAABBUFBTWVNURU0JAAAAQVBQU1lTVEVNAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAEZOU1RQUlNUCwAAAFdFQl9TRVJWSUNFCwAAAFdFQl9TRVJWSUNFAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAEZOU1RGTFBS
      SCRIPT: | 
        Option Explicit
        '#include web_getDocuments2_0_0
        '#include web_post_documents2_0_0
        '#include web_recalcParametres
        '#include web_process_error_ref_2_0_0
        Function web_getMessageFromServer2_0_0(isSilentMode, appSystem, web_service)
          web_getMessageFromServer2_0_0 = true
          dim Creator, ibsql, arrDeviceUid()
          set Creator = new TCreator
          set ibsql = Creator.GetObject(nil, "TIBSQL", "")
          ibsql.Transaction = gdcBaseManager.ReadTransaction
          ibsql.Close
          ibsql.SQL.Text = _
           "select " & _
            "  u.USR$ERPUSERID, " & _
            "  u.USR$ERPUSERPASSWORD, " & _
            "  u.USR$ERPUSERNAME, " & _
            "  coalesce(u.USR$ISPARAMS, 0) as USR$ISPARAMS " & _
            "from USR$GDMN_SYSTEMS u " & _
            "where u.id = :systemkey " & _
            "  and not u.USR$ERPUSERDEVICEID is null "
          ibsql.ParamByName("systemkey").AsInteger = appSystem
          ibsql.ExecQuery
          if ibsql.RecordCount = 0 or (ibsql.FieldByName("USR$ERPUSERPASSWORD").AsString = "") then
            AError = "Пользователь ERP данной подсистемы " & _
            " отсутствует в справочнике 'Подсистемы мобильного приложения'" & vbCr & _
            " либо у него не заполнен ID устройства." & vbCr & vbCr & _
            " Выполните макрос 'Импорт подсистем с сервера' и проверьте пароль"
             web_service.SetError(AError)
           '  if not isSilentMode then
        '       call Application.MessageBox("Обработка запросов выполнена с ошибками! Смотрите файл с ошибками!", "Внимание!", vbInformation + vbOkOnly + vbApplicationModal)
        '     end if
             web_getMessageFromServer2_0_0 = false
             exit function
          end if
          dim userLogin, userPassw, isParams
          isParams = ibsql.FieldByName("USR$ISPARAMS").AsInteger
          userLogin =  ibsql.FieldByName("USR$ERPUSERNAME").AsString
          userPassw = ibsql.FieldByName("USR$ERPUSERPASSWORD").AsString
          'Вход пользователя
          call web_service.Login(userLogin, userPassw)
        
          If web_service.RequestStatus = 200 or web_service.RequestStatus = 403 Then
            dim postData
            postData = "{" & _
              """companyId"": """ & web_service.CompanyKey & ""","  & _
              """appSystemId"": """ & web_service.AppSystemId & """}"
            call web_service.AddProcess(postData)
            if web_service.RequestStatus = 201 and Assigned(web_service.RequestData) then
              dim obj, objResult, objData, processId, processStatus, AError, files, hasError
              dim  msgType, msgName, exportData, payload
              set obj = web_service.RequestData
              set objData = obj.Value("data")
              objResult = obj.SimpleValue("result", "")
              if objResult then
                processId = objData.SimpleValue("processId", "")
                processStatus = objData.SimpleValue("status", "")
                set files = objData.Value("files")
                if processStatus = "BUSY" then
                   AError = "Запросы обрабатываются  процессом c UID = " & processId & vbCr & _
                    ". Обработка запросов запрещена !!! "
                   web_service.SetError(AError)
                  ' if not isSilentMode then
        '             call Application.MessageBox("Обработка запросов выполнена с ошибками! Смотрите файл с ошибками!", "Внимание!", vbInformation + vbOkOnly + vbApplicationModal)
        '           end if
                   web_getMessageFromServer2_0_0 = false
                   exit function
                end if
                'Если процесс стартовал, начинаем готовить данные
        
                dim producer, producerkey, consumer, consumerkey, version, contactkey, _
                  m, JsonObj, Companykey, order, deviceId
                hasError = false
                AError = ""
        
                dim cash, countRef, countSettings, countDocs,  _
                  cashRef(), cashSettings(), cashDocs(), countResults, msgID, FData
                countRef = -1
                countSettings = -1
                countDocs = -1
        
                countResults = files.PropertiesCount
                if countResults > 0 then
                  dim fileName, fileValue, file
                  set JsonObj = New TVB_gs_Json
                  dim Transaction, StrSavePoint, ibsqlDevice
                  'Стартуем транзакцию
                  set Transaction = Creator.GetObject(Null, "TIBTransaction", "Transaction")
                  Transaction.Params.Add("nowait")
                  Transaction.DefaultDatabase = gdcBaseManager.Database
                  Transaction.StartTransaction
                  set ibsqlDevice = Creator.GetObject(nil, "TIBSQL", "")
                  ibsqlDevice.Transaction = Transaction
                  except web_getMessageFromServer2_0_0_RollBack(Transaction, processId)
                  'on error resume next
                  dim DataStreamArr(), CountStreams
                    CountStreams = -1
                  for m = 0 to countResults - 1
                    set file = files.propertyItem(m)
                    fileName = file.Name
                    set fileValue = file.Value
                    set FData = JsonObj.Decode(fileValue.json)
                    msgID = FData.SimpleValue("id", "")
                    msgType = FData.Value("body").SimpleValue("type", "")
                    set payload = FData.Value("body").Value("payload")
                    version = FData.Value("body").SimpleValue("version", 1)
                    consumer =  trim(FData.Value("head").Value("producer").SimpleValue("name", ""))
                    consumerkey = trim(FData.Value("head").Value("producer").SimpleValue("id", ""))
                    producer =  trim(FData.Value("head").Value("consumer").SimpleValue("name", ""))
                    producerkey = trim(FData.Value("head").Value("consumer").SimpleValue("id", ""))
                    order = FData.Value("head").SimpleValue("order", 1)
                    deviceId = FData.Value("head").SimpleValue("deviceId", "")
                    Companykey = web_service.CompanyKey
                    cash = consumerkey & "_" & producerkey
                    'Здесь проверяем, есть ли consumer и если что его добавляем
                    ' запросом к серверу
                    dim isEnable, paramKey, statusError
                    isEnable = true
                    statusError = ""
                     'Получаем все данные по пользователю
                    call web_service.GetUserWithDevice(consumerkey)
                    if web_service.RequestStatus = 200 and Assigned(web_service.RequestData) then
                      dim usersObj, userID, userName, deviceUid, mm, countDevices, j, _
                        userAlias, userRuid, disabled, userCountResults, userObjResult
                      set usersObj = web_service.RequestData
                      userObjResult = usersObj.SimpleValue("result", "")
                      set userObjResult = usersObj.Value("data")
                      userID = trim(userObjResult.SimpleValue("id", ""))
                      userName = trim(userObjResult.SimpleValue("name", ""))
                      userAlias = trim(userObjResult.SimpleValue("alias", ""))
                      userRuid = trim(userObjResult.SimpleValue("externalId", ""))
                      countDevices = 0
                      if  Assigned(userObjResult.Value("deviceUids")) then
                        countDevices = userObjResult.Value("deviceUids").ObjectItemsCount
                        if countDevices > 0 then
                          redim Preserve arrDeviceUid(countDevices - 1)
                          for j = 0 to countDevices - 1
                            arrDeviceUid(j) = userObjResult.Value("deviceUids").ObjectItem(j).value
                          next
                          deviceUid = arrDeviceUid
                        else
                          deviceUid = null
                        end if
                      else
                        deviceUid = null
                      end if
                      disabled = userObjResult.SimpleValue("disabled", False)
        
                      dim  id, oldContactkey, oldDisabled, idDev, oldLogin
                      dim  newContactkey, newDisabled, comment, a
                      a = web_recalcParametres(disabled, userRuid, deviceUid, isParams, userID, AppSystem)
                      newContactkey = a(0)
                      newDisabled = a(1)
                      comment = a(2)
                      ibsql.Close
                      ibsql.Transaction = Transaction
                      ibsql.SQL.Text = _
                        "select " & _
                        "  u.ID as masterkey, " & vbCrLf & _
                        "  coalesce(u.USR$NOTACTIVE, 0) as USR$NOTACTIVE, " & _
                        "  coalesce(u.USR$CONTACTKEY, 0) as USR$CONTACTKEY, "   & _
                        "  u.USR$MOBILELOGIN " & vbCrLf & _
                        "from  USR$GDMN_USERS u " & _
                        "where u.USR$SYSTEMKEY = :systemkey " & _
                        "  and u.USR$MOBILEID = :userId "
                      ibsql.ParamByName("systemkey").AsInteger = AppSystem
                      ibsql.ParamByName("userId").AsString = userID
                      ibsql.ExecQuery
                      dim masterkey
                      
                      if not ibsql.RecordCount > 0 then
                        call gdcBaseManager.ExecSingleQueryResult("select id from GD_P_GETNEXTID ", _
                          NULL, Res, Transaction)
                        id = Res(0, 0)
                        ibsql.Close
                        ibsql.Transaction = Transaction
                        ibsql.SQL.Text = _
                          "insert into USR$GDMN_USERS(ID, USR$SYSTEMKEY, USR$MOBILEID, USR$MOBILELOGIN, " & _
                            " USR$CONTACTKEY, USR$NOTACTIVE, USR$COMMENT) "  &_
                            "values (:ID, :SYSTEMKEY, :userID, :userName, :userkey, :disabled, :comment ) "
                        ibsql.ParamByName("id").AsInteger = id
                        ibsql.ParamByName("SYSTEMKEY").AsInteger = AppSystem
                        ibsql.ParamByName("userID").AsString = userID
                        ibsql.ParamByName("userName").AsString = userName
                        if  newContactkey = 0 then
                          ibsql.ParamByName("userkey").AsVariant = null
                        else
                          ibsql.ParamByName("userkey").AsVariant = newContactkey
                        end if
                        ibsql.ParamByName("disabled").AsInteger = newDisabled
                        ibsql.ParamByName("comment").AsString = comment
                        ibsql.ExecQuery
                        masterkey = id
                        if countDevices > 0 then
                          for j = 0 to UBound(arrDeviceUid)
                            call gdcBaseManager.ExecSingleQueryResult("select id from GD_P_GETNEXTID ", _
                              NULL, Res, Transaction)
                            idDev = Res(0, 0)
                            ibsqlDevice.Close
                            ibsqlDevice.SQL.Text = _
                              "insert into USR$GDMN_DEVICES(ID, USR$GDMN_USER, USR$MOBILEID, USR$NOTISACTIVE) "  &_
                                "values (:ID, :GDMN_USER, :MOBILEID, :NOTISACTIVE ) "
                            ibsqlDevice.ParamByName("id").AsInteger = idDev
                            ibsqlDevice.ParamByName("GDMN_USER").AsInteger = masterkey
                            ibsqlDevice.ParamByName("MOBILEID").AsString = arrDeviceUid(j)
                            ibsqlDevice.ParamByName("NOTISACTIVE").AsInteger = 0
                            ibsqlDevice.ExecQuery
                          next
                        end if
                      else
                        masterkey = ibsql.FieldByName("masterkey").AsVariant
                        oldDisabled = ibsql.FieldByName("USR$NOTACTIVE").AsVariant
                        oldContactkey = ibsql.FieldByName("USR$CONTACTKEY").AsVariant
                        oldLogin = ibsql.FieldByName("USR$MOBILELOGIN").AsString
                        if oldContactkey <> newContactkey or _
                          oldDisabled <> newDisabled or _
                          oldLogin <> userName then
                          ibsql.Close
                          ibsql.Transaction = Transaction
                          if newContactkey > 0 then
                            ibsql.SQL.Text = _
                               "update USR$GDMN_USERS u set  " & _
                               "  u.USR$CONTACTKEY = :userkey, u.USR$COMMENT  = :comment, u.USR$NOTACTIVE = :disabled, " & _
                               "  u.USR$MOBILELOGIN = :userlogin " & vbCrLf & _
                               "where u.USR$MOBILEID = :userID "
                            ibsql.ParamByName("userID").AsString = userID
                            ibsql.ParamByName("userkey").AsVariant = newContactkey
                            ibsql.ParamByName("disabled").AsInteger = newDisabled
                            ibsql.ParamByName("comment").AsString = comment
                            ibsql.ParamByName("userlogin").AsString = userName
                            ibsql.ExecQuery
                          else
                            ibsql.SQL.Text = _
                               "update USR$GDMN_USERS u set " & _
                               " u.USR$CONTACTKEY = null, u.USR$COMMENT  = :comment, u.USR$NOTACTIVE = :disabled, " & _
                               "  u.USR$MOBILELOGIN = :userlogin " & vbCrLf & _
                               "where u.USR$MOBILEID = :userID "
                            ibsql.ParamByName("userID").AsString = userID
                            ibsql.ParamByName("disabled").AsInteger = newDisabled
                            ibsql.ParamByName("comment").AsString = comment
                            ibsql.ParamByName("userlogin").AsString = userName
                            ibsql.ExecQuery
                          end if
                        end if
                        if countDevices > 0  then
                          for j = 0 to UBound(arrDeviceUid)
                            ibsqlDevice.Close
                            ibsqlDevice.SQL.Text = _
                              "select b.ID, coalesce(b.USR$NOTISACTIVE, 0) as USR$NOTISACTIVE " & vbCrLf & _
                              "from USR$GDMN_DEVICES b " & vbCrLf & _
                              "where b.USR$GDMN_USER = :masterkey " & vbCrLf & _
                              "  and b.USR$MOBILEID = :mobileId "
                            ibsqlDevice.ParamByName("masterkey").AsInteger = masterkey
                            ibsqlDevice.ParamByName("MOBILEID").AsString = arrDeviceUid(j)
                            ibsqlDevice.ExecQuery
                            if ibsqlDevice.RecordCount = 0 then
                              call gdcBaseManager.ExecSingleQueryResult("select id from GD_P_GETNEXTID ", _
                                NULL, Res, Transaction)
                              idDev = Res(0, 0)
                              ibsqlDevice.Close
                              ibsqlDevice.SQL.Text = _
                                "insert into USR$GDMN_DEVICES(ID, USR$GDMN_USER, USR$MOBILEID, USR$NOTISACTIVE) "  &_
                                  "values (:ID, :GDMN_USER, :MOBILEID, :NOTISACTIVE ) "
                              ibsqlDevice.ParamByName("id").AsInteger = idDev
                              ibsqlDevice.ParamByName("GDMN_USER").AsInteger = masterkey
                              ibsqlDevice.ParamByName("MOBILEID").AsString = arrDeviceUid(j)
                              ibsqlDevice.ParamByName("NOTISACTIVE").AsInteger = 0
                              ibsqlDevice.ExecQuery
                            end if
                          next
                          'Убираем лишние, которые не используются
                          ibsqlDevice.Close
                          ibsqlDevice.SQL.Text = _
                            "select b.USR$MOBILEID " & vbCrLf & _
                            "from USR$GDMN_DEVICES b " & vbCrLf & _
                            "where b.USR$GDMN_USER = :masterkey "
                          ibsqlDevice.ParamByName("masterkey").AsInteger = masterkey
                          ibsqlDevice.ExecQuery
                          while not ibsqlDevice.EOF
                            if UBound(Filter(arrDeviceUid, ibsqlDevice.FieldByName("USR$MOBILEID").AsString, True)) < 0 then
                                call gdcBaseManager.ExecSingleQueryResult("delete from USR$GDMN_DEVICES " & _
                                  "where USR$MOBILEID = :mobileId and USR$GDMN_USER = :masterkey ", _
                                Array(ibsqlDevice.FieldByName("USR$MOBILEID").AsString, masterkey) , _
                                  Res, Transaction)
                            end if
                            ibsqlDevice.Next
                          wend
                        end if
                      end if
                    end if
                    if Transaction.InTransaction then
                      Transaction.Commit
                    end if
                    if Err.Number <> 0 then
                      hasError = true
                      AError = web_service.RequestError
                      web_service.SetError(AError)
                       'Прерываем процесс
                      errorJsonString = "{" & _
                        """errorMessage"": """  & AError & """} "
                      call web_service.InterruptProcess(processId, errorJsonString)
                      web_service.SetError(AError)
                      web_getMessageFromServer2_0_0 = false
                      exit function
                    end if
                    if not Transaction.InTransaction then
                      Transaction.StartTransaction
                    end if
                    '______________________
                    
                    if newDisabled = 1 then
                      isEnable = false
                      statusError = comment
                    end if
                    contactkey = newContactkey
        
                    'ставим savepoint
                    randomize
                    StrSavePoint = "S_" & m & round(rnd()*1000)
                    call gdcBaseManager.ExecSingleQuery("SAVEPOINT " & StrSavePoint, Transaction)
        
                    select case msgType
                      'Если в json файле пришла команда, разбираем ее и отправляем ответ
                      case "CMD"
                        msgName = payload.SimpleValue("name", "")
                        select case msgName
                          'если пришел запрос на справочники
                          case "GET_REF"
                            dim res, res1, fun, FuncParamArray
                            if not hasError then
                             ' if inStr(join(cashRef, ","), cash & "_" & "GET_REF") > 0 then
                             ' else
                              call gdcBaseManager.ExecSingleQueryResult(_
                                "SELECT v.USR$FUNCTIONKEY " & _
                                "FROM USR$GDMN_DATA_VERSION v " & _
                                "WHERE  v.USR$VERSION = :ver ", version, Res1, _
                                gdcBaseManager.ReadTransaction)
                              if not isEmpty(Res1) then
                                if not isNull(Res1(0, 0)) then
                                  fun = Res1(0, 0)
                                end if
                              end if
                              if isEmpty(fun) then
                                fun = 0
                              end if
                              if fun = 0 then
                                hasError = true
                                AError = AError & " Не определена функция отправки справочников в . " & _
                                  " справочнике Версии API для мобильного " & consumerkey
                                  web_service.SetError(AError)
                              else
                                FuncParamArray = Array(msgID, contactkey, consumer, consumerkey,  _
                                  producer, producerkey, web_service.Company, Companykey, web_service.AppSystem, _
                                  web_service.AppSystemId, appSystem, hasError, AError, version, order, deviceId, statusError, "")
                                exportData = System.ExecuteScriptFunction(fun, FuncParamArray)
                                if  CountStreams >= 0 then
                                  CountStreams =  Ubound(DataStreamArr) + 1
                                else
                                  CountStreams = 0
                                end if
                                dim i
                                for i = LBound(exportData) to Ubound(exportData)
                                  redim Preserve DataStreamArr(CountStreams)
                                  DataStreamArr(CountStreams) = exportData(i)
                                  CountStreams = CountStreams + 1
                                next
                              end if
        
          '                   countRef = countRef + 1
          '                   redim Preserve cashRef(countRef)
          '                   cashRef(countRef) = cash & "_" & "GET_REF"
                            end if
        
        
                          case "GET_DOCUMENTS"
                            dim params
                            if Assigned(payload.Value("params")) then
                              set params = payload.Value("params")
                            else
                              params = null
                            end if
                            if not hasError then
                             ' if  inStr(join(cashDocs, ","), cash & "_" & "GET_DOCUMENTS") > 0  then
          '                    else
                                exportData = web_getDocuments2_0_0(msgID, consumer, consumerkey,  _
                                    producer, producerkey, web_service.Company, Companykey, web_service.AppSystem, _
                                    web_service.AppSystemId, appSystem, params, version, contactkey, order, transaction, deviceId, statusError)
                                if  CountStreams >= 0 then
                                  CountStreams =  Ubound(DataStreamArr) + 1
                                else
                                  CountStreams = 0
                                end if
                                redim Preserve DataStreamArr(CountStreams)
                                DataStreamArr(CountStreams) = exportData
          '                     countDocs = countDocs + 1
          '                     redim Preserve cashDocs(countDocs)
          '                     cashDocs(countDocs) = cash & "_" & "GET_DOCUMENTS"
                            end if
        
                          'если пришел запрос на склад по юзеру
                          case "GET_USER_SETTINGS"
                            if not hasError then
                             ' if inStr(join(cashSettings, ","), cash & "_" & "GET_USER_SETTINGS") > 0 then
          '                      call web_service.DeleteMessage(msgID)
           '                   else
                              call gdcBaseManager.ExecSingleQueryResult(_
                                "SELECT " & _
                                "  v.USR$GETUSERSETTINGS " & _
                                "FROM " & _
                                "  USR$GDMN_SYSTEMS b " & _
                                "  LEFT JOIN USR$GDMN_VERSIONS v  ON v.ID = b.USR$GDMN_VERSION " & _
                                "WHERE b.ID = :systemkey ", appSystem, Res1, _
                                  gdcBaseManager.ReadTransaction)
                              if not isEmpty(Res1) then
                                if not isNull(Res1(0, 0)) then
                                  fun = Res1(0, 0)
                                end if
                              end if
                              if isEmpty(fun) then
                                fun = 0
                              end if
        
                              FuncParamArray = Array(msgID, contactkey, consumer, consumerkey,  _
                                producer, producerkey, web_service.Company, Companykey, web_service.AppSystem, _
                                web_service.AppSystemId, appSystem, version, order, deviceId, statusError)
                              exportData = System.ExecuteScriptFunction(fun, FuncParamArray)
                              if  CountStreams >= 0 then
                                CountStreams =  Ubound(DataStreamArr) + 1
                              else
                                CountStreams = 0
                              end if
                              redim Preserve DataStreamArr(CountStreams)
                              DataStreamArr(CountStreams) = exportData(1)
                              if (exportData(1) = false) or exportData(0) <> "" then
                                 web_service.SetError(exportData(0))
                              end if
          '                   countSettings = countSettings + 1
          '                   redim Preserve cashSettings(countSettings)
          '                   cashSettings(countSettings) = cash & "_" & "GET_USER_SETTINGS"
                            end if
                            
                            case "GET_APP_SYSTEM_SETTINGS"
                            if not hasError then
                              call gdcBaseManager.ExecSingleQueryResult(_
                                "SELECT " & _
                                "  v.USR$GETAPISETTINGS " & _
                                "FROM " & _
                                "  USR$GDMN_SYSTEMS b " & _
                                "  LEFT JOIN USR$GDMN_VERSIONS v  ON v.ID = b.USR$GDMN_VERSION " & _
                                "WHERE b.ID = :systemkey ", appSystem, Res1, _
                                  gdcBaseManager.ReadTransaction)
                              if not isEmpty(Res1) then
                                if not isNull(Res1(0, 0)) then
                                  fun = Res1(0, 0)
                                end if
                              end if
                              if isEmpty(fun) then
                                fun = 0
                              end if
        
                              FuncParamArray = Array(msgID, contactkey, consumer, consumerkey,  _
                                producer, producerkey, web_service.Company, Companykey, web_service.AppSystem, _
                                web_service.AppSystemId, appSystem, version, order, deviceId, statusError)
                              exportData = System.ExecuteScriptFunction(fun, FuncParamArray)
                              if  CountStreams >= 0 then
                                CountStreams =  Ubound(DataStreamArr) + 1
                              else
                                CountStreams = 0
                              end if
                              redim Preserve DataStreamArr(CountStreams)
                              DataStreamArr(CountStreams) = exportData(1)
                              if (exportData(1) = false) or exportData(0) <> "" then
                                 web_service.SetError(exportData(0))
                              end if
                            end if
                            
                            case "GET_ONE_REF"
                            fun = 0
                            if Assigned(payload.Value("params")) then
                              set params = payload.Value("params")
                            else
                              params = null
                            end if
                            dim refName
                            if Assigned(params.Value("name")) then
                              refName = params.Value("name").Value
                            else
                              refName = ""
                            end if
                            if not hasError then
                              if refName <> "" then
                                call gdcBaseManager.ExecSingleQueryResult(_
                                  "SELECT " & vbCrLf & _
                                  "  coalesce(b.USR$SET_FUNCTION, 0) as USR$SET_FUNCTION " & vbCrLf & _
                                  "FROM " & vbCrLf & _
                                  "  USR$GDMN_REFERENCES b " & vbCrLf & _
                                  "WHERE b.USR$SYSTEMKEY = :systemkey " & vbCrLf & _
                                  "  AND upper(b.USR$MOBILENAME) = :refName ", Array(appSystem, Ucase(refName)), Res1, _
                                    gdcBaseManager.ReadTransaction)
                                if not isEmpty(Res1) then
                                  if not isNull(Res1(0, 0)) then
                                    fun = Res1(0, 0)
                                  end if
                                end if
                                if isEmpty(fun) then
                                  fun = 0
                                end if
                              else
                                fun = 0
                              end if
                              dim receivedData
                              if fun = 0 or statusError <> "" then
                                if fun = 0 then statusError = " Для данного справочника не определена функция-обработчик в Гедемине "
                                receivedData = web_process_error_ref_2_0_0(msgID, consumer, consumerkey,  _
                                    producer, producerkey, web_service.Company, Companykey, web_service.AppSystem, _
                                    web_service.AppSystemId, appSystem, version, contactkey, order, transaction, deviceId, statusError)
                              else
                                FuncParamArray = Array(msgID, consumer, consumerkey,  _
                                  producer, producerkey, web_service.Company, Companykey, web_service.AppSystem, _
                                  web_service.AppSystemId, appSystem, params, version, contactkey, order, transaction, deviceId, statusError, refName)
                                receivedData = System.ExecuteScriptFunction(fun, FuncParamArray)
                              end if
        
                              if  CountStreams >= 0 then
                                CountStreams =  Ubound(DataStreamArr) + 1
                              else
                                CountStreams = 0
                              end if
                              exportData = receivedData(1)
        
                              for i = LBound(exportData) to Ubound(exportData)
                                redim Preserve DataStreamArr(CountStreams)
                                DataStreamArr(CountStreams) = exportData(i)
                                CountStreams = CountStreams + 1
                              next
                             ' redim Preserve DataStreamArr(CountStreams)
        '                      DataStreamArr(CountStreams) = exportData(1)
        '                      if (exportData(1) = false) or exportData(0) <> "" then
        '                         web_service.SetError(exportData(0))
        '                      end if
                            end if
                         end select
                         
                       case "DOCS"
                        dim respLine
                         if not hasError then
                           respLine =  web_post_documents2_0_0(msgID, consumer, consumerkey,  _
                              producer, producerkey, web_service.Company, Companykey, web_service.AppSystem, _
                              web_service.AppSystemId, appSystem, payload, version, order, transaction, deviceId, statusError)
                           dim k, flag
                           flag = 0
                           if not IsEmpty(respLine) then
                             for k = LBound(respLine) to Ubound(respLine)
                               if respLine(k) <> "" then
                                 if  CountStreams >= 0 then
                                  CountStreams =  Ubound(DataStreamArr) + 1
                                else
                                  CountStreams = 0
                                end if
                                redim Preserve DataStreamArr(CountStreams)
                                DataStreamArr(CountStreams) = respLine(k)
                               end if
                             next
                           end if
                         end if
                    end select
                    '
                    if Err.Description > "" then
                      call gdcBaseManager.ExecSingleQuery("ROLLBACK TO " & StrSavePoint, Transaction)
                    else
                      call gdcBaseManager.ExecSingleQuery("RELEASE SAVEPOINT " & StrSavePoint, Transaction)
                    end if
                  next
                  dim patchData
                  patchData = "{""processedFiles"": [ "
                  if IsDimmedArray(DataStreamArr) then
                    for k = LBound( DataStreamArr) to Ubound( DataStreamArr)
                      patchData = patchData & DataStreamArr(k)
                      if k <>  Ubound( DataStreamArr) then
                        patchData = patchData & ", "
                      end if
                    next
                  end if
                  patchData = patchData & " ]}"
                  dim errorJsonString
                  'Отправляем на сервер API3
                  call web_service.PrepareProcess(processId, patchData)
                  if web_service.RequestStatus = 200 and Assigned(web_service.RequestData) then
                    set obj = web_service.RequestData
                    set objData = obj.Value("data")
                    objResult = obj.SimpleValue("result", "")
                    'При успешной обработке коммитим транзакцию
                    if  objResult  then
                      if Transaction.InTransaction then
                        Transaction.Commit
                        if Err.Description = "" then
                          'При успешном коммите отправляем API4
                          call web_service.CompleteProcess(processId)
                        else
                          'При неуспешном - отправляем API5
                          errorJsonString = "{" & _
                           """errorMessage"": "  & web_service.JSonString(Err.Description)  & "} "
                          call web_service.CancelProcess(processId, errorJsonString)
                          web_service.SetError(AError)
                        end if
                      end if
                    else
                      if Transaction.InTransaction then
                        Transaction.RollBack
                      end if
                      AError = AError & "Транзакция отменена!"
                      web_service.SetError(AError)
                      errorJsonString = "{" & _
                         """errorMessage"": """  & AError & """} "
                      call web_service.InterruptProcess(processId, errorJsonString)
                    end if
                  else
                    AError = AError & "Неизвестная ошибка"
                    web_service.SetError(AError)
                    errorJsonString = "{" & _
                     """errorMessage"": """  & AError & """} "
                    call web_service.InterruptProcess(processId, errorJsonString)
                  end if
                else
                  'Если файлов для обработки нет, прерываем процесс
                   web_getMessageFromServer2_0_0 = false
                   AError = "Файлов для обработки не найдено!"
                   errorJsonString = "{" & _
                     """errorMessage"": """  & AError & """} "
                   call web_service.InterruptProcess(processId, errorJsonString)
                   'web_service.SetError(AError)
                end if
              end if
            else
            ' Если процесс не создался
              AError = AError & web_service.RequestError
              web_service.SetError(AError)
            end if
          else
            AError = web_service.RequestError
            web_service.SetError(AError)
          end if
          'Выход пользователя
          call web_service.Logout()
        
         ' if not isSilentMode then
        '    if web_service.HasError then
        '      call Application.MessageBox("Обработка запросов выполнена с ошибками! Смотрите файл с ошибками!", "Внимание!", vbInformation + vbOkOnly + vbApplicationModal)
        '    else
        '      call Application.MessageBox("Обработка запросов успешно выполнена!", "Внимание!", vbInformation + vbOkOnly + vbApplicationModal)
        '    end if
        '  end if
          if web_service.HasError then
            web_getMessageFromServer2_0_0 = false
          end if
        End Function
        
        sub web_getMessageFromServer2_0_0_RollBack(Transaction, processId)
          dim errorMessage
          if Transaction.InTransaction then
            Transaction.RollBack
          end if
          web_getMessageFromServer2_0_0 = false
          errorMessage = "Процесс обработки" & processId & " прерван!"
          errorJsonString = "{" & _
                         """errorMessage"": """  & errorMessage & """} "
          call web_service.CancelProcess(processId, errorJsonString)
        end sub
        
        Function IsDimmedArray(arrParam)
        
          Dim lintUBound : lintUBound = 0
          Dim llngError  : llngError = 0
        
          IsDimmedArray = False
          If Not IsArray(arrParam) Then : Exit Function
         '' Test the bounds
          On Error Resume Next
        
              lintUBound = UBound(arrParam)
              llngError = Err.Number
              If (llngError <> 0) Then : Err.Clear
        
          On Error Goto 0
          If (llngError = 0) And (lintUBound >= 0) Then : IsDimmedArray = True
        
        End Function
        
    Set: 
      - 
        Table: "RP_ADDITIONALFUNCTION"
        Items: 
          - 
            ADDFUNCTIONKEY: "147117329_1730903579 web_getDocuments2_0_0"
          - 
            ADDFUNCTIONKEY: "147117334_1730903579 web_post_documents2_0_0"
          - 
            ADDFUNCTIONKEY: "147123326_1730903579 web_recalcParametres"
          - 
            ADDFUNCTIONKEY: "241111139_1971205439 web_process_error_ref_2_0_0"
  - 
    Properties: 
      Class: "TgdcFunction"
      RUID: 241111152_1971205439
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
    Fields: 
      NAME: "web_process_ready_ref_2_0_0"
      COMMENT: ~
      EVENT: ~
      FUNCTIONTYPE: ~
      GROUPNAME: ~
      INHERITEDRULE: 0
      LANGUAGE: "VBScript"
      LOCALNAME: ~
      MODIFYDATE: ~
      MODULE: "UNKNOWN"
      MODULECODE: "1010001_17 APPLICATION"
      OBJECTNAME: "APPLICATION"
      OWNERNAME: ~
      PUBLICFUNCTION: 1
      SHORTCUT: ~
      USEDEBUGINFO: 0
      EDITIONDATE: 2023-03-31T13:26:23+03:00
      DISPLAYSCRIPT: | 
        WEB_PROCESS_READY_REF_2_0_0
        GETJSONHEADER
        
      ENTEREDPARAMS: !!binary > 
        U0xQUlBSU1QKAAAAQ09OVEFDVEtFWQoAAABDT05UQUNUS0VZAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAEZOU1RQUlNUCAAAAENPTlNVTUVSCAAAAENPTlNVTUVSAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAEZOU1RQUlNUCwAAAENPTlNVTUVSS0VZCwAAAENPTlNVTUVSS0VZAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAEZOU1RQUlNUCgAAAENPTVBBTllLRVkKAAAAQ09NUEFOWUtFWQAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAABGTlNUUFJTVAwAAABBUFBTWVNURU1LRVkMAAAAQVBQU1lTVEVNS0VZAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAEZOU1RQUlNUCwAAAEFQUFNZU1RFTUlECwAAAEFQUFNZU1RF
        TUlEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEZOU1RQUlNUCQAAAEFQUFNZU1RFTQkAAABBUFBT
        WVNURU0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAARk5TVFBSU1QHAAAAQ09NUEFOWQcAAABDT01Q
        QU5ZAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEZOU1RQUlNUCwAAAFBST0RVQ0VSS0VZCwAAAFBS
        T0RVQ0VSS0VZAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEZOU1RQUlNUCAAAAFBST0RVQ0VSCAAA
        AFBST0RVQ0VSAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEZOU1RQUlNUBQAAAE1TR0lEBQAAAE1T
        R0lEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEZOU1RQUlNUCAAAAERFVklDRUlECAAAAERFVklD
        RUlEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEZOU1RQUlNUBwAAAFZFUlNJT04HAAAAVkVSU0lP
        TgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABGTlNUUFJTVAgAAABIQVNFUlJPUggAAABIQVNFUlJP
        UgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABGTlNUUFJTVAYAAABBRVJST1IGAAAAQUVSUk9SAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAEZOU1RQUlNUCwAAAFNUQVRVU0VSUk9SCwAAAFNUQVRVU0VS
        Uk9SAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEZOU1RQUlNUBwAAAFJFRk5BTUUHAAAAUkVGTkFN
        RQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABGTlNUUFJTVAoAAABKU09ORk9PVEVSCgAAAEpTT05G
        T09URVIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAARk5TVEZMUFI=
      SCRIPT: | 
        Option Explicit
        Function web_process_ready_ref_2_0_0(contactkey, consumer, consumerkey, Companykey, AppSystemkey, _
            AppSystemId, AppSystem, Company, producerkey, producer, msgID, deviceId, version, _
          byRef hasError, byRef AError, statusError, refName, jsonFooter)
          dim qSelRefs
          dim i, oData, isFirst, refType, arrFields, arr, Res
          dim arr2, arr0, arr1, arr3, arr4, deptkey, remains, maxSize
          dim Creator, ss, k, ibsqlGetID
          set Creator = new TCreator
          set ibsqlGetID = Creator.GetObject(nil, "TIBSQL", "")
          ibsqlGetID.Transaction = gdcBaseManager.ReadTransaction
          ibsqlGetID.SQL.Text = "SELECT GEN_ID(USR$GDMN_MULTY, 1) FROM RDB$DATABASE"
          ibsqlGetID.Close
          ibsqlGetID.ExecQuery
          k = ibsqlGetID.Fields(0).AsInteger
          call gdcBaseManager.ExecSingleQueryResult("select v.USR$REF_MAX_SIZE from USR$GDMN_DATA_VERSION v " & vbCrLf & _
            "where v.USR$VERSION = :v ", version, Res, gdcBaseManager.ReadTransaction)
          maxSize = 20000
          if not isEmpty(Res) then
            if not isNull(Res(0, 0)) then
              if Res(0, 0) > 0 then
                maxSize = Res(0, 0)
              end if
            end if
          end if
         ' Set SS = Creator.GetObject(Array(""), "TStringStream", "")
          'Запрос выбора данных по каждому справочнику из таблицы Настройки справочников
          set qSelRefs = Creator.GetObject(nil, "TIBSQL", "")
          qSelRefs.Transaction = gdcBaseManager.ReadTransaction
          qSelRefs.SQL.Text = _
            "SELECT " & _
            "  R.ID, " & _
            "  R.USR$SQLQUERY, " & _
            "  coalesce(R.USR$LIST_JSON, '') as USR$LIST_JSON, " & _
            "  coalesce(R.USR$SUB_OBJECT, '') as USR$SUB_OBJECT, "  & _
            "  R.USR$NAME, " & _
            "  R.USR$MOBILENAME, " & _
            "  COALESCE(R.USR$ISCROSS, 0) AS ISCROSS, " & _
            "  coalesce(R.USR$CROSSQUERY, '') as USR$CROSSQUERY " & _
            "FROM " & _
            "  USR$GDMN_REFERENCES R " & _
            "WHERE " & _
            "  R.USR$SYSTEMKEY = :SYSTEMKEY " & _
            "  AND coalesce(R.USR$NOTACTIVE, 0) = 0 "
            
          if refName <> "" then
            qSelRefs.SQL.Text = qSelRefs.SQL.Text & vbCrLf & _
              " AND upper(r.USR$MOBILENAME) = :refName "
             qSelRefs.ParamByName("refName").AsString = Ucase(refName)
          end if
        
          qSelRefs.ParamByName("systemkey").AsInteger = AppSystemkey
          qSelRefs.ExecQuery
        
          dim qSelMetadata
          set qSelMetadata = Creator.GetObject(nil, "TIBSQL", "")
          qSelMetadata.Transaction = gdcBaseManager.ReadTransaction
        
          dim qSelParams
          set qSelParams = Creator.GetObject(nil, "TIBSQL", "")
          qSelParams.Transaction = gdcBaseManager.ReadTransaction
          if consumer = "gdmn" then
            qSelParams.SQL.Text = _
              "SELECT " & _
              "  PLINE.USR$PARAMCODE, PLINE.USR$VALUE " & _
              "FROM " & _
              "  USR$GDMN_USERS u " & _
              "  LEFT JOIN USR$GDMN_PARAMS P ON P.ID = U.USR$PARAMSKEY " & _
              "  LEFT JOIN USR$GDMN_PARAMSLINE PLINE ON PLINE.USR$MASTERKEY = P.ID " & _
              "WHERE " & _
              " P.USR$SYSTEMKEY = :SYSTEMKEY "
          else
            qSelParams.SQL.Text = _
              "SELECT " & _
              "  PLINE.USR$PARAMCODE, PLINE.USR$VALUE " & _
              "FROM " & _
              "  USR$GDMN_USERS u " & _
              "  LEFT JOIN USR$GDMN_PARAMS P ON P.ID = U.USR$PARAMSKEY " & _
              "  LEFT JOIN USR$GDMN_PARAMSLINE PLINE ON PLINE.USR$MASTERKEY = P.ID " & _
              "WHERE " & _
              "  U.USR$MOBILEID = :CONSUMER " & _
              "  AND P.USR$SYSTEMKEY = :SYSTEMKEY "
            qSelParams.ParamByName("consumer").AsString = consumerkey
          end if
          qSelParams.ParamByName("systemkey").AsInteger = AppSystemkey
        
          dim qSel, sqlQuery, qSelCross
          set qSel = Creator.GetObject(nil, "TIBSQL", "")
          qSel.Transaction = gdcBaseManager.ReadTransaction
          set qSelCross = Creator.GetObject(nil, "TIBSQL", "")
          qSelCross.Transaction = gdcBaseManager.ReadTransaction
          'Цикл по справочникам
          dim jsonRefs(), CountStreams, json
          CountStreams = 0
          json = ""
          while not qSelRefs.eof
            Set SS = Creator.GetObject(Array(""), "TStringStream", "")
            'SS.WriteStr(jsonHeader), Len(jsonHeader)
            'Тип справочника
            refType = qSelRefs.FieldByName("USR$MOBILENAME").AsString
            'Список полей справочника
            if qSelRefs.FieldByName("USR$LIST_JSON").AsVariant > "" then
              arrFields = Split(qSelRefs.FieldByName("USR$LIST_JSON").AsVariant, ",")
            end if
            dim isCross, crossQuery
            sqlQuery = qSelRefs.FieldByName("USR$SQLQUERY").AsString
            crossQuery = qSelRefs.FieldByName("USR$CROSSQUERY").AsString
            isCross = qSelRefs.FieldByName("ISCROSS").AsInteger
            'Вытягиваем данные из соответсвия полей
            dim refID
            refID = qSelRefs.FieldByName("id").AsInteger
            qSelParams.Close
            qSelParams.ExecQuery
        
            while not qSelParams.eof
              sqlQuery = Replace(sqlQuery, "%" & UCASE(qSelParams.FieldByName("USR$PARAMCODE").AsString) & "%", " " & " AND " & qSelParams.FieldByName("USR$VALUE").AsString)
              crossQuery = Replace(crossQuery, "%" & UCASE(qSelParams.FieldByName("USR$PARAMCODE").AsString) & "%", " " & " AND " & qSelParams.FieldByName("USR$VALUE").AsString)
              qSelParams.Next
            wend
        
            SS.WriteLn("""" & refType & """: {")
            SS.WriteLn("""id"":""" & qSelRefs.FieldByName("id").AsString & """," )
            SS.WriteLn("""name"":""" & refType & """,")
            if isCross = 0 then
              SS.WriteLn("""visible"": true, ")
            else
              SS.WriteLn("""visible"": false, ")
            end if
            SS.WriteLn("""description"":""" & qSelRefs.FieldByName("USR$NAME").AsString & """," )
        
            'Метаданные, если они есть
            qSelMetadata.Close
            qSelMetadata.SQL.Text = _
              "SELECT " & _
              "  b.USR$MOBILEMANE as mobileName, " & _
              "  b.USR$LOCALNAME as name, " & _
              "  b.USR$SORTORDER as sortOrder, " & _
              "   coalesce(b.USR$NOTVISIBLE, 0) as visible " & _
              "FROM " & _
              "  USR$GDMN_QUERYFIELDS b " & _
              "WHERE " & _
              "  b.USR$REFERENCELINE =  :refline " & _
              "  AND (coalesce(b.USR$NOTVISIBLE, 0) = 1 " & _
              "    OR NOT b.USR$SORTORDER IS NULL " & _
              "    OR NOT b.USR$LOCALNAME IS NULL) "
            qSelMetadata.ParamByName("refline").AsInteger = refID
            qSelMetadata.ExecQuery
        
            if qSelMetadata.RecordCount > 0 then
              SS.WriteLn("""metadata"":{")
              while not qSelMetadata.EOF
                arr0 = qSelMetadata.FieldByName("mobileName").AsString
                arr1 = qSelMetadata.FieldByName("name").AsString
                arr2 = qSelMetadata.FieldByName("sortOrder").AsInteger
                arr3 = qSelMetadata.FieldByName("visible").AsInteger
                SS.WriteLn("""" &  trim(arr0) & """: {")
                if not arr2 = "" then
                  SS.WriteLn("""sortOrder"":" & arr2)
                  if not (arr1 = "" and  arr3 = 0) then
                    SS.WriteStr ",", 1
                  end if
                end if
                if not arr1 = "" then
                  SS.WriteLn("""name"":" & web_JSonString(arr1))
                  if not (arr3 = 0) then
                    SS.WriteLn(",")
                  end if
                end if
                if arr3 <> 0 then
                  SS.WriteLn("""visible"": false ")
                end if
                qSelMetadata.Next
                if  qSelMetadata.EOF then
                  SS.WriteLn("}")
                else
                  SS.WriteLn("},")
                end if
              wend
              SS.WriteLn("},")
            end if
            'Данные
            if isCross = 0 then
              'если не кросс-справочник типа матриц или остатков
              'Вытягиваем данные из справочника
              qSel.Close
              qSel.SQL.Text = sqlQuery
              if InStr(LCase(sqlQuery), ":contactkey") > 0 then
                qSel.ParamByName("contactkey").AsInteger = contactkey
              end if
              on error resume next
              qSel.ExecQuery
              if err.Number <> 0 then
                 hasError = true
                 AError = "Ошибка в запросе! " & err.Description
                exit function
              end if
              on error goto 0
        
               Call System.Dataset2JSON(qSel, SS, qSelRefs.FieldByName("USR$LIST_JSON").AsVariant, _
                 qSelRefs.FieldByName("USR$SUB_OBJECT").AsVariant, True, False, "", False, True, "data", 0, False)
              SS.WriteLn("}")
            else
              'если  кросс-справочник типа матриц или остатков
              SS.WriteLn("""data"": [{")
              ' Запрос для корня модели
              qSelCross.Close
              qSelCross.SQL.Text = crossQuery
              if InStr(LCase(crossQuery), ":contactkey") > 0 then
                qSelCross.ParamByName("contactkey").AsInteger = contactkey
              end if
              on error resume next
              qSelCross.ExecQuery
              if err.Number <> 0 then
                 hasError = true
                 AError = "Ошибка в запросе! " & err.Description
                exit function
              end if
              on error goto 0
              '____
        
              qSel.SQL.Text = sqlQuery
              if InStr(LCase(sqlQuery), ":contactkey") > 0 then
                qSel.ParamByName("contactkey").AsInteger = contactkey
              end if
              while not qSelCross.EOF
                on error resume next
                'в запросе корневое поле, по которому достаются данные должно называться mainkey!!!
                qSel.Close
                qSel.ParamByName("mainkey").AsInteger = qSelCross.FieldByName("ID").AsInteger
                qSel.ExecQuery
                if err.Number <> 0 then
                   hasError = true
                   AError = "Ошибка в запросе! " & err.Description
                  exit function
                end if
                on error goto 0
                Call System.Dataset2JSON(qSel, SS, qSelRefs.FieldByName("USR$LIST_JSON").AsVariant, _
                   qSelRefs.FieldByName("USR$SUB_OBJECT").AsVariant, True, False, "", False, True, _
                   qSelCross.FieldByName("ID").AsString, 0, False)
                qSelCross.Next
                if not qSelCross.eof then
                  SS.WriteStr ",", 1
                end if
              wend
              SS.WriteLn("}] }")
            end if
            qSelRefs.Next
            'if not qSelRefs.eof then
        '      SS.WriteStr ",", 1
        '    end if
            dim jsonHeader, mult, isTooLong
            isTooLong = len(json + SS.DataString + jsonFooter)/1024  > maxSize
            if qSelRefs.eof or isTooLong then
              if isTooLong then
                mult = _
                 """multipartId"":""" & k & """" & _
                 ",""multipartSeq"":" & CountStreams + 1 & ""
              end if
              if  qSelRefs.eof and CountStreams > 0 then
                 mult = _
                   """multipartId"":""" & k & """" & _
                   ",""multipartSeq"":" & CountStreams + 1 & "" & _
                   ", ""multipartEOF"": true "
              end if
              redim Preserve jsonRefs(CountStreams)
              jsonHeader = getJsonHeader(AppSystemId, AppSystem, Companykey, Company, producerkey, producer,_
                consumerkey, consumer, msgID, deviceId, version, mult)
              if json <> "" then json = json + ","
              jsonRefs(CountStreams) = jsonHeader + json +  SS.DataString + jsonFooter
              CountStreams = CountStreams + 1
              mult = ""
              json = ""
            else
              if json <> "" then json = json + ","
              json = json + SS.DataString
            end if
          wend
          'web_process_ready_ref_2_0_0 = SS.DataString
          web_process_ready_ref_2_0_0 = jsonRefs
        End Function
        
        function getJsonHeader(AppSystemId, AppSystem, Companykey, Company, producerkey, producer,_
          consumerkey, consumer, msgID, deviceId, version, mult)
          dim Creator, SS, order
          set Creator = new TCreator
          dim ibsqlGetID
          set ibsqlGetID = Creator.GetObject(NULL, "TIBSQL", "")
          ibsqlGetID.Transaction = gdcBaseManager.ReadTransaction
          ibsqlGetID.SQL.Text = "SELECT DATEDIFF(MILLISECOND, CAST('01.01.1900  00:00' AS TIMESTAMP), CURRENT_TIMESTAMP)  FROM RDB$DATABASE"
          ibsqlGetID.Close
          ibsqlGetID.ExecQuery
          order = ibsqlGetID.Fields(0).AsVariant
          Set SS = Creator.GetObject(Array(""), "TStringStream", "")
          SS.WriteLn("{""status"": ""READY""," )
          if mult > "" then
            SS.WriteLn(mult + ", ")
          end if
          SS.WriteLn("""head"":{" )
          SS.WriteLn("""appSystem"":{")
          SS.WriteLn("""id"":""" & AppSystemId & """, ")
          SS.WriteLn("""name"":" & web_JSonString(AppSystem) & "},")
          SS.WriteLn("""company"":{")
          SS.WriteLn("""id"":""" & Companykey & """, ")
          SS.WriteLn("""name"":" & web_JSonString(Company) & "},")
          SS.WriteLn("""producer"":{")
          SS.WriteLn("""id"":""" & producerkey & """, ")
          SS.WriteLn("""name"":""" & producer & """},")
          SS.WriteLn("""consumer"":{")
          SS.WriteLn("""id"":""" & consumerkey & """, ")
          SS.WriteLn("""name"":""" & consumer & """},")
          if msgID <> "" then
            SS.WriteLn("""replyTo"":""" & msgID & """, ")
          end if
          SS.WriteLn("""order"":" & order & ", ")
          SS.WriteLn("""deviceId"":""" & deviceId & """, ")
          SS.WriteLn("""dateTime"":""" & web_formatDate(Date) & """")
          SS.WriteLn("}, ")
          SS.WriteLn("""body"":{")
          SS.WriteLn("""type"":""REFS"",")
          SS.WriteLn("""version"":" & version & ", ")
          SS.WriteLn("""payload"": {" )
          getJsonHeader = SS.DataString
        end function
        
  - 
    Properties: 
      Class: "TgdcFunction"
      RUID: 147115115_1730903579
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
    Fields: 
      NAME: "GetRefDataRepo2_0_0"
      COMMENT: ~
      EVENT: ~
      FUNCTIONTYPE: ~
      GROUPNAME: ~
      INHERITEDRULE: 0
      LANGUAGE: "VBScript"
      LOCALNAME: ~
      MODIFYDATE: ~
      MODULE: "UNKNOWN"
      MODULECODE: "1010001_17 APPLICATION"
      OBJECTNAME: "APPLICATION"
      OWNERNAME: ~
      PUBLICFUNCTION: 1
      SHORTCUT: ~
      USEDEBUGINFO: 0
      EDITIONDATE: 2023-02-21T15:49:43+03:00
      DISPLAYSCRIPT: | 
        GETREFDATAREPO2_0_0
        
      ENTEREDPARAMS: !!binary > 
        U0xQUlBSU1QFAAAATVNHSUQFAAAATVNHSUQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAARk5TVFBS
        U1QKAAAAQ09OVEFDVEtFWQoAAABDT05UQUNUS0VZAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEZO
        U1RQUlNUCAAAAENPTlNVTUVSCAAAAENPTlNVTUVSAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEZO
        U1RQUlNUCwAAAENPTlNVTUVSS0VZCwAAAENPTlNVTUVSS0VZAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAEZOU1RQUlNUCAAAAFBST0RVQ0VSCAAAAFBST0RVQ0VSAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAEZOU1RQUlNUCwAAAFBST0RVQ0VSS0VZCwAAAFBST0RVQ0VSS0VZAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAEZOU1RQUlNUBwAAAENPTVBBTlkHAAAAQ09NUEFOWQAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAABGTlNUUFJTVAoAAABDT01QQU5ZS0VZCgAAAENPTVBBTllLRVkAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAARk5TVFBSU1QJAAAAQVBQU1lTVEVNCQAAAEFQUFNZU1RFTQAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAABGTlNUUFJTVAsAAABBUFBTWVNURU1JRAsAAABBUFBTWVNURU1JRAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAABGTlNUUFJTVAwAAABBUFBTWVNURU1LRVkMAAAAQVBQU1lTVEVN
        S0VZAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEZOU1RQUlNUCAAAAEhBU0VSUk9SCAAAAEhBU0VS
        Uk9SAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEZOU1RQUlNUBgAAAEFFUlJPUgYAAABBRVJST1IA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAARk5TVFBSU1QHAAAAVkVSU0lPTgcAAABWRVJTSU9OAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAEZOU1RQUlNUBQAAAE9SREVSBQAAAE9SREVSAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAEZOU1RQUlNUCAAAAERFVklDRUlECAAAAERFVklDRUlEAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAEZOU1RQUlNUCwAAAFNUQVRVU0VSUk9SCwAAAFNUQVRVU0VSUk9SAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAEZOU1RQUlNUBwAAAFJFRk5BTUUHAAAAUkVGTkFNRQAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAABGTlNURkxQUg==
      SCRIPT: | 
        '#include web_formatDate
        '#include web_JSonString
        '#include web_process_ready_ref_2_0_0
        Option Explicit
        Function GetRefDataRepo2_0_0(msgID, contactkey, consumer, consumerkey, producer, producerkey, Company, Companykey, AppSystem, AppSystemId, AppSystemkey, byRef hasError, byRef AError, version, order, deviceId, statusError, refName)
            Const fmCreate = &HFFFF&
            GetRefDataRepo2_0_0 = false
            dim T: T = WinAPI.GetTickCount
        
            hasError = false
            AError = ""
            dim Creator, SS
            set Creator = new TCreator
            Set SS = Creator.GetObject(Array(""), "TStringStream", "")
        
            'Подготавливаем StringStream, в котором будет содержаться массив справочников
            if statusError > "" then
              SS.WriteLn("{""status"": ""PROCESSED_INCORRECT""," )
              SS.WriteLn("""errorMessage"":""" & statusError & """, ")
              SS.WriteLn("""head"":{" )
              SS.WriteLn("""appSystem"":{")
              SS.WriteLn("""id"":""" & AppSystemId & """, ")
              SS.WriteLn("""name"":" & web_JSonString(AppSystem) & "},")
              SS.WriteLn("""company"":{")
              SS.WriteLn("""id"":""" & Companykey & """, ")
              SS.WriteLn("""name"":" & web_JSonString(Company) & "},")
              SS.WriteLn("""producer"":{")
              SS.WriteLn("""id"":""" & producerkey & """, ")
              SS.WriteLn("""name"":""" & producer & """},")
              SS.WriteLn("""consumer"":{")
              SS.WriteLn("""id"":""" & consumerkey & """, ")
              SS.WriteLn("""name"":""" & consumer & """},")
              if msgID <> "" then
                SS.WriteLn("""replyTo"":""" & msgID & """, ")
              end if
              SS.WriteLn("""order"":" & order & ", ")
              SS.WriteLn("""deviceId"":""" & deviceId & """, ")
              SS.WriteLn("""dateTime"":""" & web_formatDate(Date) & """")
              SS.WriteLn("}, ")
              SS.WriteLn("""body"":{")
              SS.WriteLn("""type"":""REFS"",")
              SS.WriteLn("""version"":" & version & ", ")
              SS.WriteLn("""payload"": {} }}" )
              jsonText = SS.DataString
            else
              dim ssTemp, jsonHeader, jsonFooter, jsonText
              jsonFooter = "}}}"
              
              ssTemp = web_process_ready_ref_2_0_0(contactkey, consumer, consumerkey, Companykey, AppSystemkey, _
                AppSystemId, AppSystem, Company, producerkey, producer, msgID, deviceId, version, _
                hasError, AError, statusError, refName, jsonFooter )
              'jsonText = jsonText  & vbCrLf & ssTemp
              'SS.WriteStr "}}}", 3
              'jsonText = jsonText  &  "}}}"
            end if
           ' GetRefDataRepo2_0_0 =  jsonText
            GetRefDataRepo2_0_0 = ssTemp
           ' MsgBox SS.DataString
           ' MsgBox "Time: " & (WinAPI.GetTickCount - T) & "ms"
          end function
        
    Set: 
      - 
        Table: "RP_ADDITIONALFUNCTION"
        Items: 
          - 
            ADDFUNCTIONKEY: "147040220_1730903579 web_formatDate"
          - 
            ADDFUNCTIONKEY: "147040221_1730903579 web_JSonString"
          - 
            ADDFUNCTIONKEY: "241111152_1971205439 web_process_ready_ref_2_0_0"
  - 
    Properties: 
      Class: "TgdcFunction"
      RUID: 241190094_1971205439
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
      HeadObject: 241190092_1971205439
    Fields: 
      NAME: "TgdcAttrUserDefinedUSR_GDMN_USERSGetSelectClause"
      COMMENT: ~
      EVENT: ~
      FUNCTIONTYPE: ~
      GROUPNAME: ~
      INHERITEDRULE: 0
      LANGUAGE: "VBScript"
      LOCALNAME: ~
      MODIFYDATE: ~
      MODULE: "METHOD"
      MODULECODE: "147171355_1545402342 TgdcBase\\TgdcAttrUserDefined\\TgdcAttrUserDefinedUSR_GDMN_USERS"
      OBJECTNAME: "TgdcAttrUserDefinedUSR_GDMN_USERS"
      OWNERNAME: ~
      PUBLICFUNCTION: 1
      SHORTCUT: ~
      USEDEBUGINFO: 0
      EDITIONDATE: 2022-10-31T19:28:51+03:00
      DISPLAYSCRIPT: | 
        TGDCATTRUSERDEFINEDUSR_GDMN_USERSGETSELECTCLAUSE
        
      ENTEREDPARAMS: !!binary > 
        U0xQUlBSU1QEAAAAU0VMRgQAAABTRUxGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEZOU1RGTFBS
      SCRIPT: | 
        Option Explicit
        Function TgdcAttrUserDefinedUSR_GDMN_USERSGetSelectClause(Self)
        '*** Данный код необходим для вызова кода определенного в gdc-классе.***
        '*** При его удаления  возможно нарушение  правильной работы системы.***
          TgdcAttrUserDefinedUSR_GDMN_USERSGetSelectClause = _
            Inherited(Self, "GetSelectClause", Array(Self)) & _
             ", (SELECT "   & _
             "  list(S.USR$NAMEOFVALUE) "   & _
             "FROM USR$GDMN_USERSETTINGS s " & _
             "  WHERE s.USR$USERKEY =  Z.USR$CONTACTKEY) as NAMEOFVALUE "
        
        '***               Конец кода поддержки gdc-класса.                  ***
        
        End Function
        
  - 
    Properties: 
      Class: "TgdcEvent"
      RUID: 241190092_1971205439
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
    Fields: 
      DISABLE: 0
      EVENTNAME: "GETSELECTCLAUSE"
      FUNCTIONKEY: "241190094_1971205439 TgdcAttrUserDefinedUSR_GDMN_USERSGetSelectClause"
      OBJECTKEY: "147171355_1545402342 TgdcBase\\TgdcAttrUserDefined\\TgdcAttrUserDefinedUSR_GDMN_USERS"
      OBJECTNAME: "TgdcAttrUserDefinedUSR_GDMN_USERS"
      PARENTNAME: "TgdcAttrUserDefined"
      EDITIONDATE: 2022-10-31T19:28:51+03:00